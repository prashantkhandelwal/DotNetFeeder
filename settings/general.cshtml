@using FluentScheduler;
    @{
        Layout = "~/settings/_SettingsLayout.cshtml";
        Page.Title = ".NET Feeder - General Settings";
    }

    @{
        GeneralSettings _settings = null;
        if (Request.HttpMethod == "POST")
        {
            _settings = new GeneralSettings();
            _settings.pageSize = Convert.ToInt32(Request.Form["pagesize"]);
            _settings.refreshTime = Convert.ToInt32(Request.Form["refreshtime"]);
            SettingsStore.SaveSettings(_settings);
            JobManager.Initialize(new FeedJob(_settings));
        }
        else
        {
            _settings = SettingsStore.ReadSettings<GeneralSettings>("GeneralSettings") == null ? new GeneralSettings() : SettingsStore.ReadSettings<GeneralSettings>("GeneralSettings");
        }
    }

    <div class="col-xs-10 col-sm-11">
        <div class="form-horizontal">
            <form action="~/settings/general" method="post" class="form-horizontal">
                <div class="form-group">
                    <label for="pagesize" class="control-label col-xs-2">Page Size</label>
                    <div class="col-xs-2">
                        <input type="number" class="form-control" id="pagesize" name="pagesize" placeholder="Max. upto 100" value="@_settings.pageSize.ToString()">
                    </div>
                </div>
                <div class="form-group">
                    <label for="cache" class="control-label col-xs-2">Refresh Time</label>
                    <div class="col-xs-2">
                        <input type="number" class="form-control" id="refreshTime" name="refreshtime" placeholder="Time in minutes" value="@_settings.refreshTime.ToString()">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-offset-2 col-xs-10">
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>