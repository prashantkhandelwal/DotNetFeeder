<?xml version="1.0" encoding="utf-8"?><rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Programmer Feeds</title><description>Personal Feeds</description><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=c6fcee61-5035-4ec0-a803-1249966b78d3</guid><link>http://feeds.hanselman.com/~/132701611/0/scotthanselman~WallabyJS-is-a-slick-and-powerful-test-runner-for-JavaScript-in-your-IDE-or-Editor.aspx</link><category>Javascript</category><title>WallabyJS is a slick and powerful test runner for JavaScript in your IDE or Editor</title><description>&lt;div&gt;&lt;p&gt;I was reminded by a friend to explore &lt;a href="http://wallabyjs.com/"&gt;WallabyJS&lt;/a&gt; this week. I had looked at WallabyJS a while back when it was less mature but I hadn't installed a more recent version. WOW. It's coming along nicely and is super-powerful. You should check it out if you write JavaScript. It's also super fast, for these reasons:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Wallaby.js is &lt;strong&gt;insanely fast&lt;/strong&gt;, because it &lt;strong&gt;only executes tests affected by your code changes&lt;/strong&gt; and runs your tests &lt;strong&gt;in parallel&lt;/strong&gt;.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://wallabyjs.com/"&gt;WallabyJS&lt;/a&gt; has plugins for the IntelliJ platform, Visual Studio, Atom, and more recently, there's preview support for Visual Studio Code and Sublime Text support is coming soon. &lt;/p&gt; &lt;p&gt;It supports supports TypeScript, CoffeeScript, and ES7. Wallaby supports jasmine for running tests but you can plug in your own testing framework and assertion library as you like.&lt;/p&gt; &lt;p&gt;&lt;a href="http://dm.gl/2015/11/26/wallaby-for-visual-studio-code/"&gt;Installing WallabyJS for Visual Studio Code&lt;/a&gt; is very easy now that Code supports extensions.&lt;/p&gt; &lt;p&gt;&lt;img title="Installing WallabyJS on Visual Studio Code" style="margin: 0px 0px 0px 5px; display: inline" alt="Installing WallabyJS on Visual Studio Code" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/vsc_install_f3379029-ff2e-4103-af2e-c1d7db09703e.png" width="600" height="93"&gt;&lt;/p&gt; &lt;p&gt;Once you've installed the extension it will download what's needed and bootstrap WallabyJS. I did have a small issue installing, but and uninstall/reinstall fixed it, so it may have been just a blip.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/vsc_2.gif"&gt;&lt;img title="Visual Studio Code running WallabyJS" style="display: inline" alt="Visual Studio Code running WallabyJS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/vsc_thumb.gif" width="688" height="422"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want to see it in action quickly without much setup, just clone their Calculator sample at &lt;/p&gt; &lt;p&gt;&lt;code&gt;git clone https://github.com/wallabyjs/calculator-sample.git&lt;/code&gt; &lt;p&gt;Do note that it's not totally obvious once you've installed WallabyJS that you have to "start" its server manually...for now. &lt;/p&gt; &lt;p&gt;&lt;img title="Starting WallabyJS" style="margin: 0px 0px 0px 5px; display: inline" alt="Starting WallabyJS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/image_62546902-a056-4f0f-8b2a-832fdf07aa04.png" width="646" height="225"&gt;&lt;/p&gt; &lt;p&gt;Once it has started, it's mostly automatic and runs tests as you type and save. You can access all WallabyJS's commands with hotkeys or from the Visual Studio Code command palette. &lt;/p&gt; &lt;p&gt;&lt;img title="WallabyJS Commands in VS Code" style="margin: 0px 0px 0px 5px; display: inline" alt="WallabyJS Commands in VS Code" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/image_522d77ec-dd22-4468-8d5a-17e24fb6f473.png" width="328" height="364"&gt;&lt;/p&gt; &lt;p&gt;It's great to see a powerful tool like this working in Visual Studio Code. Remember you can get VSCode (now open source!) for any platform here &lt;a href="http://code.visualstudio.com"&gt;code.visualstudio.com&lt;/a&gt; and you can &lt;a href="http://wallabyjs.com/"&gt;get WallabyJS&lt;/a&gt; at their main site.&lt;/p&gt; &lt;p&gt; &lt;hr&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to my friends at Redgate for sponsoring the feed this week.Check out their amazing &lt;strong&gt;FREE eBook!&lt;/strong&gt; &lt;strong&gt;Discover 52 tips to improve your .NET performance:&lt;/strong&gt; Our new eBook features dozens of tips and tricks to boost .NET performance. With contributions from .NET experts around the world, you’ll have a faster app in no time. &lt;a href="http://bit.ly/1ShCB9W"&gt;Download your free copy.&lt;/a&gt;&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Wed, 13 Jan 2016 07:20:41 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/WallabyJSIsASlickAndPowerfulTestRunnerForJavaScriptInYourIDEOrEditor.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=c6fcee61-5035-4ec0-a803-1249966b78d3</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=c6fcee61-5035-4ec0-a803-1249966b78d3</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=c6fcee61-5035-4ec0-a803-1249966b78d3</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=c6fcee61-5035-4ec0-a803-1249966b78d3</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">12</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=c6fcee61-5035-4ec0-a803-1249966b78d3</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;I was reminded by a friend to explore &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~wallabyjs.com/"&gt;WallabyJS&lt;/a&gt; this week. I had looked at WallabyJS a while back when it was less mature but I hadn't installed a more recent version. WOW. It's coming along nicely and is super-powerful. You should check it out if you write JavaScript. It's also super fast, for these reasons:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Wallaby.js is &lt;strong&gt;insanely fast&lt;/strong&gt;, because it &lt;strong&gt;only executes tests affected by your code changes&lt;/strong&gt; and runs your tests &lt;strong&gt;in parallel&lt;/strong&gt;.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~wallabyjs.com/"&gt;WallabyJS&lt;/a&gt; has plugins for the IntelliJ platform, Visual Studio, Atom, and more recently, there's preview support for Visual Studio Code and Sublime Text support is coming soon. &lt;/p&gt; &lt;p&gt;It supports supports TypeScript, CoffeeScript, and ES7. Wallaby supports jasmine for running tests but you can plug in your own testing framework and assertion library as you like.&lt;/p&gt; &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~dm.gl/2015/11/26/wallaby-for-visual-studio-code/"&gt;Installing WallabyJS for Visual Studio Code&lt;/a&gt; is very easy now that Code supports extensions.&lt;/p&gt; &lt;p&gt;&lt;img title="Installing WallabyJS on Visual Studio Code" style="margin: 0px 0px 0px 5px; display: inline" alt="Installing WallabyJS on Visual Studio Code" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/vsc_install_f3379029-ff2e-4103-af2e-c1d7db09703e.png" width="600" height="93"&gt;&lt;/p&gt; &lt;p&gt;Once you've installed the extension it will download what's needed and bootstrap WallabyJS. I did have a small issue installing, but and uninstall/reinstall fixed it, so it may have been just a blip.&lt;/p&gt; &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/vsc_2.gif"&gt;&lt;img title="Visual Studio Code running WallabyJS" style="display: inline" alt="Visual Studio Code running WallabyJS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/vsc_thumb.gif" width="688" height="422"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want to see it in action quickly without much setup, just clone their Calculator sample at &lt;/p&gt; &lt;p&gt;&lt;code&gt;git clone https://github.com/wallabyjs/calculator-sample.git&lt;/code&gt; &lt;p&gt;Do note that it's not totally obvious once you've installed WallabyJS that you have to "start" its server manually...for now. &lt;/p&gt; &lt;p&gt;&lt;img title="Starting WallabyJS" style="margin: 0px 0px 0px 5px; display: inline" alt="Starting WallabyJS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/image_62546902-a056-4f0f-8b2a-832fdf07aa04.png" width="646" height="225"&gt;&lt;/p&gt; &lt;p&gt;Once it has started, it's mostly automatic and runs tests as you type and save. You can access all WallabyJS's commands with hotkeys or from the Visual Studio Code command palette. &lt;/p&gt; &lt;p&gt;&lt;img title="WallabyJS Commands in VS Code" style="margin: 0px 0px 0px 5px; display: inline" alt="WallabyJS Commands in VS Code" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f0f1c1d00d25_1446F/image_522d77ec-dd22-4468-8d5a-17e24fb6f473.png" width="328" height="364"&gt;&lt;/p&gt; &lt;p&gt;It's great to see a powerful tool like this working in Visual Studio Code. Remember you can get VSCode (now open source!) for any platform here &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~code.visualstudio.com"&gt;code.visualstudio.com&lt;/a&gt; and you can &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~wallabyjs.com/"&gt;get WallabyJS&lt;/a&gt; at their main site.&lt;/p&gt; &lt;p&gt; &lt;hr&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to my friends at Redgate for sponsoring the feed this week.Check out their amazing &lt;strong&gt;FREE eBook!&lt;/strong&gt; &lt;strong&gt;Discover 52 tips to improve your .NET performance:&lt;/strong&gt; Our new eBook features dozens of tips and tricks to boost .NET performance. With contributions from .NET experts around the world, you’ll have a faster app in no time. &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1ShCB9W"&gt;Download your free copy.&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br/&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/132701611/0/scotthanselman"&gt;
&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/132701611/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=c9a3a8b5-15f4-4fe4-a89b-34fce1d23a64</guid><link>http://feeds.hanselman.com/~/132030487/0/scotthanselman~When-did-we-stop-caring-about-memory-management.aspx</link><category>ASP.NET</category><title>When did we stop caring about memory management?</title><description>&lt;div&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/SIPP_memory"&gt;&lt;img title="MEMORY! - Image from Wikimedia Commons" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="MEMORY! - Image from Wikimedia Commons" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/1bd840e5f0a0_8772/SIPP-Modul_3a06546c-6878-4d7a-ac18-d6280d492520.jpg" width="450" align="right" height="245"&gt;&lt;/a&gt;This post is neither a rant nor a complaint, but rather, an observation. &lt;/p&gt; &lt;p&gt;There's some amazing work happening over in the C#-based Kestrel web server. This is an little open source webserver that (currently) sits on libuv and lets you run ASP.NET web applications on Windows, Mac, or Linux. It was started by Louis DeJardin but more recently Ben Adams from Illyriad Games has become a primary committer, and obsessive optimizer.&lt;/p&gt;  &lt;p&gt;Kestrel is now doing 1.2 MILLION requests a second on benchmarking hardware (all published at &lt;a title="https://github.com/aspnet/benchmarks" href="https://github.com/aspnet/benchmarks"&gt;https://github.com/aspnet/benchmarks&lt;/a&gt;) and it's written in C#. There's some amazing stuff going on in the code base with &lt;a href="https://github.com/aspnet/KestrelHttpServer/pull/527/files"&gt;various micro-optimizations that management memory more intelligently&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;blockquote lang="en" class="twitter-tweet" data-conversation="none"&gt; &lt;p lang="en" dir="ltr"&gt;. &lt;a href="https://twitter.com/ben_a_adams"&gt;@ben_a_adams&lt;/a&gt; I think it's safe to say you're on to something in that PR &lt;a href="https://t.co/ELIyxhYyun"&gt;pic.twitter.com/ELIyxhYyun&lt;/a&gt;&lt;/p&gt;— Damian Edwards (@DamianEdwards) &lt;a href="https://twitter.com/DamianEdwards/status/679750255772958720"&gt;December 23, 2015&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt; &lt;/p&gt;&lt;p&gt;Here's my question to you, Dear Reader, and I realize it will differ based on your language of choice: &lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;When did you stop caring about Memory Management, and is that a bad thing?&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;When I started school, although I had poked around in BASIC a bit, I learned x86 Assembler first, then C, then Java. We were taught intense memory management and learned on things like &lt;a href="http://www.minix3.org/"&gt;Minix&lt;/a&gt;, writing device drivers, before moving up the stack to garbage collected languages. Many years later &lt;a href="http://www.hanselman.com/blog/RescuingTheTinyOSInC.aspx"&gt;I wrote a tiny operating system simulator in C#&lt;/a&gt; that simulated virtual memory vs physical memory, page faults, etc. &lt;/p&gt; &lt;p&gt; There's a &lt;a href="https://www.ravenbrook.com/project/mps/master/manual/html/mmref/lang.html"&gt;great reference here at Ravenbook (within their Memory Pool System docs) that lists popular languages and their memory management strategies&lt;/a&gt;. Let me pull this bit out about the C language:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The [C] language is notorious for fostering memory management bugs, including: &lt;ol&gt; &lt;li&gt;Accessing arrays with indexes that are out of bounds;  &lt;li&gt;Using &lt;a href="https://www.ravenbrook.com/project/mps/master/manual/html/glossary/s.html#term-stack-allocation"&gt;&lt;em&gt;stack-allocated&lt;/em&gt;&lt;/a&gt; structures beyond their &lt;a href="https://www.ravenbrook.com/project/mps/master/manual/html/glossary/l.html#term-lifetime"&gt;&lt;em&gt;lifetimes&lt;/em&gt;&lt;/a&gt; (see &lt;a href="https://www.ravenbrook.com/project/mps/master/manual/html/glossary/u.html#term-use-after-free"&gt;&lt;em&gt;use after free&lt;/em&gt;&lt;/a&gt;);  &lt;li&gt;Using &lt;a href="https://www.ravenbrook.com/project/mps/master/manual/html/glossary/h.html#term-heap-allocation"&gt;&lt;em&gt;heap-allocated&lt;/em&gt;&lt;/a&gt; structures after &lt;a href="https://www.ravenbrook.com/project/mps/master/manual/html/glossary/f.html#term-free-1"&gt;&lt;em&gt;freeing&lt;/em&gt;&lt;/a&gt; them (see &lt;a href="https://www.ravenbrook.com/project/mps/master/manual/html/glossary/u.html#term-use-after-free"&gt;&lt;em&gt;use after free&lt;/em&gt;&lt;/a&gt;);  &lt;li&gt;Neglecting to free heap-allocated objects when they are no longer required (see &lt;a href="https://www.ravenbrook.com/project/mps/master/manual/html/glossary/m.html#term-memory-leak"&gt;&lt;em&gt;memory leak&lt;/em&gt;&lt;/a&gt;);  &lt;li&gt;Failing to allocate memory for a &lt;a href="https://www.ravenbrook.com/project/mps/master/manual/html/glossary/p.html#term-pointer"&gt;&lt;em&gt;pointer&lt;/em&gt;&lt;/a&gt; before using it;  &lt;li&gt;Allocating insufficient memory for the intended contents;  &lt;li&gt;Loading from allocated memory before storing into it;  &lt;li&gt;Dereferencing non-pointers as if they were pointers.&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt; &lt;p&gt;When was the last time you thought about these things, assuming you're an &lt;strong&gt;application developer&lt;/strong&gt;? &lt;/p&gt; &lt;p&gt;I've met and spoken to a number of application developers who have never thought about memory management in 10 and 15 year long careers. Java and C# and other languages have completely hidden this aspect of software from them. &lt;/p&gt; &lt;p&gt;BUT.&lt;/p&gt; &lt;p&gt;They have performance issues. They don't profile their applications. And sometimes, just sometimes, they struggle to find out why their application is slow.&lt;/p&gt; &lt;p&gt;My buddy Glenn Condron says you don't have to think about memory management until you totally have to think about memory management. He says "time spent sweating memory is time you're not writing your app. The hard part is developing the experience is that you need to know when you need to care."&lt;/p&gt; &lt;p&gt;I've talked about this a little in &lt;a href="http://thisdeveloperslife.com/post/1-0-6-abstraction"&gt;podcasts like the This Developer's Life episode on Abstractions&lt;/a&gt; with guests like &lt;a href="http://en.wikipedia.org/wiki/Ward_Cunningham"&gt;Ward Cunningham&lt;/a&gt;, &lt;a href="http://www.charlespetzold.com/"&gt;Charles Petzold&lt;/a&gt;, and &lt;a href="http://danbricklin.com/history/saimiddle.htm"&gt;Dan Bricklin&lt;/a&gt; as well as this post called &lt;a href="http://www.hanselman.com/blog/PleaseLearnToThinkAboutAbstractions.aspx"&gt;Please Learn to Think about Abstractions&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;How low should we go? How useful is it to know about C-style memory management when you're a front-end JavaScript Developer? Should we make it functional then make it fast...but if it's fast enough, then just make it work? The tragedy here is that if it "works on my machine" then the developer never goes back to tighten the screws.&lt;/p&gt; &lt;p&gt;I propose it IS important but I also think it's important to know &lt;a href="https://www.youtube.com/watch?v=K4JhruinbWc"&gt;how a differential gear works&lt;/a&gt;, but that's a "because" argument. What do you think?&lt;/p&gt; &lt;hr&gt;  &lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to Infragistics for sponsoring the blog this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://bit.ly/1JWnScH"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://bit.ly/1JWnScH"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Fri, 08 Jan 2016 18:22:31 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/WhenDidWeStopCaringAboutMemoryManagement.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=c9a3a8b5-15f4-4fe4-a89b-34fce1d23a64</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=c9a3a8b5-15f4-4fe4-a89b-34fce1d23a64</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=c9a3a8b5-15f4-4fe4-a89b-34fce1d23a64</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=c9a3a8b5-15f4-4fe4-a89b-34fce1d23a64</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">76</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=c9a3a8b5-15f4-4fe4-a89b-34fce1d23a64</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://en.wikipedia.org/wiki/SIPP_memory"&gt;&lt;img title="MEMORY! - Image from Wikimedia Commons" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="MEMORY! - Image from Wikimedia Commons" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/1bd840e5f0a0_8772/SIPP-Modul_3a06546c-6878-4d7a-ac18-d6280d492520.jpg" width="450" align="right" height="245"&gt;&lt;/a&gt;This post is neither a rant nor a complaint, but rather, an observation. &lt;/p&gt; &lt;p&gt;There's some amazing work happening over in the C#-based Kestrel web server. This is an little open source webserver that (currently) sits on libuv and lets you run ASP.NET web applications on Windows, Mac, or Linux. It was started by Louis DeJardin but more recently Ben Adams from Illyriad Games has become a primary committer, and obsessive optimizer.&lt;/p&gt;  &lt;p&gt;Kestrel is now doing 1.2 MILLION requests a second on benchmarking hardware (all published at &lt;a title="https://github.com/aspnet/benchmarks" href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/aspnet/benchmarks"&gt;https://github.com/aspnet/benchmarks&lt;/a&gt;) and it's written in C#. There's some amazing stuff going on in the code base with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/aspnet/KestrelHttpServer/pull/527/files"&gt;various micro-optimizations that management memory more intelligently&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;blockquote lang="en" class="twitter-tweet" data-conversation="none"&gt; &lt;p lang="en" dir="ltr"&gt;. &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/ben_a_adams"&gt;@ben_a_adams&lt;/a&gt; I think it's safe to say you're on to something in that PR &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://t.co/ELIyxhYyun"&gt;pic.twitter.com/ELIyxhYyun&lt;/a&gt;&lt;/p&gt;— Damian Edwards (@DamianEdwards) &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://twitter.com/DamianEdwards/status/679750255772958720"&gt;December 23, 2015&lt;/a&gt;&lt;/blockquote&gt; &lt;/p&gt;&lt;p&gt;Here's my question to you, Dear Reader, and I realize it will differ based on your language of choice: &lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;When did you stop caring about Memory Management, and is that a bad thing?&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;When I started school, although I had poked around in BASIC a bit, I learned x86 Assembler first, then C, then Java. We were taught intense memory management and learned on things like &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.minix3.org/"&gt;Minix&lt;/a&gt;, writing device drivers, before moving up the stack to garbage collected languages. Many years later &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/RescuingTheTinyOSInC.aspx"&gt;I wrote a tiny operating system simulator in C#&lt;/a&gt; that simulated virtual memory vs physical memory, page faults, etc. &lt;/p&gt; &lt;p&gt; There's a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.ravenbrook.com/project/mps/master/manual/html/mmref/lang.html"&gt;great reference here at Ravenbook (within their Memory Pool System docs) that lists popular languages and their memory management strategies&lt;/a&gt;. Let me pull this bit out about the C language:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The [C] language is notorious for fostering memory management bugs, including: &lt;ol&gt; &lt;li&gt;Accessing arrays with indexes that are out of bounds;  &lt;li&gt;Using &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.ravenbrook.com/project/mps/master/manual/html/glossary/s.html#term-stack-allocation"&gt;&lt;em&gt;stack-allocated&lt;/em&gt;&lt;/a&gt; structures beyond their &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.ravenbrook.com/project/mps/master/manual/html/glossary/l.html#term-lifetime"&gt;&lt;em&gt;lifetimes&lt;/em&gt;&lt;/a&gt; (see &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.ravenbrook.com/project/mps/master/manual/html/glossary/u.html#term-use-after-free"&gt;&lt;em&gt;use after free&lt;/em&gt;&lt;/a&gt;);  &lt;li&gt;Using &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.ravenbrook.com/project/mps/master/manual/html/glossary/h.html#term-heap-allocation"&gt;&lt;em&gt;heap-allocated&lt;/em&gt;&lt;/a&gt; structures after &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.ravenbrook.com/project/mps/master/manual/html/glossary/f.html#term-free-1"&gt;&lt;em&gt;freeing&lt;/em&gt;&lt;/a&gt; them (see &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.ravenbrook.com/project/mps/master/manual/html/glossary/u.html#term-use-after-free"&gt;&lt;em&gt;use after free&lt;/em&gt;&lt;/a&gt;);  &lt;li&gt;Neglecting to free heap-allocated objects when they are no longer required (see &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.ravenbrook.com/project/mps/master/manual/html/glossary/m.html#term-memory-leak"&gt;&lt;em&gt;memory leak&lt;/em&gt;&lt;/a&gt;);  &lt;li&gt;Failing to allocate memory for a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.ravenbrook.com/project/mps/master/manual/html/glossary/p.html#term-pointer"&gt;&lt;em&gt;pointer&lt;/em&gt;&lt;/a&gt; before using it;  &lt;li&gt;Allocating insufficient memory for the intended contents;  &lt;li&gt;Loading from allocated memory before storing into it;  &lt;li&gt;Dereferencing non-pointers as if they were pointers.&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt; &lt;p&gt;When was the last time you thought about these things, assuming you're an &lt;strong&gt;application developer&lt;/strong&gt;? &lt;/p&gt; &lt;p&gt;I've met and spoken to a number of application developers who have never thought about memory management in 10 and 15 year long careers. Java and C# and other languages have completely hidden this aspect of software from them. &lt;/p&gt; &lt;p&gt;BUT.&lt;/p&gt; &lt;p&gt;They have performance issues. They don't profile their applications. And sometimes, just sometimes, they struggle to find out why their application is slow.&lt;/p&gt; &lt;p&gt;My buddy Glenn Condron says you don't have to think about memory management until you totally have to think about memory management. He says "time spent sweating memory is time you're not writing your app. The hard part is developing the experience is that you need to know when you need to care."&lt;/p&gt; &lt;p&gt;I've talked about this a little in &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~thisdeveloperslife.com/post/1-0-6-abstraction"&gt;podcasts like the This Developer's Life episode on Abstractions&lt;/a&gt; with guests like &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~en.wikipedia.org/wiki/Ward_Cunningham"&gt;Ward Cunningham&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.charlespetzold.com/"&gt;Charles Petzold&lt;/a&gt;, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~danbricklin.com/history/saimiddle.htm"&gt;Dan Bricklin&lt;/a&gt; as well as this post called &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/PleaseLearnToThinkAboutAbstractions.aspx"&gt;Please Learn to Think about Abstractions&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;How low should we go? How useful is it to know about C-style memory management when you're a front-end JavaScript Developer? Should we make it functional then make it fast...but if it's fast enough, then just make it work? The tragedy here is that if it "works on my machine" then the developer never goes back to tighten the screws.&lt;/p&gt; &lt;p&gt;I propose it IS important but I also think it's important to know &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.youtube.com/watch?v=K4JhruinbWc"&gt;how a differential gear works&lt;/a&gt;, but that's a "because" argument. What do you think?&lt;/p&gt; &lt;hr&gt;  &lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to Infragistics for sponsoring the blog this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1JWnScH"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1JWnScH"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;
&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br/&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/132030487/0/scotthanselman"&gt;
&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/132030487/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=6cbb04de-9804-48f1-bad8-62afc0aef3eb</guid><link>http://feeds.hanselman.com/~/131629835/0/scotthanselman~Best-practices-for-private-config-data-and-connection-strings-in-configuration-in-ASPNET-and-Azure.aspx</link><category>ASP.NET</category><title>Best practices for private config data and connection strings in configuration in ASP.NET and Azure</title><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://getcolorstock.com"&gt;&lt;img title="Image Copyright Shea Parikh / getcolorstock.com - used under license" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Image Copyright Shea Parikh / getcolorstock.com - used under license" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/44e8b110adbe_1342D/IMG_6004_cfa16741-3489-4eaf-a484-4df0bc1d138a.jpg" width="500" align="right" height="335"&gt;&lt;/a&gt;A reader emailed asking how to avoid accidentally checking in passwords and other sensitive data into GitHub or source control in general. I think it's fair to say that we've all done this once or twice - it's a rite of passage for developers old and new.&lt;/p&gt; &lt;p&gt;The simplest way to avoid checking in passwords and/or connection strings into source control is to (no joke) &lt;strong&gt;keep passwords and connection strings out of your source.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Sounds condescending or funny, but it's not, it's true. You can't check in what doesn't exist on disk.&lt;/p&gt; &lt;p&gt;That said, sometimes you just need to mark a file as "ignored," meaning it's not under source control. For some systems that involves externalizing configuration values that may be in shared config files with a bunch of non-sensitive config data.&lt;/p&gt; &lt;h3&gt;ASP.NET 4.6 secrets and connection strings&lt;/h3&gt; &lt;p&gt;Just to be clear, how "secret" something is is up to you. If it's truly cryptographically secret or something like a private key, you should be looking at &lt;a href="https://azure.microsoft.com/en-us/services/key-vault/"&gt;data protection systems or a Key Vault like Azure Key Vault&lt;/a&gt;. Here we are talking about medium business impact web apps with API keys for 3rd party web APIs and connection strings that can live in memory for short periods. Be smart.&lt;/p&gt; &lt;p&gt;ASP.NET 4.6 has web.config XML files like this with name/value pairs.&lt;/p&gt;&lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;"&gt;&amp;lt;appSettings&amp;gt;      &lt;br&gt;    &amp;lt;add key="name" value="someValue" /&amp;gt;&lt;br&gt;    &amp;lt;add key="name" value="someSECRETValue" /&amp;gt;&lt;br&gt;&amp;lt;/appSettings&amp;gt;      &lt;/pre&gt;
&lt;p&gt;We don't want secrets in there! Instead, move them out like this:&lt;/p&gt;&lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;"&gt;&amp;lt;appSettings file="Web.SECRETS.config"&amp;gt;      &lt;br&gt;    &amp;lt;add key="name" value="someValue" /&amp;gt;&lt;br&gt;&amp;lt;/appSettings&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Then you just put another appSettings section in that web.secrets.config file and it gets merged at runtime.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: It's worth pointing out that the AppSettings technique also works for Console apps with an app.config.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Finally, be sure to add Web.secrets.config (or, even better, make it *.secrets and use a unique extension to identify your sensitive config.&lt;/p&gt;
&lt;p&gt;This externalizing of config also works with the &amp;lt;connectionStrings&amp;gt; section, except you use the configSource attribute like this:&lt;/p&gt;&lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;"&gt;&amp;lt;connectionStrings configSource="secretConnectionStrings.config"&amp;gt;&lt;br&gt;&amp;lt;/connectionStrings&amp;gt;&lt;/pre&gt;
&lt;h3&gt;Connection Strings/App Secrets in Azure&lt;/h3&gt;
&lt;p&gt;When you're deploying a web app to Azure (as often these apps are deployed from source/GitHub, etc) you should NEVER put your connection strings or appSettings in web.config or hard code them.&lt;/p&gt;
&lt;p&gt;Instead, always use the Application Settings configuration section of Web Apps in Azure. &lt;/p&gt;
&lt;p&gt;&lt;img title="Application Settings and Secrets in Azure" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="Application Settings and Secrets in Azure" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/44e8b110adbe_1342D/image_c0ff064a-92fb-4b74-94b8-16a076986c91.png" width="655" height="545"&gt;&lt;/p&gt;
&lt;p&gt;These collection strings and name value pairs will automatically be made available &lt;em&gt;transparently &lt;/em&gt;to your website so you don't need to change any ASP.NET code. Considered them to have more narrow scope than what's in web.config, and the system will merge the set automatically. &lt;/p&gt;
&lt;p&gt;Additionally they are made available as Environment Variables, so you can Environment.GetEnvironmentVariable("APPSETTING_yourkey") as well. This works in any web framework, not just ASP.NET, so in PHP you just getenv('APPSETTING_yourkey") as you like.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://azure.microsoft.com/en-us/blog/windows-azure-web-sites-how-application-strings-and-connection-strings-work/"&gt;full list&lt;/a&gt; of database connection string types and the prepended string used for environment variables is below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you select “Sql Databases”, the prepended string is “SQLAZURECONNSTR_” 
&lt;li&gt;If you select “SQL Server” the prepended string is “SQLCONNSTR_” 
&lt;li&gt;If you select “MySQL” the prepended string is “MYSQLCONNSTR_” 
&lt;li&gt;If you select “Custom” the prepended string is “CUSTOMCONNSTR_”&lt;/li&gt;&lt;/ul&gt;
&lt;h3&gt;ASP.NET 5&lt;/h3&gt;
&lt;p&gt;ASP.NET 5 has the concept of User Secrets or User-Level Secrets where the key/value pair &lt;em&gt;does &lt;/em&gt;exist in a file BUT that file isn't in your project folder, it's stored in your OS user profile folder. That way there's no chance it'll get checked into source control. There's a &lt;a href="https://docs.asp.net/en/latest/security/app-secrets.html"&gt;secret manager&lt;/a&gt; (it's all beta so expect it to change) where you can set name/value pairs.&lt;/p&gt;
&lt;p&gt;ASP.NET also has very flexible scoping rules in code. You can have an appSettings, then an environment-specific (dev, test, staging, prod) appSettings, then User Secrets, and &lt;em&gt;then &lt;/em&gt;environment variables. All of this is &lt;a href="https://docs.asp.net/en/latest/security/app-secrets.html#accessing-user-secrets-via-configuration"&gt;done via code configuration&lt;/a&gt; and is, as I mentioned, deeply flexible. If you don't like it, you can change it.&lt;/p&gt;&lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;"&gt;var builder = new ConfigurationBuilder()&lt;br&gt;    .AddJsonFile("appsettings.json")&lt;br&gt;    .AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: true);&lt;br&gt;&lt;br&gt;if (env.IsDevelopment())&lt;br&gt;{&lt;br&gt;    // For more details on using the user secret store see http://go.microsoft.com/fwlink/?LinkID=532709&lt;br&gt;    builder.AddUserSecrets();&lt;br&gt;}&lt;br&gt;&lt;br&gt;builder.AddEnvironmentVariables();&lt;br&gt;Configuration = builder.Build();
&lt;/pre&gt;
&lt;p&gt;So, in conclusion:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don't put private stuff in code. &lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Seems obvious, &lt;a href="http://www.internetnews.com/blog/skerner/github-search-exposes-passwords.html"&gt;but&lt;/a&gt;...&lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Avoid putting private stuff in &lt;em&gt;common &lt;/em&gt;config files 
&lt;ul&gt;
&lt;li&gt;Externalize them AND ignore the externalized file so they don't get checked in&lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Consider using Environment Variables or User-level config options. 
&lt;ul&gt;
&lt;li&gt;Keep sensitive config out of your project folder at development time&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;I'm sure I missed something. What are YOUR tips, Dear Reader? &lt;/p&gt;
&lt;h3&gt;Resources&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.asp.net/identity/overview/features-api/best-practices-for-deploying-passwords-and-other-sensitive-data-to-aspnet-and-azure"&gt;Best practices for deploying passwords and other sensitive data to ASP.NET and Azure App Service&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Image Copyright Shea Parikh - used under license from &lt;/em&gt;&lt;a href="http://getcolorstock.com"&gt;&lt;em&gt;http://getcolorstock.com&lt;/em&gt;&lt;/a&gt;&lt;em&gt; &lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to Infragistics for sponsoring the blog this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://bit.ly/1JWnScH"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://bit.ly/1JWnScH"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Wed, 06 Jan 2016 06:59:12 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/BestPracticesForPrivateConfigDataAndConnectionStringsInConfigurationInASPNETAndAzure.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=6cbb04de-9804-48f1-bad8-62afc0aef3eb</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=6cbb04de-9804-48f1-bad8-62afc0aef3eb</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=6cbb04de-9804-48f1-bad8-62afc0aef3eb</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=6cbb04de-9804-48f1-bad8-62afc0aef3eb</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">49</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=6cbb04de-9804-48f1-bad8-62afc0aef3eb</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~getcolorstock.com"&gt;&lt;img title="Image Copyright Shea Parikh / getcolorstock.com - used under license" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Image Copyright Shea Parikh / getcolorstock.com - used under license" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/44e8b110adbe_1342D/IMG_6004_cfa16741-3489-4eaf-a484-4df0bc1d138a.jpg" width="500" align="right" height="335"&gt;&lt;/a&gt;A reader emailed asking how to avoid accidentally checking in passwords and other sensitive data into GitHub or source control in general. I think it's fair to say that we've all done this once or twice - it's a rite of passage for developers old and new.&lt;/p&gt; &lt;p&gt;The simplest way to avoid checking in passwords and/or connection strings into source control is to (no joke) &lt;strong&gt;keep passwords and connection strings out of your source.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Sounds condescending or funny, but it's not, it's true. You can't check in what doesn't exist on disk.&lt;/p&gt; &lt;p&gt;That said, sometimes you just need to mark a file as "ignored," meaning it's not under source control. For some systems that involves externalizing configuration values that may be in shared config files with a bunch of non-sensitive config data.&lt;/p&gt; &lt;h3&gt;ASP.NET 4.6 secrets and connection strings&lt;/h3&gt; &lt;p&gt;Just to be clear, how "secret" something is is up to you. If it's truly cryptographically secret or something like a private key, you should be looking at &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://azure.microsoft.com/en-us/services/key-vault/"&gt;data protection systems or a Key Vault like Azure Key Vault&lt;/a&gt;. Here we are talking about medium business impact web apps with API keys for 3rd party web APIs and connection strings that can live in memory for short periods. Be smart.&lt;/p&gt; &lt;p&gt;ASP.NET 4.6 has web.config XML files like this with name/value pairs.&lt;/p&gt;&lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;"&gt;&amp;lt;appSettings&amp;gt;      
&lt;br&gt;    &amp;lt;add key="name" value="someValue" /&amp;gt;
&lt;br&gt;    &amp;lt;add key="name" value="someSECRETValue" /&amp;gt;
&lt;br&gt;&amp;lt;/appSettings&amp;gt;      &lt;/pre&gt;
&lt;p&gt;We don't want secrets in there! Instead, move them out like this:&lt;/p&gt;&lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;"&gt;&amp;lt;appSettings file="Web.SECRETS.config"&amp;gt;      
&lt;br&gt;    &amp;lt;add key="name" value="someValue" /&amp;gt;
&lt;br&gt;&amp;lt;/appSettings&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Then you just put another appSettings section in that web.secrets.config file and it gets merged at runtime.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: It's worth pointing out that the AppSettings technique also works for Console apps with an app.config.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Finally, be sure to add Web.secrets.config (or, even better, make it *.secrets and use a unique extension to identify your sensitive config.&lt;/p&gt;
&lt;p&gt;This externalizing of config also works with the &amp;lt;connectionStrings&amp;gt; section, except you use the configSource attribute like this:&lt;/p&gt;&lt;pre class="brush: xml; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;"&gt;&amp;lt;connectionStrings configSource="secretConnectionStrings.config"&amp;gt;
&lt;br&gt;&amp;lt;/connectionStrings&amp;gt;&lt;/pre&gt;
&lt;h3&gt;Connection Strings/App Secrets in Azure&lt;/h3&gt;
&lt;p&gt;When you're deploying a web app to Azure (as often these apps are deployed from source/GitHub, etc) you should NEVER put your connection strings or appSettings in web.config or hard code them.&lt;/p&gt;
&lt;p&gt;Instead, always use the Application Settings configuration section of Web Apps in Azure. &lt;/p&gt;
&lt;p&gt;&lt;img title="Application Settings and Secrets in Azure" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="Application Settings and Secrets in Azure" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/44e8b110adbe_1342D/image_c0ff064a-92fb-4b74-94b8-16a076986c91.png" width="655" height="545"&gt;&lt;/p&gt;
&lt;p&gt;These collection strings and name value pairs will automatically be made available &lt;em&gt;transparently &lt;/em&gt;to your website so you don't need to change any ASP.NET code. Considered them to have more narrow scope than what's in web.config, and the system will merge the set automatically. &lt;/p&gt;
&lt;p&gt;Additionally they are made available as Environment Variables, so you can Environment.GetEnvironmentVariable("APPSETTING_yourkey") as well. This works in any web framework, not just ASP.NET, so in PHP you just getenv('APPSETTING_yourkey") as you like.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://azure.microsoft.com/en-us/blog/windows-azure-web-sites-how-application-strings-and-connection-strings-work/"&gt;full list&lt;/a&gt; of database connection string types and the prepended string used for environment variables is below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you select “Sql Databases”, the prepended string is “SQLAZURECONNSTR_” 
&lt;li&gt;If you select “SQL Server” the prepended string is “SQLCONNSTR_” 
&lt;li&gt;If you select “MySQL” the prepended string is “MYSQLCONNSTR_” 
&lt;li&gt;If you select “Custom” the prepended string is “CUSTOMCONNSTR_”&lt;/li&gt;&lt;/ul&gt;
&lt;h3&gt;ASP.NET 5&lt;/h3&gt;
&lt;p&gt;ASP.NET 5 has the concept of User Secrets or User-Level Secrets where the key/value pair &lt;em&gt;does &lt;/em&gt;exist in a file BUT that file isn't in your project folder, it's stored in your OS user profile folder. That way there's no chance it'll get checked into source control. There's a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://docs.asp.net/en/latest/security/app-secrets.html"&gt;secret manager&lt;/a&gt; (it's all beta so expect it to change) where you can set name/value pairs.&lt;/p&gt;
&lt;p&gt;ASP.NET also has very flexible scoping rules in code. You can have an appSettings, then an environment-specific (dev, test, staging, prod) appSettings, then User Secrets, and &lt;em&gt;then &lt;/em&gt;environment variables. All of this is &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://docs.asp.net/en/latest/security/app-secrets.html#accessing-user-secrets-via-configuration"&gt;done via code configuration&lt;/a&gt; and is, as I mentioned, deeply flexible. If you don't like it, you can change it.&lt;/p&gt;&lt;pre class="brush: csharp; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;"&gt;var builder = new ConfigurationBuilder()
&lt;br&gt;    .AddJsonFile("appsettings.json")
&lt;br&gt;    .AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: true);
&lt;br&gt;
&lt;br&gt;if (env.IsDevelopment())
&lt;br&gt;{
&lt;br&gt;    // For more details on using the user secret store see http://go.microsoft.com/fwlink/?LinkID=532709
&lt;br&gt;    builder.AddUserSecrets();
&lt;br&gt;}
&lt;br&gt;
&lt;br&gt;builder.AddEnvironmentVariables();
&lt;br&gt;Configuration = builder.Build();
&lt;/pre&gt;
&lt;p&gt;So, in conclusion:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don't put private stuff in code. &lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Seems obvious, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.internetnews.com/blog/skerner/github-search-exposes-passwords.html"&gt;but&lt;/a&gt;...&lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Avoid putting private stuff in &lt;em&gt;common &lt;/em&gt;config files 
&lt;ul&gt;
&lt;li&gt;Externalize them AND ignore the externalized file so they don't get checked in&lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Consider using Environment Variables or User-level config options. 
&lt;ul&gt;
&lt;li&gt;Keep sensitive config out of your project folder at development time&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;I'm sure I missed something. What are YOUR tips, Dear Reader? &lt;/p&gt;
&lt;h3&gt;Resources&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/identity/overview/features-api/best-practices-for-deploying-passwords-and-other-sensitive-data-to-aspnet-and-azure"&gt;Best practices for deploying passwords and other sensitive data to ASP.NET and Azure App Service&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Image Copyright Shea Parikh - used under license from &lt;/em&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~getcolorstock.com"&gt;&lt;em&gt;http://getcolorstock.com&lt;/em&gt;&lt;/a&gt;&lt;em&gt; &lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Sponsor:&lt;/strong&gt; Big thanks to Infragistics for sponsoring the blog this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1JWnScH"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1JWnScH"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;
&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br/&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/131629835/0/scotthanselman"&gt;
&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/131629835/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067688</guid><link>http://www.binaryintellect.net/articles/7751fa4c-5638-4090-bb4a-4c5f0a2513da.aspx</link><title>Use Dependency Injection in ASP.NET MVC 6 </title><description> Bipin Joshi shows how Dependency Injection works in ASP.NET MVC 6, with examples for singleton, scoped, transient and instance modes.</description><pubDate>Tue, 29 Dec 2015 12:39:16 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/3119802/bipin-joshi.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067680</guid><link>https://www.youtube.com/watch?v=vqcAVic4Ej0</link><title>Building APIs with MVC 6 and OAuth</title><description> [video] Here's a great presentation from Filip Ekberg at DDD Brisbane 2015 describing how he and his team have been building APIs using ASP.NET MVC 6 and OAuth.</description><pubDate>Mon, 28 Dec 2015 15:29:49 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/3945063/filip-ekberg.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067679</guid><link>http://www.strathweb.com/2015/12/running-asp-net-5-website-on-iis/</link><title>Running ASP.NET 5 website on IIS</title><description> Filip Woj. documents the steps required to run an ASP.NET 5 application on IIS.</description><pubDate>Fri, 25 Dec 2015 15:27:29 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/3265883/filip-wojcieszyn.jpg" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=447c22e1-a311-4cb8-9e06-6bbbee47fdf6</guid><link>http://feeds.hanselman.com/~/129951725/0/scotthanselman~Exploring-the-new-NET-dotnet-Command-Line-Interface-CLI.aspx</link><category>Open Source</category><title>Exploring the new .NET "dotnet" Command Line Interface (CLI)</title><description>&lt;div&gt;&lt;p&gt;I've never much liked the whole "dnvm" and "dnu" and "dnx" command line stuff in the new ASP.NET 5 beta bits. There's reasons for each to exist and they were and they have been important steps, both organizationally and as aids to the learning process.&lt;/p&gt; &lt;p&gt;My thinking has always been that when a new person sits down to learn node, python, ruby, golang, whatever, for the most part their experience is something like this. It should be just as easy - or easier - to use .NET. &lt;/p&gt; &lt;p&gt;This is just a psuedocode. Don't sweat it too much.&lt;/p&gt;&lt;pre&gt;apt-get install mylang #where mylang is some language/runtime&lt;br&gt;#write or generate a foo.fb hello world program&lt;br&gt;mylang foo #compiles and runs foo&lt;/pre&gt;
&lt;p&gt;I think folks using and learning .NET should have the same experience as with Go or Ruby. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Easy To Get - Getting .NET should be super easy on every platform. 
&lt;ul&gt;
&lt;li&gt;We are starting to do this with &lt;a href="http://get.asp.net"&gt;http://get.asp.net&lt;/a&gt; and we'll have the same for .NET Core alone, I'm sure. &lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Easy Hello World - It should be easy to create a basic app and build from there. 
&lt;ul&gt;
&lt;li&gt;You can "dotnet new" and get hello world. Perhaps more someday? &lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Easy Compile and Run 
&lt;ul&gt;
&lt;li&gt;Just "dotnet run" and it compiles AND executes &lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Real .NET 
&lt;ul&gt;
&lt;li&gt;Fast, scalable, native speed when possible, reliable &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;I've been exploring the (very early but promising) work at &lt;a title="https://github.com/dotnet/cli" href="https://github.com/dotnet/cli"&gt;https://github.com/dotnet/cli&lt;/a&gt; that will ship next year sometime.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE: &lt;/strong&gt;This toolchain is [&lt;em&gt;today&lt;/em&gt;] independent from the DNX-based .NET Core + ASP.NET 5 RC bits. If you are looking for .NET Core + ASP.NET 5 RC bits, you can find instructions on the &lt;a href="http://get.asp.net/"&gt;http://get.asp.net/&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4&gt;&lt;/h4&gt;
&lt;p&gt;Once I installed the "dotnet" cli, I can do this:&lt;/p&gt;&lt;pre&gt;&amp;gt;dotnet new&lt;br&gt;&amp;gt;dotnet restore&lt;br&gt;&amp;gt;dotnet run&lt;/pre&gt;
&lt;p&gt;Imagine with me, when you combine this with the &lt;a href="http://code.visualstudio.com"&gt;free Visual Studio Code&lt;/a&gt; editor which runs on Mac, Windows, and Linux, you've got a pretty interesting story. Open Source .NET that runs everywhere, easily.&lt;/p&gt;
&lt;p&gt;Here is a longer command line prompt that includes me just typing "dotnet" at the top to get a sense of what's available.&lt;/p&gt;&lt;pre&gt;C:\Users\Scott\Desktop\fabulous&amp;gt;dotnet&lt;br&gt;.NET Command Line Interface&lt;br&gt;Usage: dotnet [common-options] [command] [arguments]&lt;br&gt;&lt;br&gt;Arguments:&lt;br&gt;  [command]     The command to execute&lt;br&gt;  [arguments]   Arguments to pass to the command&lt;br&gt;&lt;br&gt;Common Options (passed before the command):&lt;br&gt;  -v|--verbose  Enable verbose output&lt;br&gt;&lt;br&gt;Common Commands:&lt;br&gt;  new           Initialize a basic .NET project&lt;br&gt;  restore       Restore dependencies specified in the .NET project&lt;br&gt;  compile       Compiles a .NET project&lt;br&gt;  publish       Publishes a .NET project for deployment (including the runtime)&lt;br&gt;  run           Compiles and immediately executes a .NET project&lt;br&gt;  repl          Launch an interactive session (read, eval, print, loop)&lt;br&gt;  pack          Creates a NuGet package&lt;br&gt;&lt;br&gt;C:\Users\Scott\Desktop\fabulous&amp;gt;dotnet new&lt;br&gt;Created new project in C:\Users\Scott\Desktop\fabulous.&lt;br&gt;&lt;br&gt;C:\Users\Scott\Desktop\fabulous&amp;gt;dotnet restore&lt;br&gt;Microsoft .NET Development Utility CoreClr-x64-1.0.0-rc1-16231&lt;br&gt;&lt;br&gt;  CACHE https://www.myget.org/F/dotnet-core/api/v3/index.json&lt;br&gt;  CACHE https://api.nuget.org/v3/index.json&lt;br&gt;Restoring packages for C:\Users\Scott\Desktop\fabulous\project.json&lt;br&gt;Writing lock file C:\Users\Scott\Desktop\fabulous\project.lock.json&lt;br&gt;Restore complete, 947ms elapsed&lt;br&gt;&lt;br&gt;NuGet Config files used:&lt;br&gt;    C:\Users\Scott\AppData\Roaming\NuGet\nuget.config&lt;br&gt;    C:\Users\Scott\Desktop\nuget.config&lt;br&gt;    C:\Users\Scott\Desktop\fabulous\nuget.config&lt;br&gt;&lt;br&gt;Feeds used:&lt;br&gt;    https://www.myget.org/F/dotnet-core/api/v3/flatcontainer/&lt;br&gt;    https://api.nuget.org/v3-flatcontainer/&lt;br&gt;&lt;br&gt;C:\Users\Scott\Desktop\fabulous&amp;gt;dotnet run&lt;br&gt;Hello World!&lt;/pre&gt;
&lt;p&gt;Note that I ran dotnet restore once before on another projects so that output was not very noisy this time.&lt;/p&gt;
&lt;h3&gt;Native Compilation of .NET applications&lt;/h3&gt;
&lt;p&gt;This is cool, but things get REALLY compelling when we consider native compilation. That literally means our EXE becomes a native executable on a platform that doesn't require any external dependencies. No .NET. It just runs and it runs fast.&lt;/p&gt;
&lt;p&gt;It's early days, and right now per the repro it's just hello world and a few samples but essentially when you do "dotnet compile" you get this, right, but it requires the .NET Core Runtime and all the supporting libraries. It JITs when it runs like the .NET you know and love.&lt;/p&gt;
&lt;p&gt;&lt;img title=".NET Core Compiled EXE" style="display: inline" alt=".NET Core Compiled EXE" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/ef1a3ae5fa91_12832/image_af525728-83e8-40d1-952a-856a3775b110.png" width="507" height="232"&gt;&lt;/p&gt;
&lt;p&gt;But if you "dotnet compile --native" you run it through the .NET Native chain and a larger EXE pops out. But that EXE is singular and native and just runs.&lt;/p&gt;
&lt;p&gt;&lt;img title="Native compiled .NET Core EXE" style="display: inline" alt="Native compiled .NET Core EXE" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/ef1a3ae5fa91_12832/image_729c4e69-567c-4713-956a-4ee0e8dcc12d.png" width="374" height="117"&gt;&lt;/p&gt;
&lt;p&gt;Again, early days, but hugely exciting. Here's the high&lt;a href="https://github.com/dotnet/corert/blob/master/Documentation/high-level-engineering-plan.md"&gt;-level engineering plan on GitHub&lt;/a&gt; that you can explore.&lt;/p&gt;
&lt;h3&gt;Related Projects&lt;/h3&gt;
&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/Microsoft/dotnet"&gt;.NET home repo&lt;/a&gt; links to 100s of .NET projects, from Microsoft and the community. 
&lt;li&gt;The &lt;a href="https://github.com/dotnet/core"&gt;.NET Core repo&lt;/a&gt; links to .NET Core related projects from Microsoft. 
&lt;li&gt;The &lt;a href="https://github.com/aspnet/home"&gt;ASP.NET home repo&lt;/a&gt; is the best place to start learning about &lt;a href="http://www.asp.net/"&gt;ASP.NET 5&lt;/a&gt;. 
&lt;li&gt;&lt;a href="http://dotnet.github.io"&gt;http://dotnet.github.io&lt;/a&gt; is a good place to discover .NET Foundation projects. &lt;/li&gt;&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Redgate for sponsoring the feed this week! &lt;strong&gt;Have you got SQL fingers? &lt;/strong&gt;Try &lt;a href="http://bit.ly/1VdVN7g"&gt;SQL Prompt&lt;/a&gt; and you’ll be able to write, refactor, and reformat SQL effortlessly in SSMS and Visual Studio. &lt;a href="http://bit.ly/1VdVN7g"&gt;Find out more&lt;/a&gt; with a 28 day free trial!&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Thu, 24 Dec 2015 22:57:51 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/ExploringTheNewNETDotnetCommandLineInterfaceCLI.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=447c22e1-a311-4cb8-9e06-6bbbee47fdf6</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=447c22e1-a311-4cb8-9e06-6bbbee47fdf6</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=447c22e1-a311-4cb8-9e06-6bbbee47fdf6</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=447c22e1-a311-4cb8-9e06-6bbbee47fdf6</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">39</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=447c22e1-a311-4cb8-9e06-6bbbee47fdf6</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;I've never much liked the whole "dnvm" and "dnu" and "dnx" command line stuff in the new ASP.NET 5 beta bits. There's reasons for each to exist and they were and they have been important steps, both organizationally and as aids to the learning process.&lt;/p&gt; &lt;p&gt;My thinking has always been that when a new person sits down to learn node, python, ruby, golang, whatever, for the most part their experience is something like this. It should be just as easy - or easier - to use .NET. &lt;/p&gt; &lt;p&gt;This is just a psuedocode. Don't sweat it too much.&lt;/p&gt;&lt;pre&gt;apt-get install mylang #where mylang is some language/runtime
&lt;br&gt;#write or generate a foo.fb hello world program
&lt;br&gt;mylang foo #compiles and runs foo&lt;/pre&gt;
&lt;p&gt;I think folks using and learning .NET should have the same experience as with Go or Ruby. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Easy To Get - Getting .NET should be super easy on every platform. 
&lt;ul&gt;
&lt;li&gt;We are starting to do this with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~get.asp.net"&gt;http://get.asp.net&lt;/a&gt; and we'll have the same for .NET Core alone, I'm sure. &lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Easy Hello World - It should be easy to create a basic app and build from there. 
&lt;ul&gt;
&lt;li&gt;You can "dotnet new" and get hello world. Perhaps more someday? &lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Easy Compile and Run 
&lt;ul&gt;
&lt;li&gt;Just "dotnet run" and it compiles AND executes &lt;/li&gt;&lt;/ul&gt;
&lt;li&gt;Real .NET 
&lt;ul&gt;
&lt;li&gt;Fast, scalable, native speed when possible, reliable &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;I've been exploring the (very early but promising) work at &lt;a title="https://github.com/dotnet/cli" href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/dotnet/cli"&gt;https://github.com/dotnet/cli&lt;/a&gt; that will ship next year sometime.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE: &lt;/strong&gt;This toolchain is [&lt;em&gt;today&lt;/em&gt;] independent from the DNX-based .NET Core + ASP.NET 5 RC bits. If you are looking for .NET Core + ASP.NET 5 RC bits, you can find instructions on the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~get.asp.net/"&gt;http://get.asp.net/&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4&gt;&lt;/h4&gt;
&lt;p&gt;Once I installed the "dotnet" cli, I can do this:&lt;/p&gt;&lt;pre&gt;&amp;gt;dotnet new
&lt;br&gt;&amp;gt;dotnet restore
&lt;br&gt;&amp;gt;dotnet run&lt;/pre&gt;
&lt;p&gt;Imagine with me, when you combine this with the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~code.visualstudio.com"&gt;free Visual Studio Code&lt;/a&gt; editor which runs on Mac, Windows, and Linux, you've got a pretty interesting story. Open Source .NET that runs everywhere, easily.&lt;/p&gt;
&lt;p&gt;Here is a longer command line prompt that includes me just typing "dotnet" at the top to get a sense of what's available.&lt;/p&gt;&lt;pre&gt;C:\Users\Scott\Desktop\fabulous&amp;gt;dotnet
&lt;br&gt;.NET Command Line Interface
&lt;br&gt;Usage: dotnet [common-options] [command] [arguments]
&lt;br&gt;
&lt;br&gt;Arguments:
&lt;br&gt;  [command]     The command to execute
&lt;br&gt;  [arguments]   Arguments to pass to the command
&lt;br&gt;
&lt;br&gt;Common Options (passed before the command):
&lt;br&gt;  -v|--verbose  Enable verbose output
&lt;br&gt;
&lt;br&gt;Common Commands:
&lt;br&gt;  new           Initialize a basic .NET project
&lt;br&gt;  restore       Restore dependencies specified in the .NET project
&lt;br&gt;  compile       Compiles a .NET project
&lt;br&gt;  publish       Publishes a .NET project for deployment (including the runtime)
&lt;br&gt;  run           Compiles and immediately executes a .NET project
&lt;br&gt;  repl          Launch an interactive session (read, eval, print, loop)
&lt;br&gt;  pack          Creates a NuGet package
&lt;br&gt;
&lt;br&gt;C:\Users\Scott\Desktop\fabulous&amp;gt;dotnet new
&lt;br&gt;Created new project in C:\Users\Scott\Desktop\fabulous.
&lt;br&gt;
&lt;br&gt;C:\Users\Scott\Desktop\fabulous&amp;gt;dotnet restore
&lt;br&gt;Microsoft .NET Development Utility CoreClr-x64-1.0.0-rc1-16231
&lt;br&gt;
&lt;br&gt;  CACHE https://www.myget.org/F/dotnet-core/api/v3/index.json
&lt;br&gt;  CACHE https://api.nuget.org/v3/index.json
&lt;br&gt;Restoring packages for C:\Users\Scott\Desktop\fabulous\project.json
&lt;br&gt;Writing lock file C:\Users\Scott\Desktop\fabulous\project.lock.json
&lt;br&gt;Restore complete, 947ms elapsed
&lt;br&gt;
&lt;br&gt;NuGet Config files used:
&lt;br&gt;    C:\Users\Scott\AppData\Roaming\NuGet\nuget.config
&lt;br&gt;    C:\Users\Scott\Desktop\nuget.config
&lt;br&gt;    C:\Users\Scott\Desktop\fabulous\nuget.config
&lt;br&gt;
&lt;br&gt;Feeds used:
&lt;br&gt;    https://www.myget.org/F/dotnet-core/api/v3/flatcontainer/
&lt;br&gt;    https://api.nuget.org/v3-flatcontainer/
&lt;br&gt;
&lt;br&gt;C:\Users\Scott\Desktop\fabulous&amp;gt;dotnet run
&lt;br&gt;Hello World!&lt;/pre&gt;
&lt;p&gt;Note that I ran dotnet restore once before on another projects so that output was not very noisy this time.&lt;/p&gt;
&lt;h3&gt;Native Compilation of .NET applications&lt;/h3&gt;
&lt;p&gt;This is cool, but things get REALLY compelling when we consider native compilation. That literally means our EXE becomes a native executable on a platform that doesn't require any external dependencies. No .NET. It just runs and it runs fast.&lt;/p&gt;
&lt;p&gt;It's early days, and right now per the repro it's just hello world and a few samples but essentially when you do "dotnet compile" you get this, right, but it requires the .NET Core Runtime and all the supporting libraries. It JITs when it runs like the .NET you know and love.&lt;/p&gt;
&lt;p&gt;&lt;img title=".NET Core Compiled EXE" style="display: inline" alt=".NET Core Compiled EXE" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/ef1a3ae5fa91_12832/image_af525728-83e8-40d1-952a-856a3775b110.png" width="507" height="232"&gt;&lt;/p&gt;
&lt;p&gt;But if you "dotnet compile --native" you run it through the .NET Native chain and a larger EXE pops out. But that EXE is singular and native and just runs.&lt;/p&gt;
&lt;p&gt;&lt;img title="Native compiled .NET Core EXE" style="display: inline" alt="Native compiled .NET Core EXE" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/ef1a3ae5fa91_12832/image_729c4e69-567c-4713-956a-4ee0e8dcc12d.png" width="374" height="117"&gt;&lt;/p&gt;
&lt;p&gt;Again, early days, but hugely exciting. Here's the high&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/dotnet/corert/blob/master/Documentation/high-level-engineering-plan.md"&gt;-level engineering plan on GitHub&lt;/a&gt; that you can explore.&lt;/p&gt;
&lt;h3&gt;Related Projects&lt;/h3&gt;
&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/Microsoft/dotnet"&gt;.NET home repo&lt;/a&gt; links to 100s of .NET projects, from Microsoft and the community. 
&lt;li&gt;The &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/dotnet/core"&gt;.NET Core repo&lt;/a&gt; links to .NET Core related projects from Microsoft. 
&lt;li&gt;The &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/aspnet/home"&gt;ASP.NET home repo&lt;/a&gt; is the best place to start learning about &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/"&gt;ASP.NET 5&lt;/a&gt;. 
&lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~dotnet.github.io"&gt;http://dotnet.github.io&lt;/a&gt; is a good place to discover .NET Foundation projects. &lt;/li&gt;&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Redgate for sponsoring the feed this week! &lt;strong&gt;Have you got SQL fingers? &lt;/strong&gt;Try &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1VdVN7g"&gt;SQL Prompt&lt;/a&gt; and you’ll be able to write, refactor, and reformat SQL effortlessly in SSMS and Visual Studio. &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1VdVN7g"&gt;Find out more&lt;/a&gt; with a 28 day free trial!&lt;/p&gt;
&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br/&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/129951725/0/scotthanselman"&gt;
&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/129951725/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067678</guid><link>http://www.khalidabuhakmeh.com/asp-net-5-mvc-6-taghelpers-and-the-cake</link><title>ASP.NET 5, MVC 6, TagHelpers, And The Cake </title><description> Khalid Abuhakmeh walks through an issue he ran into using a TagHelper that processes Markdown, showing a few workarounds.</description><pubDate>Thu, 24 Dec 2015 15:25:24 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/4301982/khalid_abuhakmeh.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067677</guid><link>http://www.syncfusion.com/blogs/post/Video-Review-Whats-New-with-MVC-6-by-Ugo-Lattanzi.aspx</link><title>What’s New with ASP.NET MVC 6</title><description> [video] Here's a 45 minute video presentation from Ugo Lattanzi that will walk you through the most important new features found in ASP.NET MVC 6.</description><pubDate>Wed, 23 Dec 2015 15:23:18 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/4194992/ugo-lattanzi-.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067674</guid><link>https://www.twilio.com/blog/2015/12/hola-ip-messaging-real-time-translated-chat-with-asp-net-microsoft-translator-and-ip-messaging.html</link><title>Hola IP Messaging! Real time translated chat with ASP.NET, Microsoft Translator and IP Messaging</title><description> Here's an awesome post from Devin Rader that leverages the Microsoft Translation API, Twilio IP messaging, webhooks, and an ASP.NET MVC application to build a real-time translated chat application.</description><pubDate>Tue, 22 Dec 2015 16:34:10 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/3065262/anonymous.png" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=be3a9619-508d-4fb4-be93-3e6aeb3e338f</guid><link>http://feeds.hanselman.com/~/129347075/0/scotthanselman~D-Printing-is-for-so-much-more-than-just-making-brightly-colored-plastic-pieces-of-crap.aspx</link><category>3D Printing</category><title>3D Printing is for so much more than just making brightly colored plastic pieces of crap</title><description>&lt;div&gt;&lt;p&gt;&lt;img title="Cute, a red Groot...but so what?" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Cute, a red Groot...but so what?" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/11208015_1636358076600460_1066990168_n_3.jpg" width="480" align="right" height="480"&gt;When you first start learning about 3D Printing you'll usually find yourself looking at a bunch of brightly colored plastic busts. The first 3D printed thing I ever saw was a florescent green Yoda head. First you're like "HOW DID YOU DO THIS?" but quickly you're more like "OK, how many brightly colored plastic pieces of crap do I really need in my life?"&lt;/p&gt; &lt;p&gt;At this point you've likely dismissed 3D Printing as the world of the rich, the insane, or the nerdy, or all three. This is where I was. &lt;/p&gt; &lt;p&gt;I thought a 3D Printer was a $2000 thing, and of course, that's a heck of a lot of money. But I wanted to get into 3D Printing because I'd started to talk to some more advanced folks locally here in Portland and they assured me that it was cheaper than I thought and more useful than I thought. I got a &lt;a href="http://www.hanselman.com/blog/3DPrinterShootout600PrintrbotVs20000UPrintSEPlus.aspx"&gt;$599 Printrbot Simple Metal&lt;/a&gt; from Amazon. You can also get a &lt;a href="http://amzn.to/1meDsuC"&gt;kit and assemble it yourself for $539&lt;/a&gt; but the assembling is kind of hard work.&lt;/p&gt; &lt;p&gt;Later as I was having so much fun &lt;a href="http://www.hanselman.com/blog/ReviewDremel3DPrinterAndInitialImpressionsOfTheHPSprout.aspx"&gt;I got a Dremel 3D Printer for $899&lt;/a&gt; also &lt;a href="http://amzn.to/1meDv9R"&gt;off Amazon&lt;/a&gt; and it's been absolutely reliable and super fun. I now consider the Printrbot a great "prosumer" hobbyist printer for folks to tinker with and improve, but the Dremel just prints, and it prints well. I had it printing well within 10 minutes of unboxing it. Both of these printers are great, but the Dremel (in my experience) has required less adjustment.&lt;/p&gt; &lt;p&gt;I've learned three things. They are perhaps obvious to you, but they have been amazing for me and my sons as we learn more about 3D Printing.&lt;/p&gt; &lt;h3&gt;Lesson 1 - You can upgrade your 3D Printer&lt;/h3&gt; &lt;p&gt;There's a great website called &lt;a href="http://www.thingiverse.com"&gt;Thingiverse&lt;/a&gt; that is filled with models that others have made or remixed. You can join in and just download, or, ideally, create your own models and share. I've used &lt;a href="http://www.tinkercad.com"&gt;Tinkercad&lt;/a&gt; with the kids to create new models.&lt;/p&gt; &lt;p&gt;One of the great jokes in 3D Printing is that people with printers never print anything useful, they just print upgrades to their printers. When you are getting started, this is actually kind of true. I took my PrinterBot and printed a base, a spool holder (figuring out where to safely and reliably hang the spools of plastic filament is a big problem.&lt;/p&gt; &lt;p&gt;&lt;img title="11007949_1408985906069162_1188772249_n" style="margin: 0px 0px 0px 5px; display: inline" alt="11007949_1408985906069162_1188772249_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/11007949_1408985906069162_1188772249_n_fa34b492-8a65-4ee4-b79a-8931681c86e1.jpg" width="480" height="480"&gt;&lt;/p&gt; &lt;p&gt;The Dremel has a top lid and usually you'll have the filament inside on a special plastic spool holder. However, if you use larger or non-Dremel filaments you'll want a reliable "big spool" solution. There's a "system" at &lt;a href="http://www.thingiverse.com/thing:652415"&gt;Thingiverse called the "OmniStand"&lt;/a&gt; that you can print that will literally replace the internal one. You can also print an &lt;a href="http://www.thingiverse.com/thing:704631"&gt;OmniStand for the top of the printer&lt;/a&gt; (as seen in this picture below) that will let it print off very large spools.&lt;/p&gt; &lt;p&gt;&lt;img title="12393609_1031042666937707_572014215_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12393609_1031042666937707_572014215_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12393609_1031042666937707_572014215_n_5963137e-b658-417d-bcd8-4e60bffdcb78.jpg" width="480" height="480"&gt;&lt;/p&gt; &lt;p&gt;These were small but significant victories. This was a reminder to my sons and I that we could change these devices and make them work how WE wanted, not necessarily how the they were designed.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;NOTE: &lt;/strong&gt;You can also upgrade the Nozzle in your printer. Later I'll talk about "exotic" filaments that can give amazing results but are also more abrasive and can &lt;a href="http://www.proto-pasta.com/blogs/news/18876420-test-printing-with-wear-resistant-nozzle"&gt;wear out the stock nozzles&lt;/a&gt; that come with your printer. I upgraded the &lt;a href="http://www.proto-pasta.com/collections/retail/products/plated-brass-wear-resistant-nozzles"&gt;nozzle on my Dremel for just $14.99 using this Brass Nozzle from Proto-Pasta&lt;/a&gt; and was able to make the swap and get back to printing in about 20 minutes, not counting the feeling of accomplishment.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;OK, so you can print things to make your printer work better, cool...what else?&lt;/p&gt; &lt;h3&gt;Lesson 2 - There are "exotic" plastic filaments that are game changers&lt;/h3&gt; &lt;p&gt;There's a local small business just over the river in Vancouver, Washington called "Proto-Pasta." They a company of just three people &lt;a href="http://www.proto-pasta.com/blogs/news/79974980-the-proto-pasta-brand-celebrates-2-years-since-kickstarting"&gt;that started as a Kickstarter two years ago&lt;/a&gt;. They sell "exotic" plastic filaments that have additives and properties that take your prints out of the "bright plastic crap" category and &lt;a href="http://www.proto-pasta.com/pages/proto_pasta"&gt;into something more interesting&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;They have a &lt;a href="http://www.proto-pasta.com/pages/carbon-fiber-pla"&gt;filament with added Carbon Fiber&lt;/a&gt; that has created some of the smoothest and most amazing prints I've ever made. It doesn't gain strength with this addition, but rather rigidity. They have a &lt;a href="http://www.proto-pasta.com/pages/stainless-steel-pla"&gt;Stainless Steel filament&lt;/a&gt; that is great for making jewelry or robots or anything that you want to have the heft and feel of steel. They've even got &lt;a href="http://www.proto-pasta.com/pages/magnetic-iron-pla"&gt;a filament with Iron&lt;/a&gt; so your prints can react to magnets.&lt;/p&gt; &lt;p&gt;I've used their &lt;a href="http://www.proto-pasta.com/collections/retail/products/high-temp-pla-v2-0"&gt;High-Temperature filament&lt;/a&gt; that starts out clear but you bake it (literally, in your oven) afterwards and it'll shrink slightly and get VERY hard and turn opaque.&lt;/p&gt; &lt;p&gt;More recently I've been trying a filament with added Pine (yes, wood) that not only smells great but looks amazing with wood flecks inside the filament. &lt;/p&gt; &lt;p&gt;I've made dishes, vases, pieces of art for shelves, and geometric shapes for gifts this Christmas. Each one is VERTY different just by changing the filament. It's been more than changing color. These exotics change the texture and weight, and by making small changes in the software you can make them thicker or, in my case, thinner and more translucent.&lt;/p&gt; &lt;p&gt;&lt;img title="12353895_1806846556209291_841574157_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12353895_1806846556209291_841574157_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12353895_1806846556209291_841574157_n_1cc6de02-278c-4340-adcb-93831c18bdc8.jpg" width="360" height="360"&gt;&lt;img title="IMG_2535" style="margin: 0px 0px 0px 5px; display: inline" alt="IMG_2535" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/IMG_2535.jpg" width="360" height="360"&gt;&lt;/p&gt; &lt;p&gt;&lt;img title="12356485_548999845269286_797360808_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12356485_548999845269286_797360808_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12356485_548999845269286_797360808_n_90c26e6c-d36c-4d76-9e1b-abdb235237a3.jpg" width="360" height="360"&gt;&lt;img title="12353821_516258631884232_813681694_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12353821_516258631884232_813681694_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12353821_516258631884232_813681694_n_4fc43cf1-84dc-4496-89cc-9cc1f92f7498.jpg" width="360" height="360"&gt;&lt;/p&gt; &lt;p&gt;I hope the folks who get these for Christmas appreciate the work and thought that went into them.&lt;/p&gt; &lt;h3&gt;Lesson 3 - You can print parts and then assemble things using bolts, glue, etc.&lt;/h3&gt; &lt;p&gt;This one may be obvious, but you don't have to do everything with plastic. My 8 year old and I are slowly making a "T4 Quadcopter" designed by Brendan from New Zealand (a reader of this blog) and this project will require not only lots of printed pieces but &lt;em&gt;assembled pieces. &lt;/em&gt;You can super glue, screw, bolt, zip-tie and snap 3D printed parts together. I've been surprised at how string these parts can be when they are combined. This quadcopter will be held together with small metric nuts and bolts and zip-ties as well as some very clever snaps built-in as part of the 3D Printed model.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.thingiverse.com/thing:304237"&gt;&lt;img title="12276870_1634779493440548_1678693220_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12276870_1634779493440548_1678693220_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12276870_1634779493440548_1678693220_n_23d63ccb-6b07-4767-9402-07310c794019.jpg" width="650" height="650"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We are having a blast with this family hobby. We've fixed things around the house, made art, explored material science, thought about geometry, and learned about how software and hardware work together to create something bigger. Are you getting into 3D Printing?&lt;/p&gt; &lt;h3&gt;Related Links&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/3DPrinterShootout600PrintrbotVs20000UPrintSEPlus.aspx"&gt;3D Printer Shootout - $600 Printrbot vs. $20,000 uPrint SE Plus&lt;/a&gt;  &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/MovingBeyondBeginnerWhen3DPrintingAndBecomingAHandyPerson.aspx"&gt;Moving beyond Beginner when 3D Printing and becoming a Handy Person&lt;/a&gt;  &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/ReviewDremel3DPrinterAndInitialImpressionsOfTheHPSprout.aspx"&gt;Review: Dremel 3D Printer and initial impressions of the HP Sprout&lt;/a&gt;  &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;The Basics of 3D Printing in 2015 - from someone with 16 WHOLE HOURS' experience&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Also, please do &lt;a href="http://instagram.com/shanselman"&gt;follow my adventures on Instagram at @shanselman&lt;/a&gt;!&lt;/p&gt; &lt;hr&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://bit.ly/1Ie48G4"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://bit.ly/1Ie48G4"&gt;Download for free now&lt;/a&gt;!  &lt;p&gt;&lt;img src="https://ssl.gstatic.com/ui/v1/icons/mail/images/cleardot.gif"&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Mon, 21 Dec 2015 06:48:34 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/3DPrintingIsForSoMuchMoreThanJustMakingBrightlyColoredPlasticPiecesOfCrap.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=be3a9619-508d-4fb4-be93-3e6aeb3e338f</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=be3a9619-508d-4fb4-be93-3e6aeb3e338f</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=be3a9619-508d-4fb4-be93-3e6aeb3e338f</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=be3a9619-508d-4fb4-be93-3e6aeb3e338f</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">34</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=be3a9619-508d-4fb4-be93-3e6aeb3e338f</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;&lt;img title="Cute, a red Groot...but so what?" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Cute, a red Groot...but so what?" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/11208015_1636358076600460_1066990168_n_3.jpg" width="480" align="right" height="480"&gt;When you first start learning about 3D Printing you'll usually find yourself looking at a bunch of brightly colored plastic busts. The first 3D printed thing I ever saw was a florescent green Yoda head. First you're like "HOW DID YOU DO THIS?" but quickly you're more like "OK, how many brightly colored plastic pieces of crap do I really need in my life?"&lt;/p&gt; &lt;p&gt;At this point you've likely dismissed 3D Printing as the world of the rich, the insane, or the nerdy, or all three. This is where I was. &lt;/p&gt; &lt;p&gt;I thought a 3D Printer was a $2000 thing, and of course, that's a heck of a lot of money. But I wanted to get into 3D Printing because I'd started to talk to some more advanced folks locally here in Portland and they assured me that it was cheaper than I thought and more useful than I thought. I got a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/3DPrinterShootout600PrintrbotVs20000UPrintSEPlus.aspx"&gt;$599 Printrbot Simple Metal&lt;/a&gt; from Amazon. You can also get a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1meDsuC"&gt;kit and assemble it yourself for $539&lt;/a&gt; but the assembling is kind of hard work.&lt;/p&gt; &lt;p&gt;Later as I was having so much fun &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ReviewDremel3DPrinterAndInitialImpressionsOfTheHPSprout.aspx"&gt;I got a Dremel 3D Printer for $899&lt;/a&gt; also &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1meDv9R"&gt;off Amazon&lt;/a&gt; and it's been absolutely reliable and super fun. I now consider the Printrbot a great "prosumer" hobbyist printer for folks to tinker with and improve, but the Dremel just prints, and it prints well. I had it printing well within 10 minutes of unboxing it. Both of these printers are great, but the Dremel (in my experience) has required less adjustment.&lt;/p&gt; &lt;p&gt;I've learned three things. They are perhaps obvious to you, but they have been amazing for me and my sons as we learn more about 3D Printing.&lt;/p&gt; &lt;h3&gt;Lesson 1 - You can upgrade your 3D Printer&lt;/h3&gt; &lt;p&gt;There's a great website called &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com"&gt;Thingiverse&lt;/a&gt; that is filled with models that others have made or remixed. You can join in and just download, or, ideally, create your own models and share. I've used &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.tinkercad.com"&gt;Tinkercad&lt;/a&gt; with the kids to create new models.&lt;/p&gt; &lt;p&gt;One of the great jokes in 3D Printing is that people with printers never print anything useful, they just print upgrades to their printers. When you are getting started, this is actually kind of true. I took my PrinterBot and printed a base, a spool holder (figuring out where to safely and reliably hang the spools of plastic filament is a big problem.&lt;/p&gt; &lt;p&gt;&lt;img title="11007949_1408985906069162_1188772249_n" style="margin: 0px 0px 0px 5px; display: inline" alt="11007949_1408985906069162_1188772249_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/11007949_1408985906069162_1188772249_n_fa34b492-8a65-4ee4-b79a-8931681c86e1.jpg" width="480" height="480"&gt;&lt;/p&gt; &lt;p&gt;The Dremel has a top lid and usually you'll have the filament inside on a special plastic spool holder. However, if you use larger or non-Dremel filaments you'll want a reliable "big spool" solution. There's a "system" at &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com/thing:652415"&gt;Thingiverse called the "OmniStand"&lt;/a&gt; that you can print that will literally replace the internal one. You can also print an &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com/thing:704631"&gt;OmniStand for the top of the printer&lt;/a&gt; (as seen in this picture below) that will let it print off very large spools.&lt;/p&gt; &lt;p&gt;&lt;img title="12393609_1031042666937707_572014215_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12393609_1031042666937707_572014215_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12393609_1031042666937707_572014215_n_5963137e-b658-417d-bcd8-4e60bffdcb78.jpg" width="480" height="480"&gt;&lt;/p&gt; &lt;p&gt;These were small but significant victories. This was a reminder to my sons and I that we could change these devices and make them work how WE wanted, not necessarily how the they were designed.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;NOTE: &lt;/strong&gt;You can also upgrade the Nozzle in your printer. Later I'll talk about "exotic" filaments that can give amazing results but are also more abrasive and can &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/blogs/news/18876420-test-printing-with-wear-resistant-nozzle"&gt;wear out the stock nozzles&lt;/a&gt; that come with your printer. I upgraded the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/collections/retail/products/plated-brass-wear-resistant-nozzles"&gt;nozzle on my Dremel for just $14.99 using this Brass Nozzle from Proto-Pasta&lt;/a&gt; and was able to make the swap and get back to printing in about 20 minutes, not counting the feeling of accomplishment.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;OK, so you can print things to make your printer work better, cool...what else?&lt;/p&gt; &lt;h3&gt;Lesson 2 - There are "exotic" plastic filaments that are game changers&lt;/h3&gt; &lt;p&gt;There's a local small business just over the river in Vancouver, Washington called "Proto-Pasta." They a company of just three people &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/blogs/news/79974980-the-proto-pasta-brand-celebrates-2-years-since-kickstarting"&gt;that started as a Kickstarter two years ago&lt;/a&gt;. They sell "exotic" plastic filaments that have additives and properties that take your prints out of the "bright plastic crap" category and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/pages/proto_pasta"&gt;into something more interesting&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;They have a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/pages/carbon-fiber-pla"&gt;filament with added Carbon Fiber&lt;/a&gt; that has created some of the smoothest and most amazing prints I've ever made. It doesn't gain strength with this addition, but rather rigidity. They have a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/pages/stainless-steel-pla"&gt;Stainless Steel filament&lt;/a&gt; that is great for making jewelry or robots or anything that you want to have the heft and feel of steel. They've even got &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/pages/magnetic-iron-pla"&gt;a filament with Iron&lt;/a&gt; so your prints can react to magnets.&lt;/p&gt; &lt;p&gt;I've used their &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/collections/retail/products/high-temp-pla-v2-0"&gt;High-Temperature filament&lt;/a&gt; that starts out clear but you bake it (literally, in your oven) afterwards and it'll shrink slightly and get VERY hard and turn opaque.&lt;/p&gt; &lt;p&gt;More recently I've been trying a filament with added Pine (yes, wood) that not only smells great but looks amazing with wood flecks inside the filament. &lt;/p&gt; &lt;p&gt;I've made dishes, vases, pieces of art for shelves, and geometric shapes for gifts this Christmas. Each one is VERTY different just by changing the filament. It's been more than changing color. These exotics change the texture and weight, and by making small changes in the software you can make them thicker or, in my case, thinner and more translucent.&lt;/p&gt; &lt;p&gt;&lt;img title="12353895_1806846556209291_841574157_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12353895_1806846556209291_841574157_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12353895_1806846556209291_841574157_n_1cc6de02-278c-4340-adcb-93831c18bdc8.jpg" width="360" height="360"&gt;&lt;img title="IMG_2535" style="margin: 0px 0px 0px 5px; display: inline" alt="IMG_2535" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/IMG_2535.jpg" width="360" height="360"&gt;&lt;/p&gt; &lt;p&gt;&lt;img title="12356485_548999845269286_797360808_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12356485_548999845269286_797360808_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12356485_548999845269286_797360808_n_90c26e6c-d36c-4d76-9e1b-abdb235237a3.jpg" width="360" height="360"&gt;&lt;img title="12353821_516258631884232_813681694_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12353821_516258631884232_813681694_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12353821_516258631884232_813681694_n_4fc43cf1-84dc-4496-89cc-9cc1f92f7498.jpg" width="360" height="360"&gt;&lt;/p&gt; &lt;p&gt;I hope the folks who get these for Christmas appreciate the work and thought that went into them.&lt;/p&gt; &lt;h3&gt;Lesson 3 - You can print parts and then assemble things using bolts, glue, etc.&lt;/h3&gt; &lt;p&gt;This one may be obvious, but you don't have to do everything with plastic. My 8 year old and I are slowly making a "T4 Quadcopter" designed by Brendan from New Zealand (a reader of this blog) and this project will require not only lots of printed pieces but &lt;em&gt;assembled pieces. &lt;/em&gt;You can super glue, screw, bolt, zip-tie and snap 3D printed parts together. I've been surprised at how string these parts can be when they are combined. This quadcopter will be held together with small metric nuts and bolts and zip-ties as well as some very clever snaps built-in as part of the 3D Printed model.&lt;/p&gt; &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.thingiverse.com/thing:304237"&gt;&lt;img title="12276870_1634779493440548_1678693220_n" style="margin: 0px 0px 0px 5px; display: inline" alt="12276870_1634779493440548_1678693220_n" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/c406cadb4836_1316B/12276870_1634779493440548_1678693220_n_23d63ccb-6b07-4767-9402-07310c794019.jpg" width="650" height="650"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We are having a blast with this family hobby. We've fixed things around the house, made art, explored material science, thought about geometry, and learned about how software and hardware work together to create something bigger. Are you getting into 3D Printing?&lt;/p&gt; &lt;h3&gt;Related Links&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/3DPrinterShootout600PrintrbotVs20000UPrintSEPlus.aspx"&gt;3D Printer Shootout - $600 Printrbot vs. $20,000 uPrint SE Plus&lt;/a&gt;  &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/MovingBeyondBeginnerWhen3DPrintingAndBecomingAHandyPerson.aspx"&gt;Moving beyond Beginner when 3D Printing and becoming a Handy Person&lt;/a&gt;  &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ReviewDremel3DPrinterAndInitialImpressionsOfTheHPSprout.aspx"&gt;Review: Dremel 3D Printer and initial impressions of the HP Sprout&lt;/a&gt;  &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;The Basics of 3D Printing in 2015 - from someone with 16 WHOLE HOURS' experience&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Also, please do &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~instagram.com/shanselman"&gt;follow my adventures on Instagram at @shanselman&lt;/a&gt;!&lt;/p&gt; &lt;hr&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1Ie48G4"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;nbsp; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1Ie48G4"&gt;Download for free now&lt;/a&gt;!  &lt;p&gt;&lt;img src="https://ssl.gstatic.com/ui/v1/icons/mail/images/cleardot.gif"&gt;
&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br/&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/129347075/0/scotthanselman"&gt;
&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/129347075/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067673</guid><link>http://blogs.taiga.nl/martijn/2015/12/10/develop-reactjs-asp-net-web-api-apps-in-visual-studio-2015/</link><title>Develop ReactJS + ASP.NET Web API apps in Visual Studio 2015</title><description> Martijn Boland demonstrates how, using the WebPack Task Runner or NPM Script Task Runner extensions, it’s possible to integrate webpack with Visual Studio without the need to use the command-line.</description><pubDate>Mon, 21 Dec 2015 16:31:53 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/5245112/martijn_boland.jpg" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=9414a3c8-093b-47e9-b3b7-fbc7928cb7df</guid><link>http://feeds.hanselman.com/~/129033839/0/scotthanselman~Signing-into-Windows-with-your-Face-Using-an-Xbox-One-Kinect-with-Windows-Hello.aspx</link><category>Musings</category><category>Win10</category><title>Signing into Windows 10 with your Face - Using an Xbox One Kinect with Windows Hello</title><description>&lt;div&gt;&lt;p&gt;The original version of the Kinect camera had an Xbox version and a PC version, and this sucked for a few reasons. Fast forward to the days of Xbox One, and the Kinect v2 for Xbox One has changed a lot. It has a 1080p color camera, IR capabilities that are separate from color, a wider FOV (field of view), and can track 6 skeletons. AND, most importantly, you can &lt;a href="http://amzn.to/1PeoFM5"&gt;use your existing Xbox One Kinect with your PC with an adapter&lt;/a&gt;. No need for a second Kinect. The &lt;a href="http://amzn.to/1PeoFM5"&gt;Kinect Adapter for Windows is $50&lt;/a&gt; and took me 5 min to set up. It's basically a power brick and a USB 3 bridge to your PC.&lt;/p&gt;  &lt;p&gt;You do need a decent machine to handle the Kinect for Xbox One, so there's a &lt;a href="https://dev.windows.com/en-us/kinect/hardware-setup"&gt;Kinect Configuration Verifier Tool&lt;/a&gt; that can quickly tell you if you're up to spec. If you are developing applications, &lt;a href="http://go.microsoft.com/fwlink/p/?LinkID=403899"&gt;download and install the free SDK 2.0&lt;/a&gt;. It's worth getting this even if you aren't, if only to see the cool stuff your Kinect can see about you.&lt;/p&gt;  &lt;p&gt;&lt;img title="A Kinect can see you in 3D" style="display: inline" alt="A Kinect can see you in 3D" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_cc65157d-1455-4ed5-996d-03feb71f9b7c.png" width="602" height="357" /&gt;&lt;/p&gt;  &lt;p&gt;&lt;img title="The Kinect knows too much!" style="display: inline" alt="The Kinect knows too much!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_5a50c840-8588-4ae7-a10e-c511e205de0f.png" width="601" height="356" /&gt;&lt;/p&gt;  &lt;h3&gt;Setting up your Kinect v2 to support Windows Hello on your Windows 10 PC&lt;/h3&gt;  &lt;p&gt;Here's how you setup Windows Hello. It's pretty awesome because my home computer &lt;em&gt;unlocks and logs in when I sit down and look at it&lt;/em&gt;.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Update the Registry to get Drivers that aren't available yet. Make a text file &amp;quot;kinectdrivers.reg&amp;quot; and put this text in it. Double-click it to import into your Registry. &lt;/li&gt; &lt;/ul&gt;  &lt;pre&gt;Windows Registry Editor Version 5.00&lt;br /&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DriverFlighting\Partner]&lt;br /&gt;&amp;quot;TargetRing&amp;quot;=&amp;quot;Drivers&amp;quot;&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;If you've already set up your Kinect, refresh it's drivers in the Device Manager. &lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
  &lt;ol&gt;
    &lt;li&gt;Open Device Manager (Windows Key + X, then press M) &lt;/li&gt;
    &lt;li&gt;Expand “Kinect sensor devices”. &lt;/li&gt;
    &lt;li&gt;Right-click on &amp;quot;WDF KinectSensor Interface 0&amp;quot; &lt;/li&gt;
    &lt;li&gt;Click &amp;quot;Update Driver Software...&amp;quot; &lt;/li&gt;
    &lt;li&gt;Click &amp;quot;Search automatically for updated driver software&amp;quot; &lt;/li&gt;
    &lt;li&gt;Allow it to download and install the new driver &lt;/li&gt;
    &lt;li&gt;Reboot &lt;/li&gt;
  &lt;/ol&gt;
&lt;/ol&gt;
&lt;ul&gt;
  &lt;li&gt;Set up Windows Hello. Press the Start button and type &amp;quot;hello&amp;quot; or &amp;quot;face sign-in&amp;quot; and you'll get here. You'll want to setup a PIN first. &lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img title="Windows Hello" style="display: inline" alt="Windows Hello" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_51ff479e-e211-4bf1-af53-5a0071833937.png" width="757" height="356" /&gt;&lt;/figure&gt; 
&lt;p&gt;Run through the wizard, except look nicer than this.&lt;/p&gt;
&lt;p&gt;&lt;img title="ZOMG HELLO WINDOWS" style="display: inline" alt="ZOMG HELLO WINDOWS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_5f38b8cf-59e5-43c9-bef8-cca194f65c8d.png" width="458" height="549" /&gt;&lt;/p&gt;
&lt;p&gt;You're all set! Now when you sit at your computer and see the Lock Screen, it will look for you. &lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Privacy Note: &lt;/strong&gt;The camera isn't on and looking all the time. It's just looking when the screen is locked AND the screen saver (power saver) isn't going. Additionally, the Kinect light will turn on showing you that it's on. It's not streaming your face to any remote servers, it's using what it knows about your face as a key to unlock secure storages locally. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img title="Making sure it&amp;#39;s you" style="display: inline" alt="Making sure it&amp;#39;s you" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_24606c3a-7e85-4395-a5d5-e3e370b59bfb.png" width="450" height="182" /&gt;&lt;/p&gt;
&lt;p&gt;Then you just hit the space bar or click the mouse and you're in!&lt;/p&gt;
&lt;figure&gt;&lt;img title="It is! Hello!" style="display: inline" alt="It is! Hello!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_ebfcf5f0-f77e-43dc-be36-dd878101a4be.png" width="849" height="264" /&gt;&lt;/figure&gt; 
&lt;p&gt;Windows Hello is also built into the Surface Pro 4 and the SurfaceBook, but you can add this functionality to your PC with a Kinect...OR....&lt;/p&gt;
&lt;p&gt;If you don't want a Kinect + Adapter or a new PC, you &lt;u&gt;can&lt;/u&gt;&lt;strong&gt; &lt;/strong&gt;buy an eye tracker like the &lt;a href="http://www.tobii.com/xperience/products/"&gt;Tobii Eye Controller&lt;/a&gt; or the &lt;a href="https://steelseries.com/gaming-controllers/sentry-gaming-eye-tracker"&gt;SteelSeries Gaming Eye Tracker&lt;/a&gt;. &lt;a href="http://www.tobii.com/xperience/hello/"&gt;Tobii just added support for Windows 10 with Windows Hello to their controller&lt;/a&gt;! So for $139 you could get a nice upgrade to your PC with face recognition, not to mention all the other cool stuff a Tobii can do!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.tobii.com/xperience/hello/"&gt;&lt;img title="Tobii Eye Tracker adds Windows Hello to your PC" style="display: inline" alt="Tobii Eye Tracker adds Windows Hello to your PC" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/Web_Images_EyeX_2660x1280_9f07aa07-e38d-478f-963c-45eb1be98358.jpg" width="600" height="289" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Tobii $139 device can let you (or a disabled relative) control your computer with just your eyes. There's a wonderful &lt;a href="http://hanselminutes.com/502/optikey-open-source-assistive-tech-for-motor-neuron-disease"&gt;open source tool called OptiKey&lt;/a&gt; that helps folks with Motor Neuron disease or ALS control their Windows machines, and &lt;a href="http://hanselminutes.com/502/optikey-open-source-assistive-tech-for-motor-neuron-disease"&gt;I had the developer on my podcast recently&lt;/a&gt;. Definitely check it out as a compelling and accurate alternative way to control your PC!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://bit.ly/1Ie48G4"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://bit.ly/1Ie48G4"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Fri, 18 Dec 2015 22:29:25 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/SigningIntoWindows10WithYourFaceUsingAnXboxOneKinectWithWindowsHello.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=9414a3c8-093b-47e9-b3b7-fbc7928cb7df</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=9414a3c8-093b-47e9-b3b7-fbc7928cb7df</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=9414a3c8-093b-47e9-b3b7-fbc7928cb7df</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=9414a3c8-093b-47e9-b3b7-fbc7928cb7df</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">19</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=9414a3c8-093b-47e9-b3b7-fbc7928cb7df</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;The original version of the Kinect camera had an Xbox version and a PC version, and this sucked for a few reasons. Fast forward to the days of Xbox One, and the Kinect v2 for Xbox One has changed a lot. It has a 1080p color camera, IR capabilities that are separate from color, a wider FOV (field of view), and can track 6 skeletons. AND, most importantly, you can &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1PeoFM5"&gt;use your existing Xbox One Kinect with your PC with an adapter&lt;/a&gt;. No need for a second Kinect. The &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1PeoFM5"&gt;Kinect Adapter for Windows is $50&lt;/a&gt; and took me 5 min to set up. It's basically a power brick and a USB 3 bridge to your PC.&lt;/p&gt;  &lt;p&gt;You do need a decent machine to handle the Kinect for Xbox One, so there's a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://dev.windows.com/en-us/kinect/hardware-setup"&gt;Kinect Configuration Verifier Tool&lt;/a&gt; that can quickly tell you if you're up to spec. If you are developing applications, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~go.microsoft.com/fwlink/p/?LinkID=403899"&gt;download and install the free SDK 2.0&lt;/a&gt;. It's worth getting this even if you aren't, if only to see the cool stuff your Kinect can see about you.&lt;/p&gt;  &lt;p&gt;&lt;img title="A Kinect can see you in 3D" style="display: inline" alt="A Kinect can see you in 3D" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_cc65157d-1455-4ed5-996d-03feb71f9b7c.png" width="602" height="357" /&gt;&lt;/p&gt;  &lt;p&gt;&lt;img title="The Kinect knows too much!" style="display: inline" alt="The Kinect knows too much!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_5a50c840-8588-4ae7-a10e-c511e205de0f.png" width="601" height="356" /&gt;&lt;/p&gt;  &lt;h3&gt;Setting up your Kinect v2 to support Windows Hello on your Windows 10 PC&lt;/h3&gt;  &lt;p&gt;Here's how you setup Windows Hello. It's pretty awesome because my home computer &lt;em&gt;unlocks and logs in when I sit down and look at it&lt;/em&gt;.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Update the Registry to get Drivers that aren't available yet. Make a text file &amp;quot;kinectdrivers.reg&amp;quot; and put this text in it. Double-click it to import into your Registry. &lt;/li&gt; &lt;/ul&gt;  &lt;pre&gt;Windows Registry Editor Version 5.00
&lt;br&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DriverFlighting\Partner]
&lt;br&gt;&amp;quot;TargetRing&amp;quot;=&amp;quot;Drivers&amp;quot;&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;If you've already set up your Kinect, refresh it's drivers in the Device Manager. &lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
  &lt;ol&gt;
    &lt;li&gt;Open Device Manager (Windows Key + X, then press M) &lt;/li&gt;
    &lt;li&gt;Expand “Kinect sensor devices”. &lt;/li&gt;
    &lt;li&gt;Right-click on &amp;quot;WDF KinectSensor Interface 0&amp;quot; &lt;/li&gt;
    &lt;li&gt;Click &amp;quot;Update Driver Software...&amp;quot; &lt;/li&gt;
    &lt;li&gt;Click &amp;quot;Search automatically for updated driver software&amp;quot; &lt;/li&gt;
    &lt;li&gt;Allow it to download and install the new driver &lt;/li&gt;
    &lt;li&gt;Reboot &lt;/li&gt;
  &lt;/ol&gt;
&lt;/ol&gt;
&lt;ul&gt;
  &lt;li&gt;Set up Windows Hello. Press the Start button and type &amp;quot;hello&amp;quot; or &amp;quot;face sign-in&amp;quot; and you'll get here. You'll want to setup a PIN first. &lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img title="Windows Hello" style="display: inline" alt="Windows Hello" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_51ff479e-e211-4bf1-af53-5a0071833937.png" width="757" height="356" /&gt;&lt;/figure&gt; 
&lt;p&gt;Run through the wizard, except look nicer than this.&lt;/p&gt;
&lt;p&gt;&lt;img title="ZOMG HELLO WINDOWS" style="display: inline" alt="ZOMG HELLO WINDOWS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_5f38b8cf-59e5-43c9-bef8-cca194f65c8d.png" width="458" height="549" /&gt;&lt;/p&gt;
&lt;p&gt;You're all set! Now when you sit at your computer and see the Lock Screen, it will look for you. &lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Privacy Note: &lt;/strong&gt;The camera isn't on and looking all the time. It's just looking when the screen is locked AND the screen saver (power saver) isn't going. Additionally, the Kinect light will turn on showing you that it's on. It's not streaming your face to any remote servers, it's using what it knows about your face as a key to unlock secure storages locally. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img title="Making sure it&amp;#39;s you" style="display: inline" alt="Making sure it&amp;#39;s you" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_24606c3a-7e85-4395-a5d5-e3e370b59bfb.png" width="450" height="182" /&gt;&lt;/p&gt;
&lt;p&gt;Then you just hit the space bar or click the mouse and you're in!&lt;/p&gt;
&lt;figure&gt;&lt;img title="It is! Hello!" style="display: inline" alt="It is! Hello!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/image_ebfcf5f0-f77e-43dc-be36-dd878101a4be.png" width="849" height="264" /&gt;&lt;/figure&gt; 
&lt;p&gt;Windows Hello is also built into the Surface Pro 4 and the SurfaceBook, but you can add this functionality to your PC with a Kinect...OR....&lt;/p&gt;
&lt;p&gt;If you don't want a Kinect + Adapter or a new PC, you &lt;u&gt;can&lt;/u&gt;&lt;strong&gt; &lt;/strong&gt;buy an eye tracker like the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.tobii.com/xperience/products/"&gt;Tobii Eye Controller&lt;/a&gt; or the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://steelseries.com/gaming-controllers/sentry-gaming-eye-tracker"&gt;SteelSeries Gaming Eye Tracker&lt;/a&gt;. &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.tobii.com/xperience/hello/"&gt;Tobii just added support for Windows 10 with Windows Hello to their controller&lt;/a&gt;! So for $139 you could get a nice upgrade to your PC with face recognition, not to mention all the other cool stuff a Tobii can do!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.tobii.com/xperience/hello/"&gt;&lt;img title="Tobii Eye Tracker adds Windows Hello to your PC" style="display: inline" alt="Tobii Eye Tracker adds Windows Hello to your PC" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/506c4961c74c_C2C1/Web_Images_EyeX_2660x1280_9f07aa07-e38d-478f-963c-45eb1be98358.jpg" width="600" height="289" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Tobii $139 device can let you (or a disabled relative) control your computer with just your eyes. There's a wonderful &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hanselminutes.com/502/optikey-open-source-assistive-tech-for-motor-neuron-disease"&gt;open source tool called OptiKey&lt;/a&gt; that helps folks with Motor Neuron disease or ALS control their Windows machines, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hanselminutes.com/502/optikey-open-source-assistive-tech-for-motor-neuron-disease"&gt;I had the developer on my podcast recently&lt;/a&gt;. Definitely check it out as a compelling and accurate alternative way to control your PC!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week! Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1Ie48G4"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1Ie48G4"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/129033839/0/scotthanselman"&gt;
&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/129033839/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067672</guid><link>http://www.dotnetcurry.com/aspnet-mvc/1215/building-aspnet-mvc-6-entity-framework-7-app-using-aspnet-5</link><title>Building ASP.NET MVC 6 &amp; Entity Framework 7 application using ASP.NET 5 RC </title><description> Mahesh Sabnis shows how to build a web application in ASP.NET MVC 6 &amp;amp; Entity Framework 7 using ASP.NET 5 RC1.</description><pubDate>Fri, 18 Dec 2015 16:07:47 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/3106687/mahesh-sabnis.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067671</guid><link>http://www.exceptionnotfound.net/using-http-methods-correctly-in-asp-net-web-api/</link><title>Using HTTP Methods (GET, POST, PUT, etc.) in ASP.NET Web API</title><description> Matthew P. Jones explains HTTP methods and discusses how and when to use them in ASP.NET Web API projects.</description><pubDate>Thu, 17 Dec 2015 16:05:20 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/4554293/matthew-jones.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067670</guid><link>http://damienbod.com/2015/12/05/asp-net-5-mvc-6-file-upload-with-ms-sql-server-filetable/</link><title>ASP.NET 5 / MVC 6 File Upload with SQL Server FileTable </title><description> Damien Bod shows how to upload and download files in ASP.NET 5 / MVC 6 and save the files to a SQL Server using FileTable.</description><pubDate>Wed, 16 Dec 2015 16:02:30 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/3065262/anonymous.png" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067669</guid><link>http://www.danylkoweb.com/Blog/5-major-mistakes-i-made-with-aspnet-mvc-DA</link><title>5 Major Mistakes I Made With ASP.NET MVC</title><description> Jonathan Danylko lists five mistakes he made as he was learning ASP.NET MVC.</description><pubDate>Tue, 15 Dec 2015 16:00:24 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/5245111/jonathan_danylko.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067668</guid><link>http://www.mikesdotnetting.com/Article/289/seo-for-asp-net-web-sites-content</link><title>SEO For ASP.NET Web Sites: Content </title><description> Mike Brind begins a series exploring how to optimize ASP.NET web sites (Web Forms and MVC) for search engines.</description><pubDate>Mon, 14 Dec 2015 15:55:57 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/1777049/mike-brind_1_.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067629</guid><link>https://www.youtube.com/watch?v=_7u9dOyK92o</link><title>[video] Let's Build - ASP.NET MVC 5 TodoList with Entity Framework and Identity [Part 1]</title><description> Steve Woods begins a video series showing how to build a TodoList application using ASP.NET 5, Entity Framework, and Identity.</description><pubDate>Fri, 11 Dec 2015 23:38:38 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/5245110/steve-woods.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067623</guid><link>https://www.pluralsight.com/courses/aspdotnet-5-ef7-bootstrap-angular-web-app</link><title>Building a Web App with ASP.NET 5, MVC 6, EF7, and AngularJS </title><description> Shawn Wildermuth introduces a 9 hour ASP.NET 5 course on Pluralsight.</description><pubDate>Thu, 10 Dec 2015 20:58:04 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/212252/shawn-wildermuth-70x70.png" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=dbd3071f-3f33-4526-97cb-30324d4ffd0c</guid><link>http://feeds.hanselman.com/~/127398807/0/scotthanselman~Announcing-Open-Live-Writer-An-Open-Source-Fork-of-Windows-Live-Writer.aspx</link><category>Open Source</category><title>Announcing Open Live Writer - An Open Source Fork of Windows Live Writer</title><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://www.openlivewriter.org"&gt;&lt;img title="Open Live Writer is the spiritual successor to Windows Live Writer" style="display: inline" alt="Open Live Writer is the spiritual successor to Windows Live Writer" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Announcing-Open-Live-Writer---An-Open-So_126D3/openlivewriter-purpleheader_f6470329-c239-4f06-b466-805d65b9bd70.png" width="608" height="117" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.openlivewriter.org"&gt;&lt;img title="Meta enough for you?" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Meta enough for you?" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Announcing-Open-Live-Writer---An-Open-So_126D3/image_2fb79ff8-26ce-4cc4-9c9a-e8956094fd9e.png" width="400" align="right" height="388" /&gt;&lt;/a&gt;Today is the day. An independent group of volunteers within Microsoft has successfully open sourced and forked Windows Live Writer. The fork is called &lt;a href="http://www.openlivewriter.org"&gt;&lt;strong&gt;Open Live Writer&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; &lt;/strong&gt;(also known as OLW) and it is part of the &lt;a href="https://www.dotnetfoundation.org/blog"&gt;.NET Foundation&lt;/a&gt; and managed by this group of volunteers. Read the &lt;a href="http://www.dotnetfoundation.org/blog/open-live-writer"&gt;fantastic announcement at the .NET Foundation Blog&lt;/a&gt;! &lt;a href="http://www.openlivewriter.org"&gt;&lt;strong&gt;Download Open Live Writer now!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Windows Live Writer 2012 was the last version Microsoft released and can still be downloaded from &lt;a href="http://www.windowslivewriter.com"&gt;http://www.windowslivewriter.com&lt;/a&gt;. If you're not comfortable using Open Source Software, I recommend you stick with classic WLW. &lt;/p&gt;  &lt;p&gt;If you're willing to put up with some bugs, then join us in this brave new world, you can download &lt;a href="http://www.openlivewriter.org"&gt;Open Live Writer&lt;/a&gt; from &lt;a href="http://www.openlivewriter.org"&gt;http://www.openlivewriter.org&lt;/a&gt;. We're calling today's release version 0.5. &lt;/p&gt;  &lt;p&gt;Here's some of the added features, the removed features, the stuff that doesn't work, and our plans for the future:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;REMOVED:&lt;/strong&gt; Spell Checking. The implementation was super old and used a 3rd party spell checker we didn't have a license to include an open source release. Going forward we will add Spell Check using the built-in spell checker that was added in Windows 8. Open Live Writer on Windows 7 probably won't have spell check. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;REMOVED: &lt;/strong&gt;The Blog This API. It was a plugin to Internet Explorer and Firefox and was a mess of old COM stuff. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;REMOVED: &lt;/strong&gt;The &amp;quot;Albums&amp;quot; feature. It uploaded photos to OneDrive but depended on a library that was packaged with Windows Live Mail and Live Messenger and we couldn't easily get permission to distribute it in an open source project. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;&lt;em&gt;ADDING VERY SOON&lt;/em&gt;: &lt;/strong&gt;Google runs the excellent Blogger blog service. We've worked with the Blogger Team within Google on this project, and they've been kind enough to keep an older authentication endpoint running for many months while we work on Open Live Writer. Soon, Google and Blogger will finally shut down this older authentication system. Blogger will use the more modern OAuth 2 and Open Live Writer will be updated to support OAuth 2. &lt;em&gt;Windows Live Writer will never support this new OAuth 2 authentication system, so if you use Blogger, you'll need to use Open Live Writer.&lt;/em&gt; &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;BROKEN/KNOWN ISSUES: &lt;/strong&gt;We are actively working on supporting Plugins. We have an plan in place and &lt;a href="https://www.surveymonkey.com/r/OLWPlugIns"&gt;we are looking for your feedback&lt;/a&gt; on the most popular plugins that you want brought over from the Windows Live Writer ecosystem. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Our &lt;a href="https://github.com/OpenLiveWriter/OpenLiveWriter/blob/master/roadmap.md"&gt;roadmap for the future is published here on GitHub&lt;/a&gt;.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Open Live Writer is NOT a Microsoft product. It is an open source project under the .NET Foundation and is managed and coded by volunteers. Some of the volunteers work for Microsoft and are doing this work in their spare time. &lt;/p&gt; &lt;/blockquote&gt;  &lt;h3&gt;Are you an existing user of Windows Live Writer?&lt;/h3&gt;  &lt;p&gt;We encourage you to install &lt;a href="http://www.openlivewriter.org"&gt;Open Live Writer&lt;/a&gt; and try it out! OLW will run side-by-side with your existing Windows Live Writer installation. Open Live Writer installs VERY quickly and updates itself automatically. Try it out! It's early but it's a start. Please bear with us as we work to improve Open Live Writer.&lt;/p&gt;  &lt;p&gt;if you do find bugs, please share your bugs at &lt;a title="https://github.com/OpenLiveWriter/OpenLiveWriter/issues" href="https://github.com/OpenLiveWriter/OpenLiveWriter/issues"&gt;https://github.com/OpenLiveWriter/OpenLiveWriter/issues&lt;/a&gt; and be specific about what's not working. And please, be patient. We are doing this as volunteers - we are NOT representing Microsoft. Open Live Writer is no longer a Microsoft project, so while we will do our best to support you, let's all try to support one another!&lt;/p&gt;  &lt;h3&gt;Are you a developer/designer/writer?&lt;/h3&gt;  &lt;p&gt;We've got dozens of volunteers and a few dedicated core committers. Your Pull Requests and code ARE appreciated, but please talk to the team and comment on issues before submitting any &lt;em&gt;major &lt;/em&gt;Pull Requests (PRs). Community is appreciated and we don't want to reject your hard work, so it's best you talk to the team in a GitHub Issue and get approved for large work items before you spend a lot of time on OLW. We welcome &lt;a href="http://firsttimersonly.com"&gt;http://firsttimersonly.com&lt;/a&gt; to open source as well! Help us with our docs, as well!&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;IMPORTANT HISTORICAL NOTE: &lt;/strong&gt;Much of the code in Open Live Writer is nearly 10 years old. The coding conventions, styles, and idioms are circa .NET 1.0 and .NET 1.1. You may find the code unusual or unfamiliar, so keep that in mind when commenting and discussing the code. Before we start adding a bunch of async and await and new .NET 4.6isms, we want to focus on stability and regular updates.&amp;#160; &lt;/p&gt; &lt;/blockquote&gt;  &lt;h3&gt;Building Open Live Writer and making your own personal copy!&lt;/h3&gt;  &lt;p&gt;To be clear, you don't need to be a programmer to run OLW. Just head over to &lt;a href="http://www.openlivewriter.org"&gt;http://www.openlivewriter.org&lt;/a&gt; and download now. However, if you do want to hack on OLW here's how!&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;     &lt;h4&gt;Clone the sources: &lt;code&gt;git clone https://github.com/OpenLiveWriter/OpenLiveWriter.git&lt;/code&gt;&lt;/h4&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;At this point, you can build and run inside &lt;a href="https://www.visualstudio.com/free"&gt;Visual Studio 2015 Community&lt;/a&gt;. It's free to download at &lt;a title="https://www.visualstudio.com/free" href="https://www.visualstudio.com/free"&gt;https://www.visualstudio.com/free&lt;/a&gt;. A solution file for OLW is located at&lt;code&gt;.\src\managed\writer.sln&lt;/code&gt;.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Alternatively, you can build at the command prompt:      &lt;ul&gt;       &lt;li&gt;Run &lt;code&gt;.\build&lt;/code&gt; to compile. The binaries are dropped in &lt;code&gt;.\src\managed\bin\Debug\i386\Writer\&lt;/code&gt; &lt;/li&gt;        &lt;li&gt;Run &lt;code&gt;.\run&lt;/code&gt; to launch Writer. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Going Forward&lt;/h3&gt;  &lt;p&gt;I know it felt like it took a long time to open source Open Live Writer. In fact, my buddy John Gallant found the first email where we started asking questions in April of 2013. There was a lot involved both legally and technically as we were breaking new ground for Microsoft. Consider this. We've successfully open sourced a previously completely proprietary piece of Windows software that shipped as part of Windows Live Essentials. This software was used by millions and contained code as old as a decade or more. Persistence pays off.&lt;/p&gt;  &lt;p&gt;This is just the beginning! Big thanks to the team that made this possible. Specifically I want to call out Will Duff, Rob Dolin, and Robert Standefer who have been there from the beginning offering coding, logistical, and legal support. Thanks to Ben Pham for our logo, and Martin Woodward from the .NET Foundation for his support, Azure Storage account, and code signing certificate! I can't thank everyone here, there's a &lt;a href="http://openlivewriter.org"&gt;longer list of contributors on our home page&lt;/a&gt;! &lt;/p&gt;  &lt;p&gt;We are looking forward to hearing from you and perhaps you'll join us in our open source journey.&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week. Responsive web design on any browser, any platform and any device with &lt;a href="http://bit.ly/1Q81IuZ"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://bit.ly/1Q81IuZ"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Wed, 09 Dec 2015 16:09:47 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/AnnouncingOpenLiveWriterAnOpenSourceForkOfWindowsLiveWriter.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=dbd3071f-3f33-4526-97cb-30324d4ffd0c</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=dbd3071f-3f33-4526-97cb-30324d4ffd0c</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=dbd3071f-3f33-4526-97cb-30324d4ffd0c</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=dbd3071f-3f33-4526-97cb-30324d4ffd0c</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">173</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=dbd3071f-3f33-4526-97cb-30324d4ffd0c</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openlivewriter.org"&gt;&lt;img title="Open Live Writer is the spiritual successor to Windows Live Writer" style="display: inline" alt="Open Live Writer is the spiritual successor to Windows Live Writer" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Announcing-Open-Live-Writer---An-Open-So_126D3/openlivewriter-purpleheader_f6470329-c239-4f06-b466-805d65b9bd70.png" width="608" height="117" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openlivewriter.org"&gt;&lt;img title="Meta enough for you?" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Meta enough for you?" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Announcing-Open-Live-Writer---An-Open-So_126D3/image_2fb79ff8-26ce-4cc4-9c9a-e8956094fd9e.png" width="400" align="right" height="388" /&gt;&lt;/a&gt;Today is the day. An independent group of volunteers within Microsoft has successfully open sourced and forked Windows Live Writer. The fork is called &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openlivewriter.org"&gt;&lt;strong&gt;Open Live Writer&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; &lt;/strong&gt;(also known as OLW) and it is part of the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.dotnetfoundation.org/blog"&gt;.NET Foundation&lt;/a&gt; and managed by this group of volunteers. Read the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.dotnetfoundation.org/blog/open-live-writer"&gt;fantastic announcement at the .NET Foundation Blog&lt;/a&gt;! &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openlivewriter.org"&gt;&lt;strong&gt;Download Open Live Writer now!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Windows Live Writer 2012 was the last version Microsoft released and can still be downloaded from &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.windowslivewriter.com"&gt;http://www.windowslivewriter.com&lt;/a&gt;. If you're not comfortable using Open Source Software, I recommend you stick with classic WLW. &lt;/p&gt;  &lt;p&gt;If you're willing to put up with some bugs, then join us in this brave new world, you can download &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openlivewriter.org"&gt;Open Live Writer&lt;/a&gt; from &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openlivewriter.org"&gt;http://www.openlivewriter.org&lt;/a&gt;. We're calling today's release version 0.5. &lt;/p&gt;  &lt;p&gt;Here's some of the added features, the removed features, the stuff that doesn't work, and our plans for the future:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;REMOVED:&lt;/strong&gt; Spell Checking. The implementation was super old and used a 3rd party spell checker we didn't have a license to include an open source release. Going forward we will add Spell Check using the built-in spell checker that was added in Windows 8. Open Live Writer on Windows 7 probably won't have spell check. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;REMOVED: &lt;/strong&gt;The Blog This API. It was a plugin to Internet Explorer and Firefox and was a mess of old COM stuff. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;REMOVED: &lt;/strong&gt;The &amp;quot;Albums&amp;quot; feature. It uploaded photos to OneDrive but depended on a library that was packaged with Windows Live Mail and Live Messenger and we couldn't easily get permission to distribute it in an open source project. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;&lt;em&gt;ADDING VERY SOON&lt;/em&gt;: &lt;/strong&gt;Google runs the excellent Blogger blog service. We've worked with the Blogger Team within Google on this project, and they've been kind enough to keep an older authentication endpoint running for many months while we work on Open Live Writer. Soon, Google and Blogger will finally shut down this older authentication system. Blogger will use the more modern OAuth 2 and Open Live Writer will be updated to support OAuth 2. &lt;em&gt;Windows Live Writer will never support this new OAuth 2 authentication system, so if you use Blogger, you'll need to use Open Live Writer.&lt;/em&gt; &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;BROKEN/KNOWN ISSUES: &lt;/strong&gt;We are actively working on supporting Plugins. We have an plan in place and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.surveymonkey.com/r/OLWPlugIns"&gt;we are looking for your feedback&lt;/a&gt; on the most popular plugins that you want brought over from the Windows Live Writer ecosystem. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Our &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/OpenLiveWriter/OpenLiveWriter/blob/master/roadmap.md"&gt;roadmap for the future is published here on GitHub&lt;/a&gt;.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Open Live Writer is NOT a Microsoft product. It is an open source project under the .NET Foundation and is managed and coded by volunteers. Some of the volunteers work for Microsoft and are doing this work in their spare time. &lt;/p&gt; &lt;/blockquote&gt;  &lt;h3&gt;Are you an existing user of Windows Live Writer?&lt;/h3&gt;  &lt;p&gt;We encourage you to install &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openlivewriter.org"&gt;Open Live Writer&lt;/a&gt; and try it out! OLW will run side-by-side with your existing Windows Live Writer installation. Open Live Writer installs VERY quickly and updates itself automatically. Try it out! It's early but it's a start. Please bear with us as we work to improve Open Live Writer.&lt;/p&gt;  &lt;p&gt;if you do find bugs, please share your bugs at &lt;a title="https://github.com/OpenLiveWriter/OpenLiveWriter/issues" href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://github.com/OpenLiveWriter/OpenLiveWriter/issues"&gt;https://github.com/OpenLiveWriter/OpenLiveWriter/issues&lt;/a&gt; and be specific about what's not working. And please, be patient. We are doing this as volunteers - we are NOT representing Microsoft. Open Live Writer is no longer a Microsoft project, so while we will do our best to support you, let's all try to support one another!&lt;/p&gt;  &lt;h3&gt;Are you a developer/designer/writer?&lt;/h3&gt;  &lt;p&gt;We've got dozens of volunteers and a few dedicated core committers. Your Pull Requests and code ARE appreciated, but please talk to the team and comment on issues before submitting any &lt;em&gt;major &lt;/em&gt;Pull Requests (PRs). Community is appreciated and we don't want to reject your hard work, so it's best you talk to the team in a GitHub Issue and get approved for large work items before you spend a lot of time on OLW. We welcome &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~firsttimersonly.com"&gt;http://firsttimersonly.com&lt;/a&gt; to open source as well! Help us with our docs, as well!&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;IMPORTANT HISTORICAL NOTE: &lt;/strong&gt;Much of the code in Open Live Writer is nearly 10 years old. The coding conventions, styles, and idioms are circa .NET 1.0 and .NET 1.1. You may find the code unusual or unfamiliar, so keep that in mind when commenting and discussing the code. Before we start adding a bunch of async and await and new .NET 4.6isms, we want to focus on stability and regular updates.&amp;#160; &lt;/p&gt; &lt;/blockquote&gt;  &lt;h3&gt;Building Open Live Writer and making your own personal copy!&lt;/h3&gt;  &lt;p&gt;To be clear, you don't need to be a programmer to run OLW. Just head over to &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.openlivewriter.org"&gt;http://www.openlivewriter.org&lt;/a&gt; and download now. However, if you do want to hack on OLW here's how!&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;     &lt;h4&gt;Clone the sources: &lt;code&gt;git clone https://github.com/OpenLiveWriter/OpenLiveWriter.git&lt;/code&gt;&lt;/h4&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;At this point, you can build and run inside &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.visualstudio.com/free"&gt;Visual Studio 2015 Community&lt;/a&gt;. It's free to download at &lt;a title="https://www.visualstudio.com/free" href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.visualstudio.com/free"&gt;https://www.visualstudio.com/free&lt;/a&gt;. A solution file for OLW is located at&lt;code&gt;.\src\managed\writer.sln&lt;/code&gt;.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Alternatively, you can build at the command prompt:      &lt;ul&gt;       &lt;li&gt;Run &lt;code&gt;.\build&lt;/code&gt; to compile. The binaries are dropped in &lt;code&gt;.\src\managed\bin\Debug\i386\Writer\&lt;/code&gt; &lt;/li&gt;        &lt;li&gt;Run &lt;code&gt;.\run&lt;/code&gt; to launch Writer. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Going Forward&lt;/h3&gt;  &lt;p&gt;I know it felt like it took a long time to open source Open Live Writer. In fact, my buddy John Gallant found the first email where we started asking questions in April of 2013. There was a lot involved both legally and technically as we were breaking new ground for Microsoft. Consider this. We've successfully open sourced a previously completely proprietary piece of Windows software that shipped as part of Windows Live Essentials. This software was used by millions and contained code as old as a decade or more. Persistence pays off.&lt;/p&gt;  &lt;p&gt;This is just the beginning! Big thanks to the team that made this possible. Specifically I want to call out Will Duff, Rob Dolin, and Robert Standefer who have been there from the beginning offering coding, logistical, and legal support. Thanks to Ben Pham for our logo, and Martin Woodward from the .NET Foundation for his support, Azure Storage account, and code signing certificate! I can't thank everyone here, there's a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~openlivewriter.org"&gt;longer list of contributors on our home page&lt;/a&gt;! &lt;/p&gt;  &lt;p&gt;We are looking forward to hearing from you and perhaps you'll join us in our open source journey.&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week. Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1Q81IuZ"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1Q81IuZ"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/127398807/0/scotthanselman"&gt;
&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/127398807/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067622</guid><link>https://github.com/ivaylokenov/AspNet.Mvc.TypedRouting</link><title>AspNet.Mvc.TypedRouting </title><description> Here's a helpful library from Ivaylo Kenov that gives you typed expression based routing and link generation in a ASP.NET MVC 6 web application.</description><pubDate>Wed, 09 Dec 2015 20:55:38 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/3065262/anonymous.png" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067621</guid><link>http://blogs.msdn.com/b/visualstudio/archive/2015/12/08/connect-demos-2015-healthclinic-biz.aspx</link><title>Connect(“demos”); // 2015: HealthClinic.biz</title><description> Erika Ehrli Cabral posts about the HealthCare.biz sample from Connect 2015, explaining how they built the application and how ASP.NET Web API services tied it together. Code available on GitHub.</description><pubDate>Tue, 08 Dec 2015 16:39:33 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/5245109/erika-ehrli-cabral.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067611</guid><link>http://dotnetliberty.com/index.php/2015/12/07/asp-net-5-web-api-faking-it-while-making-it/</link><title>ASP.NET 5 Web API: Faking It While Making It</title><description> Armen Shimoon begins a series on building an application with ASP.NET 5 Web API. In addition to the ASP.NET 5 tech, he gives an interesting explation of how and why he defers decisions while buildi...</description><pubDate>Mon, 07 Dec 2015 22:30:48 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/5245108/armen-shimoon.jpg" type="image/png" /></item><item><guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=657d4b90-61f8-47b2-92db-ddbe2e3e4337</guid><link>http://feeds.hanselman.com/~/126765021/0/scotthanselman~The-Christmas-List-of-Best-STEM-Toys-for-your-little-nerds-and-nerdettes.aspx</link><category>Musings</category><title>The 2015 Christmas List of Best STEM Toys for your little nerds and nerdettes</title><description>&lt;div&gt;&lt;p&gt;My 8 year old (recently 7, they grow so fast) asked recently, &amp;quot;are we nerds yet?&amp;quot; Being a nerd doesn't have the negative stigma it once did. A nerd is a &lt;a href="http://www.hanselman.com/blog/TeachYourKidsToBeFans.aspx"&gt;fan&lt;/a&gt;, and everyone should be enthusiastic about something. You might be a gardening nerd or a woodworking nerd. In this house, we are Maker Nerds. We've been doing some &lt;a href="http://www.hanselman.com/blog/ReviewDremel3DPrinterAndInitialImpressionsOfTheHPSprout.aspx"&gt;3D Printing&lt;/a&gt; lately, and are trying to expand into all kinds of makings. &lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;NOTE: &lt;/strong&gt;We're gearing up for another year of &lt;a href="http://www.marchisformakers.com"&gt;March Is For Makers&lt;/a&gt; coming soon in March of 2016. Now is a great time for you to catch up on March 2015's content!&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Here's a Christmas List of things that I've either personally purchased, tried for a time, or borrowed from a friend. These are great toys and products for kids of all genders and people of all ages.&lt;/p&gt;  &lt;h3&gt;Snap Circuits&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/B00CIXVITO/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVITO&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;&lt;img title="Snap Circuits" style="display: inline" alt="Snap Circuits" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/image_955d1b71-f0a1-4627-a4a8-788d7b7ef595_dc1891b7-e5f2-4a89-8709-61800426038d.jpg" width="600" height="373" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I love Snap Circuits and have &lt;a href="http://www.hanselman.com/blog/TeachingKidsElectronicsComputersAndProgrammingFundamentalsWithSnapCircuits.aspx"&gt;talked about them before on my blog&lt;/a&gt;. We quickly outgrew the 30 parts in the &lt;a href="http://www.amazon.com/gp/product/B00CIXVITO/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVITO&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;Snap Circuits Jr.&lt;/a&gt; Even though it has 100 projects, I recommend you get the &lt;a href="http://www.amazon.com/gp/product/B00CIXVIRQ/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVIRQ&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;Snap Circuits SC-300 that has 60 parts and 300 projects&lt;/a&gt;, or do what we did and just get the &lt;a href="http://www.amazon.com/gp/product/B00CIXVHUE/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVHUE&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;Snap Circuits Extreme SC-750&lt;/a&gt; that has &lt;a href="http://www.amazon.com/gp/product/B00CIXVHUE/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVHUE&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;80+ parts and 750 projects&lt;/a&gt;. I like this one because it includes a computer interface (via your microphone jack, so any old computer will work!) as well as a Solar Panel.&lt;/p&gt;  &lt;h3&gt;Dremel 3D Printer&lt;/h3&gt;  &lt;p&gt;We still use our &lt;a href="http://amzn.to/1NinglT"&gt;Dremel 3D Printer&lt;/a&gt; at least two or three times a week. We're &lt;a href="https://www.instagram.com/p/-nKeOuj2ZV/?taken-by=shanselman"&gt;printing a quadcopter&lt;/a&gt;, making &lt;a href="https://www.instagram.com/p/8WuaRMj2RF/?taken-by=shanselman"&gt;Minecraft Chess sets&lt;/a&gt;, and &lt;a href="https://www.instagram.com/p/6NlUyTD2VU/?taken-by=shanselman"&gt;creating gifts for the family&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;&lt;a href="http://amzn.to/1NinglT"&gt;&lt;img title="Minecraft 3D Printed Chess Set" style="display: inline" alt="Minecraft 3D Printed Chess Set" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/image_96281f1b-a8ce-47d9-bd24-5f8611449ad2_722fecd9-dbc8-4e81-b1cc-276525543472.jpg" width="600" height="348" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's some of my &lt;a href="http://www.hanselman.com/blog/CategoryView.aspx?category=3D+Printing"&gt;3D Printing posts&lt;/a&gt; so far:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/ReviewDremel3DPrinterAndInitialImpressionsOfTheHPSprout.aspx"&gt;Review: Dremel 3D Printer and initial impressions of the HP Sprout&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/3DPrinterShootout600PrintrbotVs20000UPrintSEPlus.aspx"&gt;3D Printer Shootout - $600 Printrbot vs. $20,000 uPrint SE Plus&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/CreatingExact3DModelsFor3DPrintingWithJavaScriptAndOpenJSCAD.aspx"&gt;Creating exact 3D Models for 3D Printing with JavaScript and OpenJSCAD&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;&lt;strong&gt;The Basics of 3D Printing in 2015 - from someone with 16 WHOLE HOURS' experience&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;It's been extremely reliable. Some folks complain that the Dremel system and software is proprietary, but it's very easy to use. Additionally, if you really don't like their custom software, companies like &lt;a href="https://www.simplify3d.com/"&gt;Simplify3D&lt;/a&gt; have Dremel support built right in. You can also use third party filament like &lt;a href="http://amzn.to/1ljWBvh"&gt;Proto-pasta&lt;/a&gt; with great success. We even &lt;a href="https://www.instagram.com/p/8jqXx9D2Tl/?taken-by=shanselman"&gt;extended the Dremel with a custom 3D printed spool adapter for Proto-pasta&lt;/a&gt; and &lt;a href="http://www.proto-pasta.com/collections/retail/products/plated-brass-wear-resistant-nozzles"&gt;upgraded nozzle&lt;/a&gt; and &lt;a href="http://www.proto-pasta.com/collections/retail/products/peel-a-part-flexible-build-plate?variant=3907441348"&gt;build plate&lt;/a&gt;. It's been fantastically reliable and I recommend the Dremel highly.&lt;/p&gt;  &lt;h3&gt;littleBits Electronics Gizmos and Gadgets&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://amzn.to/1QnXG0c"&gt;LittleBits&lt;/a&gt; are a more expensive than Snap Circuits, but they operate at a higher level of abstraction. While Snap Circuits will teach you about resistors and current and voltage, litlteBits is more oriented towards System Thinking. The &lt;a href="http://amzn.to/1QnXSwB'"&gt;littleBits Electronics Gizmos &amp;amp; Gadgets kit&lt;/a&gt; is massive and has kept my kids entertained for the last few weeks. It includes motors, wheels, lights, switches, servos, buzzers even a remote control. In fact, the remote control lets you remote any signal and make any gadget you come up with a wireless one.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://amzn.to/1QnXSwB'"&gt;&lt;img title="littleBits" style="display: inline" alt="littleBits" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/littleBits-Mounting-Boards-1_af602cb9-24d6-49bc-9100-3b67c1d472ba.jpg" width="519" height="335" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;LittleBits also has a LEGO compatibility system which, while a little persnickety, has allowed the kids to create remote controlled LEGO cars in minutes. They are very expandable and everything is modular. You can build more with additional kits, or you can get just one sensor or that one motor that you need.&lt;/p&gt;  &lt;h3&gt;The HP Stream 11.6 Laptop&lt;/h3&gt;  &lt;p&gt;First, let's be serious. &lt;a href="http://amzn.to/1ljY1pD"&gt;The HP Stream is a $199 laptop&lt;/a&gt; with an 11.6&amp;quot; screen. Surprisingly, you can &lt;a href="http://amzn.to/1QnZbLV"&gt;get a 13.3&amp;quot; screen for just $210&lt;/a&gt;. But on the real, it's not for office workers. It's not even for you. It's for the kids in your life. It's a good, solid, beginner laptop for kids. 2 gigs of ram, and a very modest 1.6 Ghz processor with just a 1366x768 screen, it runs Windows 10 pretty well, in fact and even includes Office 365 Personal for a year (that's Word, Excel, etc). &lt;/p&gt;  &lt;p&gt;&lt;a href="http://amzn.to/1ljY1pD"&gt;&lt;img title="HP Stream 11.6&amp;quot; Laptop" style="display: inline" alt="HP Stream 11.6&amp;quot; Laptop" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/911M-EI4NyL._SL1500__a73149c6-3ef3-4dff-b1c5-10923351c3f0.jpg" width="640" height="459" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I've even heard a parent call the HP Stream the &amp;quot;&lt;a href="http://amzn.to/1ljY1pD"&gt;Minecraft Laptop&lt;/a&gt;.&amp;quot; My sons took a week-long summer school Minecraft class with a room filled with these little laptops and they did just fine. It has just a 32gig SSD for a hard drive, but for &amp;lt;$20 you can add and &lt;a href="http://amzn.to/1ljYp7z"&gt;drop in a 64gig SD Card&lt;/a&gt; and tell Windows 10 to put downloaded apps onto the SD Card directly.&lt;/p&gt;  &lt;p&gt;This is a great machine for &amp;lt;$200 that you can feel comfortable giving to an 8 year old or tween and teach them how to code.&lt;/p&gt;  &lt;h3&gt;Raspberry Pi (any kind!)&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/Top10RaspberryPiMythsAndTruths.aspx"&gt;&lt;img title="Little boys on the Raspberry Pi" style="display: inline" alt="Little boys on the Raspberry Pi" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/raspberrypi2_1_33960497-d1a1-4dbc-a73c-3fac329560ae.jpg" width="363" height="365" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Every STEM house &lt;a href="http://amzn.to/1ljZ8W9"&gt;should have a Raspberry Pi or six&lt;/a&gt;! We've got 4? Or 5? They end up living inside robots, or taped to the garage door, or running &lt;a href="http://scummvm.org/"&gt;SCUMMVM&lt;/a&gt; Game Emulators, or powering DIY GameBoys. &lt;/p&gt;  &lt;p&gt;I recommend a &lt;a href="http://amzn.to/1ljZ8W9"&gt;complete Raspberry Pi Kit&lt;/a&gt; when you're just getting started as it guarantees you'll be up and running in minutes. They include the SD Card (acts as a hard drive), a power supply, a case, etc. All you need to provide is a USB Keyboard and Mouse. I ended up getting a &lt;a href="http://www.amazon.com/gp/product/B0041A5OGA/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=diabeticbooks&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B0041A5OGA"&gt;cheap Mini USB wired keyboard&lt;/a&gt; and &lt;a href="http://www.amazon.com/gp/product/B003L62T7W/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=diabeticbooks&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B003L62T7W"&gt;cheap USB wired mouse&lt;/a&gt; for simplicity. &lt;/p&gt;  &lt;p&gt;Raspberry Pis will give you back as much as you can put into them. While you can treat it as a very low-powered browser or basic machine, you should &lt;a href="http://www.hanselman.com/blog/ManyRaspberryPiProjectsHowCanYouNotLoveATinyComputer.aspx"&gt;really explore the breadth of projects you can make with a Raspberry Pi&lt;/a&gt;. Sure, the kids can learn Scratch or Python, but they can also &lt;a href="http://www.hanselman.com/blog/SettingUpWindows10ForIoTOnYourRaspberryPi2.aspx"&gt;build Raspberry Pi Robots&lt;/a&gt; or &lt;a href="http://www.hanselman.com/blog/TheNewRaspberryPi2WillRunWindows10AndRunUniversalApps.aspx"&gt;run a version of Windows 10 and play with C#&lt;/a&gt;. They can add their own electronics, lights, sounds, make radios, and more. &lt;/p&gt;  &lt;p&gt;If you want to save money, &lt;a href="http://amzn.to/1ljZQCY"&gt;get just a Raspberry Pi alone for &amp;lt;$40&lt;/a&gt; and use a micro-USB Cell Phone Power Supply, and whatever electronics you have around the house. Once I took a local kid to Goodwill (a thrift store) and we found the power supply, mouse, keyboard, AND LCD Monitor all in the electronics junk pile of the store for $25 total.&lt;/p&gt;  &lt;h3&gt;OWI Robotic Arm Edge&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/B0017OFRCY?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B0017OFRCY&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=X5LI4WTHTR2JXCRP"&gt;The OWI Robotic Arm Edge&lt;/a&gt; isn't a kit but it's a reasonably priced robotic arm to get kids thinking in terms of command and control and multiple dimensions. OWI also has a cool &lt;a href="http://www.amazon.com/gp/product/B004P4WTB0?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B004P4WTB0&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=BXDBST65Z72LUANW&amp;amp;=toys-and-games&amp;amp;qid=1419557468&amp;amp;sr=1-3"&gt;3in1 robot RC kit&lt;/a&gt; if you prefer driving robots around and more &amp;quot;rebuildability.&amp;quot;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.amazon.com/gp/product/B0017OFRCY?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B0017OFRCY&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=X5LI4WTHTR2JXCRP"&gt;&lt;img title="OWI Robotic Arm Edge" alt="OWI Robotic Arm Edge" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Robots-for-children-this-holiday-season_F513/51LAkVypvAL_62759a85-3435-448c-9d17-bde2377b44b7.jpg" width="500" height="376" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;What educational toys do YOU recommend this holiday season?&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;FYI&lt;/strong&gt;: These Amazon links are referral links. When you use them I get a tiny percentage. It adds up to taco money for me and the kids! I appreciate you - and &lt;em&gt;you &lt;/em&gt;appreciate me-&amp;#160; when you use these links to buy stuff.&lt;/p&gt; &lt;/blockquote&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week. Responsive web design on any browser, any platform and any device with &lt;a href="http://bit.ly/1Q81IuZ"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://bit.ly/1Q81IuZ"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</description><pubDate>Sun, 06 Dec 2015 07:13:02 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.hanselman.com/blog/The2015ChristmasListOfBestSTEMToysForYourLittleNerdsAndNerdettes.aspx</feedburner:origLink><trackback:ping xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">http://www.hanselman.com/blog/Trackback.aspx?guid=657d4b90-61f8-47b2-92db-ddbe2e3e4337</trackback:ping><pingback:server xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/pingback.aspx</pingback:server><pingback:target xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/">http://www.hanselman.com/blog/PermaLink.aspx?guid=657d4b90-61f8-47b2-92db-ddbe2e3e4337</pingback:target><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Scott Hanselman</dc:creator><wfw:comment xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/CommentView.aspx?guid=657d4b90-61f8-47b2-92db-ddbe2e3e4337</wfw:comment><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=657d4b90-61f8-47b2-92db-ddbe2e3e4337</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">28</slash:comments><comments>http://www.hanselman.com/blog/CommentView.aspx?guid=657d4b90-61f8-47b2-92db-ddbe2e3e4337</comments><content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/">&lt;div&gt;&lt;p&gt;My 8 year old (recently 7, they grow so fast) asked recently, &amp;quot;are we nerds yet?&amp;quot; Being a nerd doesn't have the negative stigma it once did. A nerd is a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TeachYourKidsToBeFans.aspx"&gt;fan&lt;/a&gt;, and everyone should be enthusiastic about something. You might be a gardening nerd or a woodworking nerd. In this house, we are Maker Nerds. We've been doing some &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ReviewDremel3DPrinterAndInitialImpressionsOfTheHPSprout.aspx"&gt;3D Printing&lt;/a&gt; lately, and are trying to expand into all kinds of makings. &lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;NOTE: &lt;/strong&gt;We're gearing up for another year of &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.marchisformakers.com"&gt;March Is For Makers&lt;/a&gt; coming soon in March of 2016. Now is a great time for you to catch up on March 2015's content!&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Here's a Christmas List of things that I've either personally purchased, tried for a time, or borrowed from a friend. These are great toys and products for kids of all genders and people of all ages.&lt;/p&gt;  &lt;h3&gt;Snap Circuits&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00CIXVITO/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVITO&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;&lt;img title="Snap Circuits" style="display: inline" alt="Snap Circuits" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/image_955d1b71-f0a1-4627-a4a8-788d7b7ef595_dc1891b7-e5f2-4a89-8709-61800426038d.jpg" width="600" height="373" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I love Snap Circuits and have &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TeachingKidsElectronicsComputersAndProgrammingFundamentalsWithSnapCircuits.aspx"&gt;talked about them before on my blog&lt;/a&gt;. We quickly outgrew the 30 parts in the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00CIXVITO/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVITO&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;Snap Circuits Jr.&lt;/a&gt; Even though it has 100 projects, I recommend you get the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00CIXVIRQ/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVIRQ&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;Snap Circuits SC-300 that has 60 parts and 300 projects&lt;/a&gt;, or do what we did and just get the &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00CIXVHUE/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVHUE&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;Snap Circuits Extreme SC-750&lt;/a&gt; that has &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B00CIXVHUE/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B00CIXVHUE&amp;amp;linkCode=as2&amp;amp;tag=diabeticbooks"&gt;80+ parts and 750 projects&lt;/a&gt;. I like this one because it includes a computer interface (via your microphone jack, so any old computer will work!) as well as a Solar Panel.&lt;/p&gt;  &lt;h3&gt;Dremel 3D Printer&lt;/h3&gt;  &lt;p&gt;We still use our &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1NinglT"&gt;Dremel 3D Printer&lt;/a&gt; at least two or three times a week. We're &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.instagram.com/p/-nKeOuj2ZV/?taken-by=shanselman"&gt;printing a quadcopter&lt;/a&gt;, making &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.instagram.com/p/8WuaRMj2RF/?taken-by=shanselman"&gt;Minecraft Chess sets&lt;/a&gt;, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.instagram.com/p/6NlUyTD2VU/?taken-by=shanselman"&gt;creating gifts for the family&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1NinglT"&gt;&lt;img title="Minecraft 3D Printed Chess Set" style="display: inline" alt="Minecraft 3D Printed Chess Set" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/image_96281f1b-a8ce-47d9-bd24-5f8611449ad2_722fecd9-dbc8-4e81-b1cc-276525543472.jpg" width="600" height="348" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's some of my &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/CategoryView.aspx?category=3D+Printing"&gt;3D Printing posts&lt;/a&gt; so far:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ReviewDremel3DPrinterAndInitialImpressionsOfTheHPSprout.aspx"&gt;Review: Dremel 3D Printer and initial impressions of the HP Sprout&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/3DPrinterShootout600PrintrbotVs20000UPrintSEPlus.aspx"&gt;3D Printer Shootout - $600 Printrbot vs. $20,000 uPrint SE Plus&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/CreatingExact3DModelsFor3DPrintingWithJavaScriptAndOpenJSCAD.aspx"&gt;Creating exact 3D Models for 3D Printing with JavaScript and OpenJSCAD&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBasicsOf3DPrintingIn2015FromSomeoneWith16WHOLEHOURSExperience.aspx"&gt;&lt;strong&gt;The Basics of 3D Printing in 2015 - from someone with 16 WHOLE HOURS' experience&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;It's been extremely reliable. Some folks complain that the Dremel system and software is proprietary, but it's very easy to use. Additionally, if you really don't like their custom software, companies like &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.simplify3d.com/"&gt;Simplify3D&lt;/a&gt; have Dremel support built right in. You can also use third party filament like &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1ljWBvh"&gt;Proto-pasta&lt;/a&gt; with great success. We even &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://www.instagram.com/p/8jqXx9D2Tl/?taken-by=shanselman"&gt;extended the Dremel with a custom 3D printed spool adapter for Proto-pasta&lt;/a&gt; and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/collections/retail/products/plated-brass-wear-resistant-nozzles"&gt;upgraded nozzle&lt;/a&gt; and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.proto-pasta.com/collections/retail/products/peel-a-part-flexible-build-plate?variant=3907441348"&gt;build plate&lt;/a&gt;. It's been fantastically reliable and I recommend the Dremel highly.&lt;/p&gt;  &lt;h3&gt;littleBits Electronics Gizmos and Gadgets&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1QnXG0c"&gt;LittleBits&lt;/a&gt; are a more expensive than Snap Circuits, but they operate at a higher level of abstraction. While Snap Circuits will teach you about resistors and current and voltage, litlteBits is more oriented towards System Thinking. The &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1QnXSwB'"&gt;littleBits Electronics Gizmos &amp;amp; Gadgets kit&lt;/a&gt; is massive and has kept my kids entertained for the last few weeks. It includes motors, wheels, lights, switches, servos, buzzers even a remote control. In fact, the remote control lets you remote any signal and make any gadget you come up with a wireless one.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1QnXSwB'"&gt;&lt;img title="littleBits" style="display: inline" alt="littleBits" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/littleBits-Mounting-Boards-1_af602cb9-24d6-49bc-9100-3b67c1d472ba.jpg" width="519" height="335" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;LittleBits also has a LEGO compatibility system which, while a little persnickety, has allowed the kids to create remote controlled LEGO cars in minutes. They are very expandable and everything is modular. You can build more with additional kits, or you can get just one sensor or that one motor that you need.&lt;/p&gt;  &lt;h3&gt;The HP Stream 11.6 Laptop&lt;/h3&gt;  &lt;p&gt;First, let's be serious. &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1ljY1pD"&gt;The HP Stream is a $199 laptop&lt;/a&gt; with an 11.6&amp;quot; screen. Surprisingly, you can &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1QnZbLV"&gt;get a 13.3&amp;quot; screen for just $210&lt;/a&gt;. But on the real, it's not for office workers. It's not even for you. It's for the kids in your life. It's a good, solid, beginner laptop for kids. 2 gigs of ram, and a very modest 1.6 Ghz processor with just a 1366x768 screen, it runs Windows 10 pretty well, in fact and even includes Office 365 Personal for a year (that's Word, Excel, etc). &lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1ljY1pD"&gt;&lt;img title="HP Stream 11.6&amp;quot; Laptop" style="display: inline" alt="HP Stream 11.6&amp;quot; Laptop" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/911M-EI4NyL._SL1500__a73149c6-3ef3-4dff-b1c5-10923351c3f0.jpg" width="640" height="459" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I've even heard a parent call the HP Stream the &amp;quot;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1ljY1pD"&gt;Minecraft Laptop&lt;/a&gt;.&amp;quot; My sons took a week-long summer school Minecraft class with a room filled with these little laptops and they did just fine. It has just a 32gig SSD for a hard drive, but for &amp;lt;$20 you can add and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1ljYp7z"&gt;drop in a 64gig SD Card&lt;/a&gt; and tell Windows 10 to put downloaded apps onto the SD Card directly.&lt;/p&gt;  &lt;p&gt;This is a great machine for &amp;lt;$200 that you can feel comfortable giving to an 8 year old or tween and teach them how to code.&lt;/p&gt;  &lt;h3&gt;Raspberry Pi (any kind!)&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/Top10RaspberryPiMythsAndTruths.aspx"&gt;&lt;img title="Little boys on the Raspberry Pi" style="display: inline" alt="Little boys on the Raspberry Pi" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/The-2015-Christmas-List-for-your-little-_13985/raspberrypi2_1_33960497-d1a1-4dbc-a73c-3fac329560ae.jpg" width="363" height="365" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Every STEM house &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1ljZ8W9"&gt;should have a Raspberry Pi or six&lt;/a&gt;! We've got 4? Or 5? They end up living inside robots, or taped to the garage door, or running &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~scummvm.org/"&gt;SCUMMVM&lt;/a&gt; Game Emulators, or powering DIY GameBoys. &lt;/p&gt;  &lt;p&gt;I recommend a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1ljZ8W9"&gt;complete Raspberry Pi Kit&lt;/a&gt; when you're just getting started as it guarantees you'll be up and running in minutes. They include the SD Card (acts as a hard drive), a power supply, a case, etc. All you need to provide is a USB Keyboard and Mouse. I ended up getting a &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B0041A5OGA/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=diabeticbooks&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B0041A5OGA"&gt;cheap Mini USB wired keyboard&lt;/a&gt; and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B003L62T7W/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=diabeticbooks&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B003L62T7W"&gt;cheap USB wired mouse&lt;/a&gt; for simplicity. &lt;/p&gt;  &lt;p&gt;Raspberry Pis will give you back as much as you can put into them. While you can treat it as a very low-powered browser or basic machine, you should &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ManyRaspberryPiProjectsHowCanYouNotLoveATinyComputer.aspx"&gt;really explore the breadth of projects you can make with a Raspberry Pi&lt;/a&gt;. Sure, the kids can learn Scratch or Python, but they can also &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/SettingUpWindows10ForIoTOnYourRaspberryPi2.aspx"&gt;build Raspberry Pi Robots&lt;/a&gt; or &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheNewRaspberryPi2WillRunWindows10AndRunUniversalApps.aspx"&gt;run a version of Windows 10 and play with C#&lt;/a&gt;. They can add their own electronics, lights, sounds, make radios, and more. &lt;/p&gt;  &lt;p&gt;If you want to save money, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~amzn.to/1ljZQCY"&gt;get just a Raspberry Pi alone for &amp;lt;$40&lt;/a&gt; and use a micro-USB Cell Phone Power Supply, and whatever electronics you have around the house. Once I took a local kid to Goodwill (a thrift store) and we found the power supply, mouse, keyboard, AND LCD Monitor all in the electronics junk pile of the store for $25 total.&lt;/p&gt;  &lt;h3&gt;OWI Robotic Arm Edge&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B0017OFRCY?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B0017OFRCY&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=X5LI4WTHTR2JXCRP"&gt;The OWI Robotic Arm Edge&lt;/a&gt; isn't a kit but it's a reasonably priced robotic arm to get kids thinking in terms of command and control and multiple dimensions. OWI also has a cool &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B004P4WTB0?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B004P4WTB0&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=BXDBST65Z72LUANW&amp;amp;=toys-and-games&amp;amp;qid=1419557468&amp;amp;sr=1-3"&gt;3in1 robot RC kit&lt;/a&gt; if you prefer driving robots around and more &amp;quot;rebuildability.&amp;quot;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.amazon.com/gp/product/B0017OFRCY?ie=UTF8&amp;amp;camp=213733&amp;amp;creative=393185&amp;amp;creativeASIN=B0017OFRCY&amp;amp;linkCode=shr&amp;amp;tag=diabeticbooks&amp;amp;linkId=X5LI4WTHTR2JXCRP"&gt;&lt;img title="OWI Robotic Arm Edge" alt="OWI Robotic Arm Edge" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Robots-for-children-this-holiday-season_F513/51LAkVypvAL_62759a85-3435-448c-9d17-bde2377b44b7.jpg" width="500" height="376" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;What educational toys do YOU recommend this holiday season?&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;FYI&lt;/strong&gt;: These Amazon links are referral links. When you use them I get a tiny percentage. It adds up to taco money for me and the kids! I appreciate you - and &lt;em&gt;you &lt;/em&gt;appreciate me-&amp;#160; when you use these links to buy stuff.&lt;/p&gt; &lt;/blockquote&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big thanks to Infragistics for sponsoring the feed this week. Responsive web design on any browser, any platform and any device with &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1Q81IuZ"&gt;Infragistics jQuery/HTML5 Controls&lt;/a&gt;.&amp;#160; Get super-charged performance with the world’s fastest HTML5 Grid - &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~bit.ly/1Q81IuZ"&gt;Download for free now&lt;/a&gt;!&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2015 Scott Hanselman. All rights reserved. 
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" alt="" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/126765021/0/scotthanselman"&gt;
&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/126765021/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt;&amp;#160;&lt;/div&gt;
</content:encoded></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067609</guid><link>https://visualstudiogallery.msdn.microsoft.com/6cf50a48-fc1e-4eaf-9e82-0b2a6705ca7d?tduid=(cc5a2889e9fd4651b24df75974f80b3a)(256380)(2459594)(TnL5HPStwNw-BWuR1I8EhIhesrA500MCnw)()</link><title>ASP.NET MVC Boilerplate extension - Updated for ASP.NET 5 RC 1</title><description> Rehan Saeed has updated ASP.NET MVC Boilerplate for ASP.NET 5 RC 1. This is a professional ASP.NET MVC template for building secure, fast, robust and adaptable web applications or sites.</description><pubDate>Fri, 04 Dec 2015 22:25:16 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/4547466/muhammad_rehan_saeed.jpg" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067607</guid><link>http://damienbod.com/2015/11/08/oauth2-implicit-flow-with-angular-and-asp-net-5-identity-server/</link><title>OAuth2 Implicit Flow with Angular and ASP.NET 5 IdentityServer</title><description> Damien Bod shows how to implement the OAuth2 Implicit Flow with an Angular client and IdentityServer3 hosted in ASP.NET 5.</description><pubDate>Thu, 03 Dec 2015 22:19:27 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/3065262/anonymous.png" type="image/png" /></item><item><guid isPermaLink="false">00000000-0000-0000-0000000067606</guid><link>https://azure.microsoft.com/en-us/blog/azure-webjobs-sdk-1-1-0-rtm/?tduid=(cc5a2889e9fd4651b24df75974f80b3a)(256380)(2459594)(TnL5HPStwNw-2pDlynZ5jkuGAqkkLF2pLA)()</link><title>Azure WebJobs SDK 1.1.0 RTM</title><description> Pranav Rastogi announces the release of Azure WebJobs SDK 1.1.0. It includes new triggers, extensibility model, WebHook support preview, and more.</description><pubDate>Wed, 02 Dec 2015 21:13:56 Z</pubDate><enclosure url="//media-www-asp.azureedge.net/media/3206928/rastogi_pranav.jpg" type="image/png" /></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/Markdown-Parser-TagHelper-In-ASPNET-MVC-6/</guid><title>Parsing Markdown Using Custom TagHelper In ASP.NET MVC 6</title><description>&lt;p&gt;Previous versions of MVC allows us to write &lt;a href="https://msdn.microsoft.com/en-us/library/system.web.mvc.htmlhelper%28v=vs.118%29.aspx" target="_blank"&gt;HtmlHelpers&lt;/a&gt; which does a pretty good job then and they are doing it now as well. But in MVC 6, the ASP.NET team has introduced TagHelpers.&lt;/p&gt;
&lt;p&gt;Parsing &lt;a href="https://en.wikipedia.org/wiki/Markdown" target="_blank"&gt;Mardown&lt;/a&gt; in .NET is way too simple than one can imagine. Thanks to Stackoverflow's &lt;a href="https://code.google.com/p/markdownsharp/" target="_blank"&gt;MardownSharp&lt;/a&gt; and Karlis Gangis's &lt;a href="https://github.com/Knagis/CommonMark.NET" target="_blank"&gt;CommonMark.NET&lt;/a&gt;. I use CommonMark.NET as it provides a much faster parsing than other libraries. The blogging platform I use is a custom blogging engine I wrote in MVC4. The post content is saved in HTML which makes my raw HTML way to messy when compared to simple markdown syntax. I have no plans to change the way it is right now, but for the other simple application which is quite similar to notes taking or blogging apps, I would like to save the content in markdown.&lt;/p&gt;
&lt;p&gt;I will start with a simple implementation of this custom TagHelper and then then we can look into the other ways to enhance it. Here is how easy it is to create your custom TagHelper.&lt;/p&gt;
&lt;p&gt;Create a new class file &lt;strong&gt;MarkdownTagHelper.cs&lt;/strong&gt;. Inside the file, rename the class name to match the file name or you can change the name way you like. In my case I am keeping the class name as same as the file name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pay attention to the name of the custom TagHelper. By design, compiler will remove the word TagHelper from the class name and the rest of the name will become your custom TagHelper name.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The next step is to inherit our class with &lt;strong&gt;TagHelper&lt;/strong&gt;s class. Every custom TagHelper will inherit this class. Just like the UserControl class when creating a custom user control. The TagHelper provide us two virtual methods, &lt;strong&gt;Process&lt;/strong&gt; and a &lt;strong&gt;ProcessAsync&lt;/strong&gt; method which we will be going to override to implement our custom logic for our custom markdown TagHelper. The first parameter is the &lt;strong&gt;TagHelperContext&lt;/strong&gt; which holds the information about the current tag and the second parameter is &lt;strong&gt;TagHelperOutput&lt;/strong&gt; object represents the output being generated by the TagHelper. As we need to parse the markdown in our razor view pages, we need to add reference of CommonMark.Net library. Use the below Nuget command to add it to your current project.&lt;/p&gt;
&lt;pre class="brush: bash;"&gt;Install-Package CommonMark.Net&lt;/pre&gt;
&lt;p&gt;Till here this is how the code will look like.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\11\MarkdownTagHelper.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;So now we have our custom TagHelper that will let us parse the markdown. But to use it in our views we need to opt-in for this TagHelper in the &lt;strong&gt;_ViewImports.cshtml&lt;/strong&gt; file. To enable your custom TagHelper just type in like this:&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;@addTagHelper "*, WebApplication1"&lt;/pre&gt;
&lt;p&gt;Your custom tag helper would have been turned purple in color on the view page. It is similar to the line above it where &lt;strong&gt;@addTagHelper&lt;/strong&gt; is importing all the TagHelpers from the given namespace. If you are not interested in opting-in for all the TagHelpers in the given namespace then make use of the &lt;strong&gt;@removeTagHelper&lt;/strong&gt; to disable the TagHelpers you don&amp;rsquo;t need. For this I want all the tag helpers I have created to be a part of the application and hence the * symbol.&lt;/p&gt;
&lt;p&gt;In your view, where you want to use this just type in &lt;strong&gt;&amp;lt;markdown&amp;gt;&lt;/strong&gt; and inside this tag you should have your markdown. To test it, you can view the any raw file in Github and copy the text. I am using &lt;a href="https://raw.githubusercontent.com/Knagis/CommonMark.NET/master/README.md" target="_blank"&gt;README.md&lt;/a&gt; from CommonMark.NET and it rendered perfectly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Caution:&lt;/strong&gt; When copy-pasting the markdown code from anywhere to your view make sure that you do not have a whitespace in the front of the line. This is only applicable when you are working with the in-line markdown. Here is the screenshot with comparison.&lt;br /&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\11\Comparison.png" alt="" /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hit F5 and see the markdown tag helper in action. Below is the output I get.&lt;br /&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\11\output markdown.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;This is the simplest of all. Now let&amp;rsquo;s add some prefix to our custom TagHelper. To add a custom tag prefix to the TagHelper, we just need to pay a visit to &lt;strong&gt;_ViewImports.cshtml&lt;/strong&gt; file again and add a new line like so:&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;@tagHelperPrefix "blog-"&lt;/pre&gt;
&lt;p&gt;After adding the above line in the file, go to the view page where you have used your custom TagHelper and you can notice that the &lt;strong&gt;&amp;lt;markdown&amp;gt;&lt;/strong&gt; tag isn&amp;rsquo;t purple anymore. This is because we now have to add a custom tag-prefix that we just defined in the &lt;strong&gt;_ViewImports.cshtml&lt;/strong&gt; file. Change it from &lt;strong&gt;&amp;lt;markdown&amp;gt;&lt;/strong&gt; to &lt;strong&gt;&amp;lt;blog-markdown&amp;gt;&lt;/strong&gt; and it is purple again.&lt;/p&gt;
&lt;p&gt;By design, the TagHelper will take &lt;strong&gt;&amp;lt;markdown&amp;gt;&lt;/strong&gt; as a tag to be processed. But it can be easily ignored by using the &lt;strong&gt;TargetElement&lt;/strong&gt; attribute at the top of the class and allow the use of another name rather than &lt;strong&gt;&amp;lt;markdown&amp;gt;&lt;/strong&gt;. This does not mean that you cannot use &lt;strong&gt;&amp;lt;markdown&amp;gt;&lt;/strong&gt; but instead you can also use the custom TagHelper with the name specify in this attribute.&lt;/p&gt;
&lt;p&gt;Now let&amp;rsquo;s add some attributes to my markdown TagHelper. Let&amp;rsquo;s try to add a url attribute which will help user to render the markdown on the view from a remote site like Github. To add an attribute, simply add a new public property of type string and call it &lt;strong&gt;url&lt;/strong&gt;. When you create a public property in the TagHelper class it is automatically assumed it is an attribute. To make use of this property, my view now simply say this:&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;&amp;lt;blog-markdown url="https://raw.githubusercontent.com/Knagis/CommonMark.NET/master/README.md"&amp;gt;
&amp;lt;/blog-markdown&amp;gt;&lt;/pre&gt;
&lt;p&gt;The url attribute value is being read by the TagHelper which in turn read the whole string of markdown from Github and render the HTML on the page. Let&amp;rsquo;s focus again on TargetElement attribute for a while. Consider a scenario where you don&amp;rsquo;t want your custom TagHelper to render or work if the attributes are not passed or missing. This is where &lt;strong&gt;TargetElement&lt;/strong&gt; attribute comes into picture. If I don&amp;rsquo;t want my TagHelper to work if the &lt;strong&gt;url&lt;/strong&gt; parameter is missing then you can simple write your &lt;strong&gt;TargetElement&lt;/strong&gt; attribute like so:&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;[TargetElement("markdown", Attributes = "url")]&lt;/pre&gt;
&lt;p&gt;Notice the &lt;strong&gt;Attributes&lt;/strong&gt; parameter. The &lt;strong&gt;Attributes&lt;/strong&gt; parameter allows you to set the name of all the attributes which should be processed by your TagHelper or else the TagHelper will not work. For instance, if I just use the &lt;strong&gt;&amp;lt;markdown&amp;gt;&lt;/strong&gt; TagHelper but did not pass the url attribute, the TagHelper will not execute and you will see the raw markdown code. My requirement is to have this TagHelper working with or without the use of &lt;strong&gt;url&lt;/strong&gt; attribute. I can comment out or remove the &lt;strong&gt;TargetElement&lt;/strong&gt; attribute or just remove the &lt;strong&gt;Attributes&lt;/strong&gt; parameter to get going.&lt;/p&gt;
&lt;p&gt;Here is the complete MarkdownTagHelper.cs:&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;using Microsoft.AspNet.Razor.Runtime.TagHelpers;
using System;
using System.Net.Http;
using System.Threading.Tasks;

namespace WebApplication1.TagHelpers
{
    //[TargetElement("markdown", Attributes = "url")]
    public class MarkdownTagHelper : TagHelper
    {
        //Attribute for our custom markdown
        public string Url { get; set; }

        private string parse_content = string.Empty;

        //Stolen from: http://stackoverflow.com/questions/7578857/how-to-check-whether-a-string-is-a-valid-http-url
        private bool isValidURL(string URL)
        {
            Uri uriResult;
            return Uri.TryCreate(URL, UriKind.Absolute, out uriResult)
                &amp;amp;&amp;amp; (uriResult.Scheme.ToLowerInvariant() == "http" || uriResult.Scheme.ToLowerInvariant() == "https");
        }

        public override async Task ProcessAsync(TagHelperContext context, TagHelperOutput output)
        {
            if (context.AllAttributes["url"] != null)
            {
                string url = context.AllAttributes["url"].Value.ToString();
                string webContent = string.Empty;
                if (url.Trim().Length &amp;gt; 0)
                {
                    if (isValidURL(url))
                    {
                        using (HttpClient client = new HttpClient())
                        {
                            webContent = await client.GetStringAsync(new Uri(url));
                            parse_content = CommonMark.CommonMarkConverter.Convert(webContent);
                            output.Content.SetContent(parse_content);
                        }
                    }
                }
            }
            else
            {
                //Gets the content inside the markdown element
                var content = await context.GetChildContentAsync();

                //Read the content as a string and parse it.
                parse_content = CommonMark.CommonMarkConverter.Convert(content.GetContent());

                //Render the parsed markdown inside the tags.
                output.Content.SetContent(parse_content);
            }
        }
    }
}&lt;/pre&gt;
&lt;p&gt;I found the full TagHelper feature in MVC 6 a lot more convenient and powerful. I hope you like it as well.&lt;/p&gt;</description><pubDate>Mon, 30 Nov 2015 21:01:56 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/Markdown-Parser-TagHelper-In-ASPNET-MVC-6/" /><a10:updated>2015-11-30T15:57:34Z</a10:updated></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/Free-E-Book-52-Tips-Tricks-to-Boost-NET-Performance-from-Redgate/</guid><title>Free E-Book: 52 Tips &amp; Tricks to Boost .NET Performance from Redgate</title><description>&lt;p&gt;&lt;img style="float: right;" src="/image.axd?picture=2015\11\52-tips-for-net-performance-400.png" alt="" width="181" height="180" /&gt;&lt;/p&gt;
&lt;p&gt;A super awesome free e-book from our friends at RedGate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;52 tips from the .NET community for boosting performance in your applications.&lt;/li&gt;
&lt;li&gt;Learn the secrets of your fellow developers and read advice from MVPs and other experts.&lt;/li&gt;
&lt;li&gt;Covers .NET and ASP.NET, database access, memory usage, and more...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href="http://www.red-gate.com/products/dotnet-development/ants-performance-profiler/entrypage/52-net-performance-tips" target="_blank"&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href="http://www.red-gate.com/products/dotnet-development/ants-performance-profiler/entrypage/52-net-performance-tips" target="_blank"&gt;Download Now&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt;</description><pubDate>Thu, 26 Nov 2015 08:21:51 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/Free-E-Book-52-Tips-Tricks-to-Boost-NET-Performance-from-Redgate/" /><a10:updated>2015-11-26T13:43:56Z</a10:updated></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/Controlling-16x2-LCD-With-Raspberry-PI-2-Using-Adafruit-Library/</guid><title>Controlling 16x2 LCD With Raspberry PI 2 Using Adafruit Library</title><description>&lt;p&gt;As an enthusiast, I started working with embedded with &lt;a href="http://www.netduino.com/" target="_blank"&gt;Netduino&lt;/a&gt;. It was fun but at the same time Netduino was not offering that much things that I can do now. For a person like me who has no knowledge of electronics and C/C++, this was a gift. Now here I am using Raspberry PI's latest version and I have everything I ever wanted on a single piece of hardware.&lt;/p&gt;
&lt;p&gt;To get started with Python and Raspberry PI, I looked into the "Hello World" sort of LED blinking example. Using the LCD is the second thing I would like to test and so here it is. Before you start, here are the things you will need.&lt;/p&gt;
&lt;p&gt;&lt;span style="white-space: pre;"&gt; &lt;/span&gt;1. 1 x Raspberry PI 2&lt;/p&gt;
&lt;p&gt;&lt;span style="white-space: pre;"&gt; &lt;/span&gt;2. LCD with 16x2 display - HD44780&lt;/p&gt;
&lt;p&gt;&lt;span style="white-space: pre;"&gt; &lt;/span&gt;3. 8 x Male-Female jumper wires&lt;/p&gt;
&lt;p&gt;&lt;span style="white-space: pre;"&gt; &lt;/span&gt;4. 5 x Male-Male jumper wires&lt;/p&gt;
&lt;p&gt;Here is the simple wiring to connect LCD with your Raspberry PI 2&lt;/p&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\7\RaspberryPI2-LCD.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;As you can see from the wiring diagram, the LCD will take up around 6 GPIO pins on your Raspberry PI. If you have some modules plugged in or you are planning to then there are chances that you will fall short of the GPIO pins. To save GPIO pins on your board, you can use MCP23008 or MCP23017 . To keep it simple, I am not using any port expanders for now.&lt;/p&gt;
&lt;p&gt;Now comes the code, I have a very little knowledge of Python at the moment. So I am going to stick with what I have read and tested. For controlling the LCD, I am going to use Adafruit's LCD library which you can get it from Github &lt;a href="https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code" target="_blank"&gt;here&lt;/a&gt;. I am going to use &lt;strong&gt;Adafruit_CharLCD.py&lt;/strong&gt; to control my LCD. The thing to keep in mind is that you cannot use this library out of the box. You have to make a change to set the correct GPIO pins in the &lt;strong&gt;__init__&lt;/strong&gt; function. Open the file using the below command.&lt;/p&gt;
&lt;pre class="brush: bash;"&gt;$ sudo nano Adafruit_CharLCD.py&lt;/pre&gt;
&lt;p&gt;If you are using the same wiring as I am, then change the &lt;strong&gt;__init__&lt;/strong&gt; function like this&lt;/p&gt;
&lt;pre class="brush: py;"&gt;def __init__init(self, pin_rs=26, pin_e=19, pins_db=[13, 6, 5, 11], GPIO=None):&lt;/pre&gt;
&lt;p&gt;Save the changes and we are good to go. To check if the wiring and the code changes are done properly, execute the below command in the same directory.&lt;/p&gt;
&lt;pre class="brush: bash;"&gt;$ sudo ./Adafruit_CharLCD_IPclock_example.py&lt;/pre&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\7\IP-Clock.jpg" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Let's try displaying some custom messages to the display with this simple program.&lt;/p&gt;
&lt;pre class="brush: py;"&gt;from Adafruit_CharLCD import Adafruit_CharLCD

lcd = Adafruit_CharLCD()
lcd.message("Raspberry PI 2\nLCD Demo")&lt;/pre&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\7\RPi-LCD-Demo.jpg" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Here is one more. The program will ask you to enter the string to display.&lt;/p&gt;
&lt;pre class="brush: py;"&gt;from Adafruit_CharLCD import Adafruit_CharLCD

lcd = Adafruit_CharLCD()

#Getting input from user
msg = raw_input("Enter message to display\n")

#Display it on the LCD
lcd.message(str(msg))&lt;/pre&gt;
&lt;p&gt;The reason I am using Adafruit library to control the display is because it has other useful functions to control LCD. Here is the list of functions that you can try.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;clear() -&lt;/strong&gt; Clears the LCD and remove text from the memory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;display()/noDisplay() -&lt;/strong&gt; Toggle the text visibility on the LCD. Text remains in the memory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cursor()/noCursor -&lt;/strong&gt; Toggle cursor visibility.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;blink()/noBlink() -&lt;/strong&gt; Toggle cursor blink.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;home() -&lt;/strong&gt; Take the cursor to the 0,0 position i.e. first column of first row.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;setCursor(col, row) -&lt;/strong&gt; Set the cursor to the specific position. Use &lt;strong&gt;lcd.begin(col, rows)&lt;/strong&gt; to set the number of columns and rows your display has.&lt;/p&gt;
&lt;p&gt;I hope this will be useful to the people who are just getting started with Raspberry Pi. You can also download the complete source code from Github &lt;a href="https://github.com/prashantkhandelwal/Pi-LCD" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;</description><pubDate>Mon, 20 Jul 2015 12:41:26 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/Controlling-16x2-LCD-With-Raspberry-PI-2-Using-Adafruit-Library/" /><a10:updated>2015-07-20T07:17:27Z</a10:updated></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/NET-Projects-You-Should-Be-Follwing-On-Github/</guid><title>.NET Projects You Should Be Follwing On Github</title><description>&lt;p&gt;Open-source has entirely change the programming and developers world. Today you can create any application, game, mobile app without spending a single penny. Thanks to open-source software and awesome community of developers and people behind them. As a .NET developer I have been developing enterprise applications for quite a long time and now I have shifted my focus towards developing products and understanding what it takes to make a successful product launch.&lt;/p&gt;
&lt;p&gt;Back then, I used to spend most of my time in investigating the new technologies and what technology we should be using to get this thing done. I still do that today, not because it is the requirement of the project but because I have been asking a lot of questions. The list of projects I have compiled below are the projects that have helped me in learning lots of new things and insights of the programming and I hope this does the same for you as well. &amp;nbsp;Here is the list of awesome open-source project that you should be following on Github.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.pinta-project.com/" target="_blank"&gt;&lt;strong&gt;Pinta&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src="/image.axd?picture=2015\7\pinta.jpg" alt="" /&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We all know about Paint.net, it is an awesome tool and a complete replacement of Photoshop (at least for me). And yet there is another project which is almost the same and open-source and it works on Linux and Mac. It uses Gtk# (Gtk sharp) to run on both Window and Linux platforms. This project is a must have if you are a .NET guy and want to get yourself into some serious programming. You will learn about the insights of using gtk# in your projects. Though Microsoft already took the steps to have .NET FX on Linux but still this project is a great learning source.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Official site:&lt;/strong&gt; &lt;a href="http://www.pinta-project.com/" target="_blank"&gt;http://www.pinta-project.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/PintaProject/Pinta" target="_blank"&gt;https://github.com/PintaProject/Pinta&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://getsharex.com/" target="_blank"&gt;&lt;strong&gt;ShareX&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src="/image.axd?picture=2015\7\ShareX_Screenshot.png" alt="" /&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I take a lot of screen shots and record screen casts as well for my personal use. But I used to use two different tools to get the work done. This is one of the tools that will not just take screen shots or just let you record your screen casts easily, it will also allow you to upload them to the 40 different image storing cloud services. Dive into the source code and see the awesomeness under the hood. Here is the project description as seen on Github.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ShareX is an open source program that lets you take screenshots or screencasts of any selected area with a single key, save them in your clipboard, hard disk or instantly upload them to over 40 different file hosting services. In addition to taking screenshots, it can upload images, text files and all other different file types.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Official site:&lt;/strong&gt; &lt;a href="https://getsharex.com/" target="_blank"&gt;https://getsharex.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/ShareX/ShareX" target="_blank"&gt;https://github.com/ShareX/ShareX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://data.stackexchange.com/" target="_blank"&gt;&lt;strong&gt;StackExchange - Data Explorer&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src="/image.axd?picture=2015\7\DataExplorer.PNG" alt="" width="782" /&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You got a programming question, you Google it and it redirects it to &lt;a href="http://stackoverflow.com" target="_blank"&gt;StackOverflow&lt;/a&gt;. StackOverflow needs no introduction among programmers. StackOverflow is one of the Q&amp;amp;A site dedicated to the developers to get the answers for their problems. But it is just one site. In the recent years StackExchange has grew up and not just providing support for programmers but also helping folks from other fields. Now the data StackExchange has is available for anyone out there for free under creative-commons. If you are interested in looking into the source code that powers the user to query that immense amount of data bank then head over to Github and fork this project. StackExchange is all about Microsoft stack and this tool is also written in ASP.NET MVC3.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Official App:&lt;/strong&gt; &lt;a href="https://data.stackexchange.com/" target="_blank"&gt;https://data.stackexchange.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/StackExchange/StackExchange.DataExplorer" target="_blank"&gt;https://github.com/StackExchange/StackExchange.DataExplorer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/madskristensen/MiniBlog" target="_blank"&gt;Mini Blog&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src="/image.axd?picture=2015\7\MiniBlog.PNG" alt="" width="631" /&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the minimalistic blog engine written in ASP.NET web pages by the author of &lt;a href="http://www.dotnetblogengine.net/" target="_blank"&gt;BlogEngine.NET&lt;/a&gt;, &lt;a href="madskristensen.net" target="_blank"&gt;Mads Kristensen&lt;/a&gt;. I started my bog with BlogEngine.NET and I had an amazing experience with it. MiniBlog is totally different in terms of features that are offered by BlogEngine.NET. This project will tell you the power of web pages and how you can write your own simple site without wasting much time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Demo:&lt;/strong&gt; &lt;a href="http://miniblog.azurewebsites.net/" target="_blank"&gt;http://miniblog.azurewebsites.net/&lt;/a&gt; (with user name and password as &lt;em&gt;&lt;strong&gt;demo&lt;/strong&gt;&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/madskristensen/MiniBlog" target="_blank"&gt;https://github.com/madskristensen/MiniBlog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/jgeurts/FluentScheduler" target="_blank"&gt;Fluent Scheduler&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you want to run cron jobs or automated jobs in your application quietly, then this is the library you should be using. The documentation is pretty sleek and get you started in no time. But other than that you should take a look at the source code and see how nicely this has been done.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/jgeurts/FluentScheduler" target="_blank"&gt;https://github.com/jgeurts/FluentScheduler&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/StackExchange/dapper-dot-net"&gt;Dapper&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A Micro-ORM used by StackExchange sites. This is a perfect replacement for EF. This is just a single file that you can drop in your project and get started.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dapper is a single file you can drop in to your project that will extend your IDbConnection interface.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/StackExchange/dapper-dot-net" target="_blank"&gt;https://github.com/StackExchange/dapper-dot-net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/svick/LINQ-to-Wiki" target="_blank"&gt;LINQ-toWIKI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A .NET library to access MediaWiki API. The library is almost 3 years old but the source code will worth the look. Excerpt from Github:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LinqToWiki is a library for accessing sites running MediaWiki (including Wikipedia) through the MediaWiki API from .Net languages like C# and VB.NET.&lt;/p&gt;
&lt;p&gt;It can be used to do almost anything that can be done from the web interface and more, including things like editing articles, listing articles in categories, listing all kinds of links on a page and much more. Querying the various lists available can be done using LINQ queries, which then get translated into efficient API requests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/svick/LINQ-to-Wiki" target="_blank"&gt;https://github.com/svick/LINQ-to-Wiki&lt;/a&gt;&lt;/p&gt;</description><pubDate>Sun, 19 Jul 2015 04:51:10 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/NET-Projects-You-Should-Be-Follwing-On-Github/" /><a10:updated>2015-07-19T04:51:10Z</a10:updated></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/Getting-Started-With-ASPNET-5-On-Ubuntu/</guid><title>Getting Started With ASP.NET 5 On Ubuntu</title><description>&lt;p&gt;Ever since the &lt;a href="http://blogs.msdn.com/b/dotnet/archive/2014/11/12/net-core-is-open-source.aspx" target="_blank"&gt;.NET stack went open source last year&lt;/a&gt;, there is a huge excitement among the developers about the .NET stuff and developing apps using .NET which are no longer limited to Windows platform. I tried to install ASP.NET VNext on Ubuntu VM in which I terribly failed in the first go. Why? because the tutorial I used was quite old and I messed up the installation of pre-requisites. But I get everything working in the second try. So here are the steps and commands that will get you started with ASP.NET VNext on Ubuntu.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am setting up a fresh VM for development on Ubuntu 14.04.2 LTS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span style="font-size: small;"&gt;&lt;strong&gt;Installing Mono&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;First thing is to install &lt;a href="http://www.mono-project.com/" target="_blank"&gt;Mono&lt;/a&gt;. For folks who are new to Linux environment, Mono is a community driven project which allows developers to build and run .NET application on Linux platforms. Here is the set of commands that I have to execute to install Mono.&lt;/p&gt;
&lt;pre&gt;sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF&lt;/pre&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\6\key.PNG" alt="" /&gt;&lt;/p&gt;
&lt;pre&gt;echo "deb http://download.mono-project.com/repo/debian wheezy main" | sudo tee /etc/apt/sources.list.d/mono-xamarin.list&lt;br /&gt;sudo apt-get update&lt;/pre&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\6\get-update.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Install the latest version of Mono available.&lt;/p&gt;
&lt;pre&gt;sudo apt-get install mono-complete&lt;/pre&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\6\mono-complete.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;To check if Mono is successfully installed or to determine the version of Mono on you machine run the below command in the terminal.&lt;/p&gt;
&lt;pre&gt;mono --version&lt;/pre&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\6\mono-version.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: small;"&gt;&lt;strong&gt;Installing LibUV&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;As stated on Github:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/libuv/libuv" target="_blank"&gt;Libuv&lt;/a&gt; is a multi-platform asynchronous IO library that is used by the &lt;a href="https://github.com/aspnet/KestrelHttpServer" target="_blank"&gt;KestrelHttpServer&lt;/a&gt; that we will use to host our web applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Running the below command will install LibUV along with the dependencies require to build it.&lt;/p&gt;
&lt;pre&gt;sudo apt-get install automake libtool&lt;/pre&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\6\automake-libuv.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Getting the source and building and installing it.&lt;/p&gt;
&lt;pre&gt;curl -sSL https://github.com/libuv/libuv/archive/v1.4.2.tar.gz | sudo tar zxfv - -C /usr/local/src&lt;br /&gt;cd /usr/local/src/libuv-1.4.2&lt;br /&gt;sudo sh autogen.sh&lt;br /&gt;sudo ./configure&lt;br /&gt;sudo make&amp;nbsp;&lt;br /&gt;sudo make install&lt;br /&gt;sudo rm -rf /usr/local/src/libuv-1.4.2 &amp;amp;&amp;amp; cd ~/&lt;br /&gt;sudo ldconfig&lt;/pre&gt;
&lt;p&gt;Here is a note at Githb repo that explains what the above set of commands are doing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: make install puts libuv.so.1 in /usr/local/lib, in the above commands ldconfig is used to update ld.so.cache so that dlopen (see man dlopen) can load it. If you are getting libuv some other way or not running make install then you need to ensure that dlopen is capable of loading libuv.so.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span style="font-size: small;"&gt;&lt;strong&gt;Getting .NET Version Manager (DNVM)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;DNVM is a command line tool which allows you to get new build of the &lt;a href="https://github.com/aspnet/DNX" target="_blank"&gt;DNX (.NET Execution Environment)&lt;/a&gt; and allows you to switch between them. To get DNVM running fire the below command in the terminal.&lt;/p&gt;
&lt;pre&gt;curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_BRANCH=dev sh &amp;amp;&amp;amp; source ~/.dnx/dnvm/dnvm.sh&lt;/pre&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\6\dnvm-install.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;To check if the DNVM is successfully installed on your machine, type &lt;strong&gt;DNVM&lt;/strong&gt; in the terminal. The output should be something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\6\dnvm-status.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;At any point of time if you want to list out the installed DNX runtimes, run the below command&lt;/p&gt;
&lt;pre&gt;dnvm list&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\6\dnvm-list.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;The next step after this, is to upgrade the DNVM so you can use the &lt;strong&gt;dnx&lt;/strong&gt; and &lt;strong&gt;dnu&lt;/strong&gt; commands. Run the following command in the terminal&lt;/p&gt;
&lt;pre&gt;dnvm upgrade&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\6\dnvm-upgrade.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Once this is done, we are all set to run ASP.NET VNext application on Ubuntu box. Clone the &lt;a href="https://github.com/aspnet/Home" target="_blank"&gt;aspnet/Home&lt;/a&gt; repository from Github. If you don't have Git installed then install it with this simple command.&lt;/p&gt;
&lt;pre&gt;sudo apt-get install git&lt;/pre&gt;
&lt;p&gt;For simplicity, I have created a new directory on Ubuntu desktop named &lt;em&gt;vnext&lt;/em&gt;. You can name the directory as you wish. Navigate to this directory in the terminal and clone the aspnet/Home repository.&lt;/p&gt;
&lt;pre&gt;git clone https://github.com/aspnet/Home.git&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\6\git-clone.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;After cloning of repository is done, navigate to the &lt;strong&gt;1.0.0-beta4&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\6\dir.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;You can see three sample applications that you can test. For this tutorial I am going to checkout &lt;strong&gt;HelloMvc&lt;/strong&gt; application. Get inside the &lt;strong&gt;HelloMvc&lt;/strong&gt; directory and then, run the command&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;dnu restore&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\6\dnu-restore.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;This will take some time to execute. I didn't face this problem but there is a chance that someone will. When you run this command, the &lt;strong&gt;project.json.lock&lt;/strong&gt; file gets created and the restore of the package will start. In the end when the restore is finalizing, it may say permission is denied. To resolve this error you can change the permission of the folder by running the following command.&lt;/p&gt;
&lt;pre&gt;sudo chmod -R 755 HelloMvc&lt;/pre&gt;
&lt;p&gt;You should always change permission to 755 for directories and 644 for files.&lt;/p&gt;
&lt;p&gt;After the execution is completed, you can start the server by running the command.&lt;/p&gt;
&lt;pre&gt;dnx . kestrel&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\6\beta-dir.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;This command will work for both web and mvc application. If you plan to test out the console application then you can run the following command.&lt;/p&gt;
&lt;pre&gt;dnx . run&lt;/pre&gt;
&lt;p&gt;The server runs at port 5004. Fire up the browser and type in http://localhost:5004/&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2015\6\app-running.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Hope this is helpful for the first time users of Linux.&lt;/p&gt;</description><pubDate>Tue, 16 Jun 2015 22:59:01 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/Getting-Started-With-ASPNET-5-On-Ubuntu/" /><a10:updated>2015-06-16T17:15:52Z</a10:updated></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/Free-e-Books-From-Microsoft-And-Telerik-That-You-Should-Be-Reading/</guid><title>Free e-Books From Microsoft And Telerik That You Should Be Reading</title><description>&lt;p&gt;I am involving myself in reading book these days rather than reading blogs. Here are 2 free e-books, one from Microsoft Press with a valuable insights on Cloud, &lt;strong&gt;Fundamental of Azure&lt;/strong&gt; and the other from Telerik, &lt;strong&gt;The Developer's Guide To The New .NET&lt;/strong&gt;. I encourage you to read both the books, but if you are not about cloud then you should read the book from Telerik.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://blogs.msdn.com/b/microsoft_press/archive/2015/02/03/free-ebook-microsoft-azure-essentials-fundamentals-of-azure.aspx" target="_blank"&gt;Microsoft Press - Fundamentals of Azure&lt;/a&gt;&amp;nbsp;(&lt;a href="http://aka.ms/697225pdf" target="_blank"&gt;Download&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/image.axd?picture=2015\6\MicrosoftPress.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;From Microsoft Press&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &amp;ldquo;Microsoft Azure Essentials&amp;rdquo; series helps you advance your technical skills with Microsoft Azure. &amp;ldquo;Microsoft Azure Essentials: Fundamentals of Azure&amp;rdquo; introduces developers and IT professionals to the wide range of capabilities in Azure. The authors&amp;mdash;both Microsoft MVPs in Azure&amp;mdash;present conceptual and how-to content for seven key areas and describe management tools and business cases.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Telerik -&amp;nbsp;The Developer's Guide To The New .NET (&lt;a href="http://www.telerik.com/campaigns/devcraft/developers-guide-dotnet" target="_blank"&gt;Download&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src="/image.axd?picture=2015\6\Telerik.PNG" alt="" /&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;From Telerik&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This ebook is no fluff&amp;ndash;just a developer-to-developer breakdown of what&amp;rsquo;s in store for .NET in 2015. Included are code snippets and step-by-step tutorials on handy new features and techniques.&lt;/p&gt;
&lt;p&gt;Download for free, and learn more about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studio 2015&lt;/li&gt;
&lt;li&gt;.NET core goes open source&lt;/li&gt;
&lt;li&gt;Cross platform development with .NET&lt;/li&gt;
&lt;li&gt;C# 6.0&lt;/li&gt;
&lt;li&gt;Roslyn&lt;/li&gt;
&lt;li&gt;Windows 10&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description><pubDate>Sun, 14 Jun 2015 08:15:40 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/Free-e-Books-From-Microsoft-And-Telerik-That-You-Should-Be-Reading/" /><a10:updated>2015-06-14T08:15:40Z</a10:updated></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/How-Generic-The-Code-Can-Be-Resolving-Type-T-at-Compile-Time/</guid><title>How Generic The Code Can Be - Resolving Type T at Compile Time</title><description>&lt;p&gt;It is fun working with Generics, but sometimes it just won't work as I intended it to work. While working on a personal project, I was trying to write the code as generic as possible so I can re-use the functions or extension methods in my other projects as well. But it is not always the case, things will not always work as you want it to be. Here is the case of what I was trying to do.&lt;/p&gt;
&lt;p&gt;I am working extensively on JSON in this project, so I thought of creating an extension method for the classes I want to serialize to JSON and save it to the file system. Creating the extension method was not a problem, but it turned out to my surprise that I just can&amp;rsquo;t use the extension method on type T. If I would have paid attention to the detail here before writing the function, I would have noticed the problem. Before I tell you what I did here, here is the extension method which will serialize class to JSON string.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;public static string ToJSON&amp;lt;T&amp;gt;(this T Entity) where T : class
{
    return JsonConvert.SerializeObject(Entity);
}&lt;/pre&gt;
&lt;p&gt;As I want only classes to be serialize, I have a constraint in place that assure me that this extension method should be used when the T is of type &lt;em&gt;Class&lt;/em&gt;. I agree with the fact the creating an extension method just for a simple work is an over kill but I am just lazy about writing this line again and again. The application I am working on can support multiple databases and for that I am using Dependency Injection (DI). I wrote this function keeping in mind that I just have to pass the model name i.e. class object and this function will then save the JSON string from the serialized class to the file system.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;public bool Save&amp;lt;T&amp;gt;(T Entity, string Path) where T : class
{
    bool IsSaved = false;
    try
    {
        if (!Path.IsNullOrEmpty())
        {
            File.AppendAllText(Path, Entity.ToJSON());
            IsSaved = true;
        }
        return IsSaved;
    }
    catch (Exception x)
    {
        throw x;
    }
}&lt;/pre&gt;
&lt;p&gt;The above code will not compile. This is because, there is no way for the compiler to know the type of &lt;em&gt;Entity&lt;/em&gt; object we are passing. The constraints has nothing to do with it. It is just the compiler who has to know what kind of type it is dealing with. In this case we have a type T which is not resolved at compile time and hence the ToJSON() extension method I am using above, is an assumption from my part that &lt;em&gt;Entity&lt;/em&gt; is a class, is not going to work. The important point here is that T is going to resolve at runtime and before that if we try to use the extension method (meant only for class) on type T, the intellisense will never show the ToJSON() extension method in the list.&lt;/p&gt;
&lt;p&gt;Now to overcome this problem, we have to make some changes to the above code in order to have the information which the compiler can use and allow us to make use of the ToJSON()extension method. As there is a constraint in place for this function which will only allow us to pass class object as a first parameter, but the case is still the same. The &lt;strong&gt;Save&lt;/strong&gt; function will never know what is the actual type of the &lt;strong&gt;&lt;em&gt;Entity&lt;/em&gt;&lt;/strong&gt;. Therefore we can use the &lt;em&gt;Entity&lt;/em&gt; object and get the name of the &lt;em&gt;Class&lt;/em&gt; like so.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;string className = Entity.GetType().Name;&lt;/pre&gt;
&lt;p&gt;This gives us the name of the class and now we can use it to get the actual type of T and convert it to that type (which will be class). Once we have a class we can then use our ToJSON() extension method. Here is the updated code.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;public bool Save&amp;lt;T&amp;gt;(T Entity, string Path) where T : class
{
    bool IsSaved = false;
    try
    {
        if (!Path.IsNullOrEmpty())
        {
            if (Entity.GetType().Name == "Board")
                File.AppendAllText(Path, Convert.ChangeType(Entity, typeof(Board)).ToJSON());
            else if (Entity.GetType().Name == "Story")
                File.AppendAllText(Path, Convert.ChangeType(Entity, typeof(Story)).ToJSON());

            IsSaved = true;
        }
        return IsSaved;
    }
    catch (Exception x)
    {
        throw x;
    }
}&lt;/pre&gt;
&lt;p&gt;This code will compile and saves the JSON string to the specified path on execution. Notice the &lt;strong&gt;Convert.ChangeType&lt;/strong&gt; function. It&amp;rsquo;s simple function which you can use to convert one type to your desired type. The only drawback here will be that you have to come here and update the function whenever you have a type of class added in the project which you want to serialize to JSON. The code is still pretty sleek according to me for the type of task I am trying to accomplish.&lt;/p&gt;
&lt;p&gt;The type T is very useful, but sometimes it may not solve all your problem.&lt;/p&gt;</description><pubDate>Sun, 07 Jun 2015 08:07:09 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/How-Generic-The-Code-Can-Be-Resolving-Type-T-at-Compile-Time/" /><a10:updated>2015-06-07T08:10:09Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/two-free-video-courses-intro-to-asp-net-mvc-and-responsive-ui-with-bootstrap</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/rZR6aQvYNSw/two-free-video-courses-intro-to-asp-net-mvc-and-responsive-ui-with-bootstrap</link><title>Two free video courses: Intro to ASP.NET MVC and Responsive UI with Bootstrap</title><description>&lt;p&gt;I'm really excited to announce that two of my latest courses on Microsoft Virtual Academy are now live! Both are recordings of live courses Christopher Harrison and I lead in the beautiful Channel 9 studios, and include downloads of all slides, code and live chat logs.&lt;/p&gt;

&lt;p&gt;These are live events with two instructors and an active chat, and we pushed the demo code to GitHub throughout the event so attendees could get their hands on it immediately. One really nice benefit of this format (compared to most other video training) is that we were able to watch for common questions and answer them live. It's also hugely motivating to hear from viewers around the world, many who are staying up late at night. Nothing starts the morning off like "Hello from Bangladesh! Hi from Brazil!" Hellos from Holland, Poland, Bulgaria... even New Jersey!&lt;/p&gt;

&lt;p class="alert alert-info"&gt;&lt;strong&gt;Hey!&lt;/strong&gt; These two courses are part of our new Web Wednesdays series on MVA. Be sure to join us for the next session: &lt;a href="http://aka.ms/AspNet-SignalR"&gt;Lighting Up Real-Time Web Communications with SignalR&lt;/a&gt; with Brady Gaster and me on September 24!&lt;/p&gt;

&lt;p&gt;&lt;img class="img-responsive" src="http://c2.staticflickr.com/6/5568/15179845646_c202c6b118_h.jpg"&gt;&lt;/p&gt;

&lt;p&gt;Quick links for the impatient:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc"&gt;Introduction to ASP.NET MVC&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://www.microsoftvirtualacademy.com/training-courses/building-responsive-ui-with-bootstrap"&gt;Building Responsive UI with Bootstrap&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note: These courses are on Microsoft Virtual Academy, which requires you to log in with a (free) Microsoft Account. No cost or obligations, and the account bookmarks where you're at across multiple courses which is pretty helpful.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Introduction to ASP.NET MVC&lt;/h2&gt;

&lt;p&gt;Christopher and I put on &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start"&gt;Developing ASP.NET MVC 4 Web Applications Jump Start&lt;/a&gt; last year, built from the ASP.NET MVC certification course materials. Since the course materials are usually covered in a week long class, we had to move pretty quick to cover everything. We've heard from a lot of happy viewers that really liked it (many of whom have written to tell us it was a big part of their successful certification test prep). You can read more about my thoughts on that course &lt;a href="http://weblogs.asp.net/jongalloway/free-6-hour-online-course-developing-asp-net-mvc-4-web-applications-jump-start"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, we also were aware that it was a little fast for some developers who were completely new to the space, e.g. developers who were new to web development or front-end web developers who weren't familiar with C# or Visual Studio. And in the meantime, Christopher had joined Microsoft as a fulltime member of the MVA team (woo hoo!). When Christopher contacted me to strategize about some ideas for courses, we decided it was time for an&amp;nbsp; MVC course that spoke to absolute beginners.&lt;/p&gt;

&lt;p&gt;This course is broken into the following modules:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Basics of MVC and the Moving Parts &lt;/li&gt;

  &lt;li&gt;Creating and Configuring Models &lt;/li&gt;

  &lt;li&gt;The Power of Visual Studio &lt;/li&gt;

  &lt;li&gt;Deep Dive into Controllers &lt;/li&gt;

  &lt;li&gt;Deep Dive into Views &lt;/li&gt;

  &lt;li&gt;Introduction to Bootstrap &lt;/li&gt;

  &lt;li&gt;Introduction to Authentication in MVC​ &lt;/li&gt;

  &lt;li&gt;Supplement Your Knowledge &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;
&lt;/ul&gt;

&lt;p class="alert alert-info"&gt;View the course here: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc"&gt;Introduction to ASP.NET MVC&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Building Responsive UI with Bootstrap&lt;/h2&gt;

&lt;p&gt;Boostrap is a front-end framework that makes it easy to build nice looking sites that respond well to different display sizes using CSS media queries. That means your sites automatically adapt to look nice on desktop, laptop, tablets and phones without any hacky code (on server or client) to try to guess if the user probably wants a "mobile" view of the site (what does that even mean now that we've got giant phones, tiny tablets, and convertibles like the Surface?). &lt;/p&gt;

&lt;p&gt;All the ASP.NET project in Visual Studio 2013 (Web Forms and MVC) are built with Bootstrap. It's automatically in every new ASP.NET application.&lt;/p&gt;

&lt;p&gt;That's a good start, but I felt like all of the presentations and training I'd seen using on Bootstrap with ASP.NET had been pretty simple: "Hey, check it out, we have Bootstrap now, responsive design is great, here's a new theme, yay! Done!" That's definitely about all I'd covered in my presentations. &lt;/p&gt;

&lt;p&gt;Sure, Bootstrap is neat, but there are some challenges: The grid system can be a little complex, especially if you want your content to lay out differently at different sizes. Do I really have to memorize all those Bootstrap class names (especially fun for complex components or layouts)? How do I keep my site from looking like every other Bootstrap site out there? And my personal pet peeve: how do I take advantage of Bootstrap without turning my HTML into a horrible mess of &amp;lt;div class="col-lg-6 col-md-4 col-sm-3"&amp;gt; Bootstrap classes that seem to want to take over?&lt;/p&gt;

&lt;p&gt;That's what this class is about. Christopher and I cover the basics pretty quickly, then go deep with things like responsive page design, making Visual Studio pick up some of the hard work, and taking advantage of Less to get the HTML under control. Here's the outline:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Introduction to Bootstrap &lt;/li&gt;

  &lt;li&gt;Bootstrap Components &lt;/li&gt;

  &lt;li&gt;Page Design &lt;/li&gt;

  &lt;li&gt;Visual Studio and ASP.NET Integration &lt;/li&gt;

  &lt;li&gt;JavaScript Functions &lt;/li&gt;

  &lt;li&gt;Using Bootstrap with LESS &lt;/li&gt;

  &lt;li&gt;Bootstrap in the Real World &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;/ul&gt;&lt;p class="alert alert-info"&gt;View the course here: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/building-responsive-ui-with-bootstrap"&gt;Building Responsive UI with Bootstrap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm really happy with this course - I think we really nailed it, and judging from the live response it sounds like they thought so, too. I'll do a follow-up blog post digging into the Bootstrap / Less stuff, it's pretty slick.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://c4.staticflickr.com/4/3913/15202400432_531097d0f8_b.jpg"&gt;&lt;/p&gt;

&lt;h2&gt;We'll Do It Live!&lt;/h2&gt;

&lt;p&gt;As I mentioned earlier, having two trainers gives us the opportunity to do a lot of things live. We both take turns participating in the attendee chat and giving answers to common questions as they come up. We also work against a live repository on GitHub (using the built-in Visual Studio support), pushing the demo code as soon as each session's completed. If you're able to catch a live event in the future, please do!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=rZR6aQvYNSw:oeyaoAbPWMs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=rZR6aQvYNSw:oeyaoAbPWMs:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=rZR6aQvYNSw:oeyaoAbPWMs:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=rZR6aQvYNSw:oeyaoAbPWMs:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=rZR6aQvYNSw:oeyaoAbPWMs:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/rZR6aQvYNSw" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 10 Sep 2014 23:22:32 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/two-free-video-courses-intro-to-asp-net-mvc-and-responsive-ui-with-bootstrap</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/web-camp-in-los-angeles-with-scott-hunter-july-9</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/huxqyEddi0I/web-camp-in-los-angeles-with-scott-hunter-july-9</link><title>Web Camp in Los Angeles with Scott Hunter - July 9</title><description>&lt;p&gt;&lt;img style="width: 100%;" src="https://mseventsww.microsoft.com/BannerImages/127c7dbf-2a1d-4f06-a024-661e0cb31138.jpg"&gt;&lt;/p&gt;&lt;p&gt;Web devs in southern California, we've got a great Web Camp event coming up next week in Los Angeles on July 9. We're wrapping up the Summer Web Camps tour I &lt;a href="https://weblogs.asp.net/jongalloway/upcoming-web-camps-summer-2014"&gt;announced a bit ago&lt;/a&gt; with a blowout! This is a free, one day event and we've got space available in the fancy new Microsoft Playa Vista office.&lt;/p&gt;&lt;p&gt;&lt;a class="btn btn-success" href="https://msevents.microsoft.com/cui/EventDetail.aspx?culture=en-US&amp;amp;EventID=1032590304"&gt;Register here &lt;span class="glyphicon glyphicon-circle-arrow-right"&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We're privileged to have &lt;/strong&gt;&lt;a href="https://twitter.com/coolcsh"&gt;&lt;strong&gt;Scott Hunter&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; as one of the speakers for this event. Scott's a group program manager at Microsoft for Azure and Tools, including ASP.NET , MVC, Web API, Web Pages, SignalR, Entity Framework, Web Tooling, NuGet and Azure Cache/SDK's.&lt;/strong&gt; You may have seen Scott's presentations with Scott Hanselman at TechEd and Build over the years. He's got a great perspective for the challenges web developers are solving today in ASP.NET as well as where ASP.NET is going in the future.&lt;/p&gt;

&lt;p&gt;We've also got presentations from local heroes &lt;a href="https://twitter.com/danielegan"&gt;Daniel Egan&lt;/a&gt; and &lt;a href="https://twitter.com/adamTuliper"&gt;Adam Tuliper&lt;/a&gt;!&lt;/p&gt;&lt;p&gt;If you're an ASP.NET developer in southern California, you don't want to miss this &lt;strong&gt;free&lt;/strong&gt; event. In addition to a full day of solid web dev content, this is a great chance to ask questions directly to the head of the ASP.NET PM team.&lt;/p&gt;&lt;p&gt;Here's the agenda for what we'll be covering:&lt;/p&gt;


&lt;table class="table table-striped table-bordered table-hover"&gt;
   &lt;tbody&gt;
      &lt;tr&gt;
         &lt;th&gt;
            Session
         &lt;/th&gt;
         &lt;th&gt;
            Speaker
         &lt;/th&gt;
         &lt;th&gt;
            Start
         &lt;/th&gt;
         &lt;th&gt;
            End
         &lt;/th&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Keynote
         &lt;/td&gt;
         &lt;td&gt;
            Scott Hunter
         &lt;/td&gt;
         &lt;td&gt;
            8:30
         &lt;/td&gt;
         &lt;td&gt;
            9:30
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Introduction to ASP.NET and Visual Studio 2013 Web Tooling
         &lt;/td&gt;
         &lt;td&gt;
            Jon Galloway
         &lt;/td&gt;
         &lt;td&gt;
            9:30
         &lt;/td&gt;
         &lt;td&gt;
            10:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Building Web Applications using the latest ASP.NET technologies
         &lt;/td&gt;
         &lt;td&gt;Adam Tuliper&lt;/td&gt;
         &lt;td&gt;
            10:15
         &lt;/td&gt;
         &lt;td&gt;
            11:00
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Break
         &lt;/td&gt;
         &lt;td&gt;&lt;/td&gt;
         &lt;td&gt;
            11:00
         &lt;/td&gt;
         &lt;td&gt;
            11:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Building web front ends for both desktop and mobile using the latest web standards
         &lt;/td&gt;
         &lt;td&gt;
            Jon Galloway
         &lt;/td&gt;
         &lt;td&gt;
            11:15
         &lt;/td&gt;
         &lt;td&gt;
            12:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Lunch
         &lt;/td&gt;
         &lt;td&gt;&lt;/td&gt;
         &lt;td&gt;
            12:15
         &lt;/td&gt;
         &lt;td&gt;
            1:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            API Services for both web and devices
         &lt;/td&gt;
         &lt;td&gt;
            Daniel Egan
         &lt;/td&gt;
         &lt;td&gt;
            1:15
         &lt;/td&gt;
         &lt;td&gt;
            2:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Running, improving and maintaining a site in the real world
         &lt;/td&gt;
         &lt;td&gt;
            Jon Galloway
         &lt;/td&gt;
         &lt;td&gt;
            2:15
         &lt;/td&gt;
         &lt;td&gt;
            3:15
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Break
         &lt;/td&gt;
         &lt;td&gt;&lt;/td&gt;
         &lt;td&gt;
            3:15
         &lt;/td&gt;
         &lt;td&gt;
            3:30
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Real-time Communications with SignalR
         &lt;/td&gt;
         &lt;td&gt;
            Jon Galloway
         &lt;/td&gt;
         &lt;td&gt;
            3:30
         &lt;/td&gt;
         &lt;td&gt;
            4:30
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;
            Wrap Up
         &lt;/td&gt;
         &lt;td&gt;
            Scott Hunter
         &lt;/td&gt;
         &lt;td&gt;
            4:30
         &lt;/td&gt;
         &lt;td&gt;
            5:00
         &lt;/td&gt;
      &lt;/tr&gt;
   &lt;/tbody&gt;
&lt;/table&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=huxqyEddi0I:PkYvef5Lo_8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=huxqyEddi0I:PkYvef5Lo_8:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=huxqyEddi0I:PkYvef5Lo_8:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=huxqyEddi0I:PkYvef5Lo_8:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=huxqyEddi0I:PkYvef5Lo_8:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/huxqyEddi0I" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 01 Jul 2014 20:30:22 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/web-camp-in-los-angeles-with-scott-hunter-july-9</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/scripting-net-project-migration-to-automatic-nuget-package-restore</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/cJak-fSGGlU/scripting-net-project-migration-to-automatic-nuget-package-restore</link><category>NuGet</category><title>Scripting .NET project migration to Automatic NuGet Package Restore</title><description>&lt;h2&gt;Background on NuGet Package Restore and Automatic Package Restore&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://docs.nuget.org/docs/workflows/using-nuget-without-committing-packages"&gt;NuGet Package Restore&lt;/a&gt; allows you to reference NuGet packages in your project without shipping them with your source code or committing them to source control. The general idea is that the packages are restored - that is, downloaded and installed - into your project when it is build. This offers a number of benefits, including better interaction with source control and smaller code distributions.&lt;/p&gt;
&lt;p&gt;NuGet Package Restore was originally implemented using an MSBuild task, so whenever you ran a build in Visual Studio the build step would handle the package restore before continuing with the next steps in the build process. This worked, but had a few downsides. For one, it required MSBuild to work, which conflicts with cross-platform development, build servers, etc. Another issue is that it required a separate .nuget directory be added to your Visual Studio solution, including a copy of NuGet.exe and a targets file.&lt;/p&gt;&lt;p&gt;&lt;a title="NuGet MSBuild directory" href="http://www.flickr.com/photos/36836555@N00/14275675599/"&gt;&lt;img alt="NuGet MSBuild directory" src="http://farm4.static.flickr.com/3881/14275675599_1cc70a79a0_b.jpg" border="0"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Migrating Automatic Package Restore&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://docs.nuget.org/docs/reference/package-restore#Automatic_Package_Restore_in_Visual_Studio"&gt;NuGet 2.7 (and later) added support for Automatic NuGet Package Restore without requiring MSBuild&lt;/a&gt;. For new projects, this all just automatically works. However, if you had an older project for which you'd manually configured NuGet Package Restore, there is &lt;a href="http://docs.nuget.org/docs/workflows/migrating-to-automatic-package-restore#If_you_are_not_using_TFS"&gt;a manual process to be followed&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;ol&gt;
&lt;li&gt;Remove the .nuget folder from your solution. Make sure the folder itself is also removed from the solution workspace. 
&lt;li&gt;Edit each project file (e.g., .csproj, .vbproj) in the solution and remove any references to the NuGet.targets file. To do so, search for Nuget.targets and remove the entire &amp;lt;Import Project&amp;gt; line where it is referenced. &lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;
&lt;p&gt;This is really easy - it just takes seconds to do on one project. However, if you've got a lot of projects, it's painful busywork. I was making some updates on the &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=36393"&gt;Web Camps Training Kit&lt;/a&gt; which has a lot of projects (several demos and hands on labs, each with begin and end state solutions). I wanted a recursive script that dug through all the subfolders and fixed up my projects for me automatically. I asked around on Twitter and heard about &lt;a href="http://geekswithblogs.net/terje/archive/2014/06/11/converting-projects-to-use-automatic-nuget-restore.aspx"&gt;IFix, from Terje Sandstrom&lt;/a&gt;. It's a nice solution that handles this problem, but I wanted a recursive script, and if I was going to automate IFix with a recursive script I might as well just write a script that handled everything.&lt;/p&gt;
&lt;h2&gt;Enough Talk, Show Me The Script&lt;/h2&gt;
&lt;p class="alert alert-warning"&gt;&lt;strong&gt;Warning!&lt;/strong&gt; This script edits all projects and deletes all .nuget and packages directories recursively for the specified path. That means if you ran it from C:\ it would modify every project on your C drive. Obviously, be careful about the current directory and make sure your affected projects are under source control.&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jongalloway/969ca4d2c351c5a37949.js"&gt;&lt;/script&gt;&lt;/p&gt;&lt;noscript&gt;&lt;pre class="brush: ps; auto-links: false;"&gt;#this automates the steps found here: http://docs.nuget.org/docs/workflows/migrating-to-automatic-package-restore
#yes, you could code golf this to about 6 characters if you wanted to

$find= @'
&amp;lt;Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" /&amp;gt;
'@

foreach ($f in Get-ChildItem -Recurse -Path ".\" -Filter *.csproj | sort-object)
{
    $text = Get-Content $f.FullName -Raw
    $text.Replace($find, "") | set-content $f.FullName
}

Get-ChildItem .\ -include .nuget,packages -Recurse | foreach ($_) { remove-item $_.fullname -Force -Recurse }&lt;/pre&gt;&lt;/noscript&gt;
&lt;p&gt;Here's what it does:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Recursively search for .csproj files in a path 
&lt;li&gt;Remove the MSBuild target for NuGet package restore 
&lt;li&gt;Recurse through the directory structure, removing .nuget and packages directories &lt;/li&gt;&lt;/ol&gt;
&lt;h2&gt;A few admissions / excuses&lt;/h2&gt;
&lt;p&gt;Yes, it could be more terse. Get-ChildItem could be gci, Set-Content could be sc, all the switches could use the single letter equivalents. I used to be embarrassed posting verbose PowerShell, but I've decided that this is a lot easier to read and there's no real point to minifying PowerShell.&lt;/p&gt;
&lt;p&gt;Yes, this is just doing a simple string replace. I looked at doing things the XML way (XPath or DOM manipulations) or using regular expressions, but decided that I want this to be completely explicit. I don't want to match any lines unless they're exactly matching what was written by Visual Studio when I enabled package restore. Because of that, I only want an exact string match. I think that this is a little faster since it's just a string replace, but I didn't test that and don't really care if it isn't.&lt;/p&gt;
&lt;p&gt;Yes, this leaves a blank line in the .csproj file. That makes no difference in the way Visual Studio handles it and it was easier than worrying about it.&lt;/p&gt;
&lt;p&gt;Yes, that $find declaration is weird. The string I'm searching for (&amp;lt;Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" /&amp;gt;) contains a lot of characters that need to be escaped in PowerShell, and even more if doing a Regex replace in PowerShell (which I tested a bit). So instead I used a &lt;a href="http://technet.microsoft.com/en-us/library/ee692792.aspx"&gt;here-string&lt;/a&gt;, which is kind of like a &lt;a href="http://msdn.microsoft.com/en-us/library/aa691090.aspx"&gt;C# verbatim string literal&lt;/a&gt; (e.g. @&lt;a href="file://\\server\share\file.txt"&gt;\\server\share\file.txt&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For more information on why you should migrate away from MSBuild based Automatic Package Restore, see these posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.xavierdecoster.com/migrate-away-from-msbuild-based-nuget-package-restore"&gt;Migrate away from MSBuild-based NuGet package restore&lt;/a&gt; (Xavier Decoster)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.davidebbo.com/2014/01/the-right-way-to-restore-nuget-packages.html"&gt;The right way to restore NuGet packages&lt;/a&gt; (David Ebbo)&lt;/li&gt;&lt;/ul&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=cJak-fSGGlU:2QWaSYjnIdM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=cJak-fSGGlU:2QWaSYjnIdM:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=cJak-fSGGlU:2QWaSYjnIdM:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=cJak-fSGGlU:2QWaSYjnIdM:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=cJak-fSGGlU:2QWaSYjnIdM:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/cJak-fSGGlU" height="1" width="1" alt=""/&gt;</description><pubDate>Thu, 19 Jun 2014 23:53:40 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/scripting-net-project-migration-to-automatic-nuget-package-restore</feedburner:origLink></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/Recurring-Tasks-Inside-ASPNET-Applications-Using-HangFire/</guid><title>Recurring Tasks Inside ASP.NET Applications Using HangFire</title><description>&lt;p&gt;This is open-source at its best. Running background task to work in context with ASP.NET was and is still a big deal for few developers. I user&amp;nbsp;QueueUserWorkItem to schedule emails when a new comment is added on my blog. This makes sure that the UI is responsive and the user can close or navigate to other post. I have been working on enterprise applications for many years now and most of the long running tasks are running in the background i.e. windows services.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HangFire is not limited to ASP.NET applications, you can even use it in your console applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://hangfire.io/" target="_blank"&gt;HangFire&lt;/a&gt; is an open-source project which allows us to run recurring tasks within the ASP.NET application. No need of scheduling tasks and windows services. Everything will be within the ASP.NET application. When a new comment is added on my blog, an email is sent to my inbox as a notification to moderate it. In a normal scenario it will take a bit more than a normal time to add a comment because an email is also being sent to my inbox. To overcome this problem, I queued the mail process in the background like so:&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;bool commentSave = _db.AddComment(comment);
if (commentSave)
{
    System.Threading.ThreadPool.QueueUserWorkItem(s=&amp;gt; BlogEmail.SendEmail(comment));
    return Json(new { message = "Thanks for your comment. The comment is now awaiting moderation" });
}
else
    return Json(new { message = "There is an error while saving comment. Please try again later" });&lt;/pre&gt;
&lt;p&gt;As soon as a comment is added, user will be prompted that comment is added in the DB but the process of sending the email is scheduled in the background. But this approach has a drawback. What if the email sending is failed? As the admin of my blog, will I be able to see the status of the process? HangFire resolves all these questions and it comes with an awesome HangFire monitor which displays the status of all the background tasks in real-time. I will discuss about the HangFire monitor later in this post, but first let's get started with HangFire.&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: small;"&gt;&lt;strong&gt;Installing HangFire&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;HangFire is available on &lt;a href="https://www.nuget.org/packages/HangFire/0.9.1" target="_blank"&gt;NuGet&lt;/a&gt;. Firing the below command will automatically add the references in your project and takes care of all the configuration.&lt;/p&gt;
&lt;pre&gt;Install-Package HangFire
Attempting to resolve dependency 'HangFire.SqlServer (= 0.9.1)'.
Attempting to resolve dependency 'HangFire.Core (= 0.9.1)'.
Attempting to resolve dependency 'Common.Logging (= 2.1.2)'.
Attempting to resolve dependency 'Newtonsoft.Json (= 5.0.0)'.
Attempting to resolve dependency 'ncrontab (= 1.0.0)'.
Attempting to resolve dependency 'Dapper (= 1.13)'.
Attempting to resolve dependency 'HangFire.Web (= 0.9.1)'.
Attempting to resolve dependency 'CronExpressionDescriptor (= 1.10.1)'.
Attempting to resolve dependency 'WebActivatorEx (= 2.0.1)'.
Attempting to resolve dependency 'Microsoft.Web.Infrastructure (= 1.0.0.0)'.
Installing 'Common.Logging 2.1.2'.
Successfully installed 'Common.Logging 2.1.2'.
Installing 'ncrontab 1.0.0'.
Successfully installed 'ncrontab 1.0.0'.
Installing 'HangFire.Core 0.9.1'.
Successfully installed 'HangFire.Core 0.9.1'.
Installing 'Dapper 1.13'.
Successfully installed 'Dapper 1.13'.
Installing 'HangFire.SqlServer 0.9.1'.
Successfully installed 'HangFire.SqlServer 0.9.1'.
Installing 'CronExpressionDescriptor 1.10.1'.
Successfully installed 'CronExpressionDescriptor 1.10.1'.
Installing 'WebActivatorEx 2.0.1'.
Successfully installed 'WebActivatorEx 2.0.1'.
Installing 'HangFire.Web 0.9.1'.
Successfully installed 'HangFire.Web 0.9.1'.
Installing 'HangFire 0.9.1'.
Successfully installed 'HangFire 0.9.1'.
Adding 'Common.Logging 2.1.2' to HangfireDemo.
Successfully added 'Common.Logging 2.1.2' to HangfireDemo.
Adding 'ncrontab 1.0.0' to HangfireDemo.
Successfully added 'ncrontab 1.0.0' to HangfireDemo.
Adding 'HangFire.Core 0.9.1' to HangfireDemo.
Successfully added 'HangFire.Core 0.9.1' to HangfireDemo.
Adding 'Dapper 1.13' to HangfireDemo.
Successfully added 'Dapper 1.13' to HangfireDemo.
Adding 'HangFire.SqlServer 0.9.1' to HangfireDemo.
Successfully added 'HangFire.SqlServer 0.9.1' to HangfireDemo.
Adding 'CronExpressionDescriptor 1.10.1' to HangfireDemo.
Successfully added 'CronExpressionDescriptor 1.10.1' to HangfireDemo.
Adding 'WebActivatorEx 2.0.1' to HangfireDemo.
Successfully added 'WebActivatorEx 2.0.1' to HangfireDemo.
Adding 'HangFire.Web 0.9.1' to HangfireDemo.
Successfully added 'HangFire.Web 0.9.1' to HangfireDemo.
Adding 'HangFire 0.9.1' to HangfireDemo.
Successfully added 'HangFire 0.9.1' to HangfireDemo.
&lt;/pre&gt;
&lt;p&gt;I am using HangFire with ASP.NET MVC application. Here are the few things that you need to configure before you dive in. When installing HangFire via NuGet, it adds &lt;strong&gt;HangFireConfig.cs &lt;/strong&gt;under &lt;strong&gt;App_Start&lt;/strong&gt; folder. HangFire supports Redis, SQL Server, SQL Azure or MSMQ. I am using SQL Server in this demo. The reason we require this storage because it is being used by the HangFire monitor to display the real-time data of the jobs. To configure HangFire to use SQL Server, open HangFireConfig.cs file and change the connection string as per your SQL Server installation.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;JobStorage.Current = new SqlServerStorage(
    @"Server=GHOST\SERVER; Database=Jobs;user id=sa; password=pass#w0rd1;");&lt;/pre&gt;
&lt;p&gt;When the application first starts, all required database objects are created.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\6\SQLObjectsHangFire.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;You can find the scripts inside the downloaded package&amp;nbsp;&lt;strong&gt;HangFire.SqlServer.0.9.1\Tools\install.sql&lt;/strong&gt;. The jobs and monitor will be using this database to show me the real-time status of the jobs running in the background. To view the HangFire monitor, simply navigate to &lt;strong&gt;http://&amp;lt;sitename&amp;gt;/hangfire.axd&lt;/strong&gt;. As it is a handler, you can see it in your web.config file. Let's see it in action:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\6\Monitor.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;The navigation pane on the right, lets you see the jobs and their status. It let's you even see the queues which are currently running.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: small;"&gt;&lt;strong&gt;Scheduling the Jobs&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Scheduling jobs using HangFire is easier then I thought it would be. Talking about the same example from my blog which sends email in my inbox when a new comment is added. If I want to schedule the mail send process as a background job I can do it easily using the &lt;strong&gt;BackgroundJob&lt;/strong&gt; class.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;bool commentSave = _db.AddComment(comment);
if (commentSave)
{
    BackgroundJob.Enqueue(() =&amp;gt; BlogEmail.SendEmail(comment));
    return Json(new { message = "Thanks for your comment. The comment is now awaiting moderation" });
}
else
    return Json(new { message = "There is an error while saving comment. Please try again later" });&lt;/pre&gt;
&lt;p&gt;As I require it to run only once I just have queue it using the &lt;strong&gt;BackgroundJob.Enqueue()&lt;/strong&gt; method. I can also delay the execution of the job using the&amp;nbsp;&lt;strong&gt;Schedule&lt;/strong&gt; method of the &lt;strong&gt;BackgroundJob&lt;/strong&gt; class.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;bool commentSave = _db.AddComment(comment);
if (commentSave)
{
    BackgroundJob.Schedule(() =&amp;gt; BlogEmail.SendEmail(comment), TimeSpan.FromMinutes(60));
    return Json(new { message = "Thanks for your comment. The comment is now awaiting moderation" });
}
else
    return Json(new { message = "There is an error while saving comment. Please try again later" });&lt;/pre&gt;
&lt;p&gt;What if the email sending is failed? The &lt;strong&gt;SendMail&lt;/strong&gt; method throws an exception that the mail sending is failed. HangFire will handle this by default and it will retry automatically 3 more times after a consecutive delay after each retry. But if I want to retry it more than 3 times then I can make use of the &lt;strong&gt;AutomaticRetry&lt;/strong&gt; attribute and pass the number of retries I want, something like this:&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;[AutomaticRetry(Attempts = 5)]
public bool SendEmail(Comment comment)
{
    //Email code
}&lt;/pre&gt;
&lt;p&gt;Let's say if I do have another method that I want to run every minute (it's an overkill for my blog) then I will make use of &lt;strong&gt;RecurringJob&lt;/strong&gt; class.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;RecurringJob.AddOrUpdate(() =&amp;gt; Storage.PunchIt(), Cron.Minutely);&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Cron&lt;/strong&gt; enum allows me to schedule a job daily, weekly, monthly, yearly, hourly and minutely. Now as my job is schedule in the background, time to take a look at HangFire monitor.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\6\RecurringMonitor.PNG" alt="" width="857" /&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\6\Jobs.PNG" alt="" width="860" /&gt;&lt;/p&gt;
&lt;p&gt;I have no idea why my Recurring Jobs screen is showing Next and Last execution time as 44 years ago. But you can see the Succeeded Jobs with a minute interval (#5 and #4). HangFire uses persistent storage and therefore you can trigger the job at your will or remove it when you feel like it. That means you configure the job in the code and manage it from the HangFire monitor.&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: small;"&gt;&lt;strong&gt;What else you can do with HangFire&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I just showed you how easy it can be scheduling jobs using HangFire. But there are more advanced topics which you should be looking into for more complex implementation. HangFire supports logging, dependency injection using Ninject, multiple queue processing and more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/odinserj/HangFire" target="_blank"&gt;HangFire - Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hangfire.io/" target="_blank"&gt;HangFire.io - Offical site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.hangfire.io/en/latest/advfeatures.html" target="_blank"&gt;HangFire - Advance Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.hangfire.io/en/latest/quickstart.html" target="_blank"&gt;HangFire - Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nuget.org/packages?q=hangfire" target="_blank"&gt;NuGet - HangFire libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><pubDate>Sun, 15 Jun 2014 22:46:22 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/Recurring-Tasks-Inside-ASPNET-Applications-Using-HangFire/" /><a10:updated>2014-06-15T17:21:15Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/mva-introduction-to-asp-net-mvc-free-live-training-june-23</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/ngdDAH-s8Js/mva-introduction-to-asp-net-mvc-free-live-training-june-23</link><title>MVA: Introduction to ASP.NET MVC - Free Live Training - June 23</title><description>&lt;p class="well well-lg"&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; The course (including videos, slides, and links to the code) are published here: &lt;a title="http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc" href="http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc"&gt;http://www.microsoftvirtualacademy.com/training-courses/introduction-to-asp-net-mvc&lt;/a&gt;&lt;/p&gt;
&lt;p class="well well-lg"&gt;&lt;a href="http://www.microsoftvirtualacademy.com/liveevents/introduction-to-asp-net-mvc"&gt;Join Christopher Harrison and me for a fun, free online training event at Microsoft Virtual Academy on June 23, 2014!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Are you a &lt;strong&gt;front-end coder who wants to learn&lt;/strong&gt; how to &lt;strong&gt;build data-driven, server-side web applications&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;Maybe you know some &lt;strong&gt;Web Forms&lt;/strong&gt; and want to &lt;strong&gt;make the jump to ASP.NET MVC&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;This exciting new course &lt;strong&gt;focuses on the basics&lt;/strong&gt; of this popular framework for building scalable, standards-based web applications using well-established design patterns, so you can &lt;strong&gt;ramp up quickly&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="hidden-xs" style="height: 300px; display: block;"&gt;
&lt;div&gt;&lt;a href="http://www.microsoftvirtualacademy.com/liveevents/introduction-to-asp-net-mvc"&gt; &lt;img alt="Introduction to ASP.NET MVC" src="http://mvapublicstorage.microsoft.com/banners/MVA-ASP-intro-1hero.jpg" /&gt; &lt;/a&gt;&lt;/div&gt;
&lt;div id="splash-text" style="width: 340px; color: white; padding-left: 15px; margin-top: -135px;"&gt;
&lt;div style="text-align: left; line-height: 25px; font-size: 20px;"&gt;Introduction to ASP.NET MVC&lt;/div&gt;
&lt;div style="top: 0px; width: 320px; font-size: 14px; margin-top: 10px; position: relative;"&gt;Live event on June 23, 2014&lt;/div&gt;
&lt;div style="top: 20px; width: 320px; font-size: 14px; margin-top: 0px; position: relative;"&gt;&lt;a style="color: white;" href="http://www.microsoftvirtualacademy.com/liveevents/introduction-to-asp-net-mvc"&gt; &lt;strong&gt;Register Now!&lt;/strong&gt; &lt;img style="top: 3px; position: relative;" alt="" src="http://mvastorage.microsoft.com/public/css/images/cta-button.png" /&gt; &lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Free! Live! Learn ASP.NET MVC!&lt;/h2&gt;
&lt;p&gt;Chr&lt;a href="https://twitter.com/geektrainer"&gt;Christopher Harrison&lt;/a&gt; and I had tons of fun doing a previous MVA event last September: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;Developing ASP.NET MVC 4 Web Applications Jump Start&lt;/a&gt;. That one's available online, and I'm told it's one of the most popular courses on Microsoft Virtual Academy.&lt;/p&gt;
&lt;p&gt;We based the previous MVC Jump Start on the the official Microsoft &lt;a href="http://www.microsoft.com/learning/en-us/exam-70-486.aspx"&gt;Exam 70-486&lt;/a&gt;, which is part of the &lt;a href="http://www.microsoft.com/learning/en-us/mcsd-web-apps-certification.aspx"&gt;MCSD: Web Applications&lt;/a&gt; certification. We did what we could to make it approachable for beginners, but cramming an entire week long course in ASP.NET MVC into a single day meant it moved pretty quickly.&lt;/p&gt;
&lt;p&gt;So Christopher and I both agreed that it's be great to have a more introductory level class that moves a little slower and is easier for beginners to follow. Here's what we'll be covering:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basics of MVC and the Moving Parts&lt;/li&gt;
&lt;li&gt;Creating and Configuring Models&lt;/li&gt;
&lt;li&gt;The Power of Visual Studio&lt;/li&gt;
&lt;li&gt;Deep Dive into Controllers&lt;/li&gt;
&lt;li&gt;Deep Dive into Views&lt;/li&gt;
&lt;li&gt;Introduction to Bootstrap&lt;/li&gt;
&lt;li&gt;Introduction to Authentication in MVC​&lt;/li&gt;
&lt;li&gt;Supplement Your Knowledge&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'll be taking live questions, and there will be online chat support as well. If you've been wanting to learn ASP.NET MVC, this is a great opportunity!&lt;/p&gt;
&lt;p&gt;And don't let your boss tell you that you can't miss a day of work for this. Remind them that this is free, and you'll be saving them tons of money with your new web dev super powers.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ngdDAH-s8Js:GbDiFuRKnjk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ngdDAH-s8Js:GbDiFuRKnjk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=ngdDAH-s8Js:GbDiFuRKnjk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ngdDAH-s8Js:GbDiFuRKnjk:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ngdDAH-s8Js:GbDiFuRKnjk:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/ngdDAH-s8Js" height="1" width="1" alt=""/&gt;</description><pubDate>Fri, 13 Jun 2014 20:23:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/mva-introduction-to-asp-net-mvc-free-live-training-june-23</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/new-book-pro-windows-8-1-development-with-xaml-and-c</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/am-0StLpmCE/new-book-pro-windows-8-1-development-with-xaml-and-c</link><category>Book</category><category>XAML</category><title>New Book: Pro Windows 8.1 Development with XAML and C#</title><description>&lt;a href="http://www.apress.com/9781430240471"&gt;&lt;img style="float: right;" src="http://www.apress.com/media/catalog/product/cache/9/image/9df78eab33525d08d6e5fb8d27136e95/A/9/A9781430240471-3d_1.png"&gt;&lt;/a&gt; 
&lt;p&gt;Between releases of my other book (&lt;a href="http://www.wrox.com/WileyCDA/WroxTitle/Professional-ASP-NET-MVC-5.productCd-1118794753.html"&gt;Professional ASP.NET MVC&lt;/a&gt;, next release due out soon!) &lt;a href="http://jesseliberty.com/2014/06/03/pro-windows-8-1-development-wxaml-and-c/"&gt;Jesse Liberty&lt;/a&gt; somehow talked me into collaborating with him on writing a book on Windows 8.1 development. Actually, it wasn't a hard sell, because I've &lt;a href="http://www.bing.com/search?q=xaml+site%3Aweblogs.asp.net%2Fjongalloway"&gt;done a good amount of XAML dev&lt;/a&gt;, love C#, and Windows 8 / 8.1 development is a lot of fun. We co-wrote the table of contents, I wrote code samples and very rough drafts (sometimes just bullet points), and Jesse turned it into prose. That worked pretty well, but was a little too slow - especially once my work on Professional ASP.NET MVC 5 ramped up. Fortunately, &lt;a href="https://twitter.com/skimedic"&gt;Phil Japiske&lt;/a&gt; agreed to join us and finish the book off. Phil really nailed it - he polished off the remaining chapters, reviewed and greatly improved the existing chapters, and made sure everything was up to date for Windows 8.1.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apress.com/9781430240471"&gt;Pro Windows 8.1 Development with XAML and C#&lt;/a&gt; is focused on teaching you how to use your C# skills to build Windows Store applications. It teaches you the necessary XAML skills, the controls, the application model, and takes you from File / New to publishing an application to the Windows Store.&lt;/p&gt;
&lt;p&gt;Here's the table of contents:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Getting Started 
&lt;li&gt;Building Your First Windows 8 App 
&lt;li&gt;Themes, Panels, and Controls 
&lt;li&gt;Binding 
&lt;li&gt;Views 
&lt;li&gt;Local Data 
&lt;li&gt;Remote Data and Services 
&lt;li&gt;Search and Share Contracts 
&lt;li&gt;Notifications 
&lt;li&gt;Application Life Cycle 
&lt;li&gt;Making Money 
&lt;li&gt;Publishing Your App &lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;I'm especially happy with my contributions to the local and remote data chapters. Any non-trivial application needs to tackle these concerns, and it's important to get right. I went through a few iterations on the pattern for data access and settled on a Task based repository pattern that worked pretty well. For the remote data, I showed how to set up Web API services both as JSON/XML endpoints and leveraging OData.&lt;/p&gt;
&lt;p&gt;I also wrote a lot of the Notifications chapter, since the primary example demonstrates using Azure Mobile Services to send client notifications.&lt;/p&gt;&lt;p&gt;The book is a little over 300 pages, so it hopefully strikes a pretty good balance on the thorough vs. longwinded scale. I hope you like it!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Today (Friday June 13, 2014) there's a 40% discount code on the Apress site: FRDY13.&lt;/strong&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=am-0StLpmCE:wnZIWbBXUpc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=am-0StLpmCE:wnZIWbBXUpc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=am-0StLpmCE:wnZIWbBXUpc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=am-0StLpmCE:wnZIWbBXUpc:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=am-0StLpmCE:wnZIWbBXUpc:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/am-0StLpmCE" height="1" width="1" alt=""/&gt;</description><pubDate>Fri, 13 Jun 2014 16:06:36 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/new-book-pro-windows-8-1-development-with-xaml-and-c</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/weblogs-asp-net-now-running-on-orchard-and-azure-web-sites</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/NMLkuBaMPsY/weblogs-asp-net-now-running-on-orchard-and-azure-web-sites</link><title>weblogs.asp.net Now Running On Orchard and Azure Web Sites</title><description>&lt;p&gt;I'm incredibly happy to announce that my blog - and all 750 other blogs running under weblogs.asp.net - are now powered by Orchard and Azure Web Sites! That's 750 blogs, all hosted in 4 Azure Web Sites all running on only one large virtual machine.&lt;/p&gt; &lt;h2&gt;A bit of nostalgia&lt;/h2&gt; &lt;p style="float: right; padding-left: 10px"&gt;&lt;a title="Olde Tyme Blogge" href="https://web.archive.org/web/20031018232745///weblogs.asp.net/jgalloway/posts/7498.aspx"&gt;&lt;img border="0" alt="Olde Tyme Blogge" src="//farm6.static.flickr.com/5077/14205986930_ed4cc80451.jpg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I've been blogging on weblogs.asp.net since May 2003 - over eleven years. Back then it was called &lt;a href="https://web.archive.org/web/20030208002715///dotnetweblogs.com/"&gt;dotnetweblogs&lt;/a&gt; and ran on an open source blogging platform called .Text. Over the years, it got moved through varivous versions of Community Server, and had been stuck on an old, customized version of Community Server for almost seven years. It was hard to take myself seriously when blogging about web standards when my blog was being forced to quirks mode in IE due to an ancient HTML header.&lt;/p&gt; &lt;p&gt;I'd exported my BlogML several times and thought about moving, but I really didn't want to. I'd been part of the weblogs.asp.net community for a long time - for a while I subscribed to every single RSS feed and read each of them daily - and I'm a pretty big ASP.NET fan, too. I resorted to cramming a bunch of JavaScript into the "News and Announcements" HTML field on the left. It pulled in jQuery from a CDN and did all kinds of terrible things to insert widgets and hide elements I didn't want and make the page jump around for a few seconds while loading. Kind of like most news websites these days, so maybe I was ahead of my time.&lt;/p&gt; &lt;p&gt;I'd campaigned internally a few times to get the blog platform updated, but understood it was a big job to update several hundred weblogs - with history, and without downtime. Fortunately &lt;a href="//weblogs.asp.net/scottgu"&gt;there's another very high profile blogger on the weblogs.asp.net platform&lt;/a&gt;; that may have had something to do with getting the update to happen. :-)&lt;/p&gt; &lt;p&gt;So I was extremely happy to hear that there was finally an effort underway to make the move!&lt;/p&gt; &lt;p&gt;&lt;em&gt;Disclaimer: I did not do any of the dev work for this migration. In fact, I was one of the top whiny customers - my blog was one of the test cases for the migration, and I gave &lt;a href="https://twitter.com/sebastienros"&gt;Sebastien Ros&lt;/a&gt; and the Neudesic dev team (&lt;a href="https://www.linkedin.com/in/pfuerte"&gt;Peter Fuerte&lt;/a&gt;, Samir Patel, &lt;/em&gt;&lt;em&gt;&lt;a href="https://www.linkedin.com/in/zachall"&gt;Zac Hall&lt;/a&gt;, &lt;/em&gt;&lt;em&gt;and &lt;a href="https://twitter.com/terrimorton"&gt;Terri Morton&lt;/a&gt;)&lt;/em&gt;&lt;em&gt; tons of feedback and piles of feature requests.&lt;/em&gt; &lt;h2&gt;Hosting Details&lt;/h2&gt; &lt;p&gt;Orchard is hosted as &lt;b&gt;Azure Websites&lt;/b&gt; on a single basic large instance using using 4 websites on a single instance to scale out the memory limit on 32 bits.&lt;/p&gt; &lt;p&gt;We use &lt;strong&gt;4 Azure SQL Database&lt;/strong&gt; instances, Business edition set to 10GB. Each azure website points to a SQL Azure database, and each database contains around 200 blog using table prefixes.&lt;/p&gt; &lt;p&gt;Each website points to an &lt;b&gt;Azure Cache Service&lt;/b&gt; for output caching&lt;/p&gt; &lt;p&gt;All blogs point to the same &lt;b&gt;blob storage &lt;/b&gt;account&lt;/p&gt; &lt;p&gt;An A&lt;b&gt;zure Queue&lt;/b&gt; is used to synchronize the main portal and the blogs&lt;/p&gt; &lt;p&gt;One ARR proxy in an &lt;b&gt;Azure VM&lt;/b&gt; is used to route the requests to the Azure websites. We set it up this way because we already had this VM set up to do the proxy work for the rest of *.asp.net.&lt;/p&gt; &lt;p&gt;Here's a general diagram (stolen with permission from Sebastien's talk at the Orchard Harvest conference this week):&lt;/p&gt; &lt;p&gt;&lt;a title="weblogs.asp.net infrastructure" href="//www.flickr.com/photos/36836555@N00/14393514942/"&gt;&lt;img border="0" alt="weblogs.asp.net infrastructure" src="//farm4.static.flickr.com/3903/14393514942_95c546e130_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Performance Statistics&lt;/h2&gt; &lt;p&gt;Here are our monthly estimated statistics for weblogs.asp.net:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Bandwidth out – 17 terrabytes  &lt;li&gt;Page Views – 1.3 million  &lt;li&gt;Unique Visitors – 750,000  &lt;li&gt;Visits – 1.1 million &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Here's the thing: Azure Web Sites is fast and efficient. I was already convinced of that, having run a lot of sites on it over the past few years. But &lt;strong&gt;Orchard is crazy efficient&lt;/strong&gt;, too. I did not know that. I recently saw Sebastien give a presentation on Orchard, and it blew my mind. If you had heard or read that Orchard is slow, bloated or inefficient, you owe it to yourself to look again. I've been shocked by how fast and efficient the current release of Orchard is.&lt;/p&gt; &lt;p&gt;The Orchard output cache module includes pretty moderate caching but delivers pretty extreme CPU performance benefits, as shown in the CPU charts from the production site below. Notice we're hovering around 20% CPU most of the time:&lt;/p&gt; &lt;p&gt;&lt;a title="weblogs.asp.net output caching" href="//www.flickr.com/photos/36836555@N00/14415042433/"&gt;&lt;img border="0" alt="weblogs.asp.net output caching" src="//farm4.static.flickr.com/3911/14415042433_bf8ff11349_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Hosting Cost Summary&lt;/h2&gt; &lt;p&gt;It's incredibly cheap to host all 750 weblogs on Azure Web Sites, SQL Database, Storage and Cache. Here's a per-month cost estimate (keep the above stats in mind when you read these):&lt;/p&gt; &lt;table class="table table-striped table-condensed table-hover"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Item &lt;/td&gt; &lt;td&gt;Usage to Date &lt;/td&gt; &lt;td&gt;Cost to Date &lt;/td&gt; &lt;td&gt;Estimated Cost Per Month &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Data Transfer OUT (GB) - Zone 1&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;1428.41 (GB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;170.81&lt;/p&gt;&lt;/td&gt; &lt;td&gt;196.43 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Data Transfer IN (GB) - Zone 1&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;1.21 (GB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.00&lt;/p&gt;&lt;/td&gt; &lt;td&gt;0.00 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Database Units (in 10s) - Business Edition&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.54 DB Units (10s)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;53.88&lt;/p&gt;&lt;/td&gt; &lt;td&gt;61.96 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Storage Transactions (in 10,000s) - Data Management&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;323.84 (10,000s)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.16&lt;/p&gt;&lt;/td&gt; &lt;td&gt;0.18 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Basic (128 MB) - Cache&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;2.52 (128 MB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;31.52&lt;/p&gt;&lt;/td&gt; &lt;td&gt;50.00 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Data Transfer (GB) - Zone 1&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.08 (GB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.01&lt;/p&gt;&lt;/td&gt; &lt;td&gt;0.01 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Standard IO - Block Blob (GB) - Geo Redundant&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;1.92 (GB)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;0.09&lt;/p&gt;&lt;/td&gt; &lt;td&gt;0.10 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;p&gt;Large Basic Web Sites Hours - Web Sites&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;609.00 (hours)&lt;/p&gt;&lt;/td&gt; &lt;td&gt; &lt;p&gt;187.20&lt;/p&gt;&lt;/td&gt; &lt;td&gt;215.28 &lt;/td&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Grand Total &lt;/td&gt; &lt;td&gt;&amp;nbsp;&lt;/td&gt; &lt;td&gt; &lt;p&gt;443.67&lt;/p&gt;&lt;/td&gt; &lt;td&gt;523.47 &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;This works out to under about 70 cents per blog per month, which is pretty impressive.&lt;/p&gt; &lt;h2&gt;What was changed in Orchard to support multi-blog&lt;/h2&gt; &lt;p&gt;Nothing!&lt;/p&gt; &lt;p&gt;&lt;a href="//docs.orchardproject.net/Documentation/Setting-up-a-multi-tenant-orchard-site"&gt;Multi-tenancy is a native capability of Orchard CMS&lt;/a&gt;. It is the primary reason we chose Orchard as the platform. So that's neat.&lt;/p&gt; &lt;p&gt;We're using 4 websites on a single Azure instance to scale out the memory limit on 32 bits, and any optimizations that were made to Orchard itself for this project were rolled back into the core platform (for v.1.8.1.0 and later).&lt;/p&gt; &lt;h2&gt;Migrating 750 weblogs (with more than 75k posts and 250k comments)&lt;/h2&gt; &lt;p&gt;weblogs.asp.net supported &lt;a href="//en.wikipedia.org/wiki/BlogML"&gt;BlogML&lt;/a&gt; export and import. BlogML is an open format for Blog content, and it includes everything you'd need to migrate eleven years of blogging - including posts, comments and tags. It's not a slam dunk, though. Years ago, I tried to export my blog and the requests kept timing out because the export (including comment spam) was something like 5 or 6 MB. A year ago I was sick with a flu so I decided to do some blog spam analysis; &lt;a href="https://twitter.com/terrimorton"&gt;Terri&lt;/a&gt; and team incorporated the results into their spam filters which cut the spam levels quite significantly. Still, lots of data.&lt;/p&gt; &lt;p&gt;On the Orchard side, they took advantage of &lt;a href="//docs.orchardproject.net/Documentation/Making-a-Web-Site-Recipe"&gt;custom Orchard recipes&lt;/a&gt; to handle the import. Recipes are great - they include everything you'd need to initialize a new site, including blogs, users, etc. And they can be based off a template, so you can create multiple (say, 750) recipes from one template. Slick.&lt;/p&gt; &lt;p&gt;At a high level (because I didn't write the code), Sebastien and friends tackled the problem like this:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Export all sites to BlogML  &lt;li&gt;Convert the BlogML to custom Orchard recipes to create the new blogs including:  &lt;ul&gt; &lt;li&gt;Posts  &lt;li&gt;Comments  &lt;li&gt;Users  &lt;li&gt;New passwords &lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Generate custom commands to automate the recipe processing &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Automation was important, because they reran this migration several times.&lt;/p&gt; &lt;p&gt;One other neat thing about the import: they used the VM Berserker technique (my name, I hope it sticks). You may have read about this approach before on Troy Hunt's post titled &lt;a href="//www.troyhunt.com/2013/12/working-with-154-million-records-on.html"&gt;Working with 154 million records on Azure Table Storage – the story of “Have I been pwned?”&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The VM Berserker technique takes advantages of one of the most unappreciated values of cloud computing: the ability to develop cheaply, scale way up for a short time, and then turn off. This lets you do big things for less than the cost of a cup of coffee. Scaling up is nice. Scaling up and then back down is even nicer. So for this migration, they tested things out on a VM, then scaled it up to handle the migration, then turned it off (to stop paying). Done. Oh, and by running in an Azure VM they were running the processing in the same datacenter as the data, so it was really fast.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;This is the kind of thing that tells me that cloud computing is the future. Sure, it's great to spin up sites and VM's and worker roles and stuff in the cloud. It's great that I can amp them up when I want. But often lost in the discussion is the power of being able to scale hard for an hour or two, then shut down. The cost-per-awesome on that transaction hasn't sunk in with most developers yet.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Sebastien announced at the Orchard Harvest conference this week that the tools that were written to migrate the content from the old system to Orchard (running Orchard recipes against BlogML export files) will be released publicly very soon.&lt;/p&gt; &lt;h2&gt;New Blog Goodness&lt;/h2&gt; &lt;p&gt;So much good stuff!!!&lt;/p&gt; &lt;h3&gt;New Bootstrap blog theme&lt;/h3&gt; &lt;p&gt;This is probably my favorite.&amp;nbsp; In the past I'd written a few custom or inline styles, but now the system's running on a great framework. Bootstrap's tons of fun. There are individual styles and components that make things look better, so I can throw in a Bootstrap table style or grid whenever it's useful.&lt;/p&gt; &lt;p&gt;&lt;button class="btn btn-default"&gt;&lt;span class="glyphicon glyphicon-star"&gt;&lt;/span&gt;This is a button with a star on it.&lt;/button&gt;&lt;/p&gt; &lt;p&gt;Plus, it's easy to drop in a new theme from time to time. I &lt;a href="//bootswatch.com/"&gt;grabbed one off Bootswatch&lt;/a&gt; to get started, but am looking forward to tinkering with it.&lt;/p&gt; &lt;h3&gt;Mobile friendly display&lt;/h3&gt; &lt;p&gt;Since Bootstrap 3 is a mobile first framework, it always looks good on smaller displays. Posts automatically scale down for mobile devices using media queries.&lt;/p&gt; &lt;h3&gt;More Authoring Options&lt;/h3&gt; &lt;p&gt;I've always been a fan of Live Writer, and that's still supported. And there's HTML support, which is good. But Orchard also introduces Markdown editing support, which I'm told will cause my pants to shrink and my beard to grow out. So that's something.&lt;/p&gt; &lt;h3&gt;Widgets!&lt;/h3&gt; &lt;p style="float: right; padding-bottom: 10px; padding-top: 10px; padding-left: 10px; padding-right: 10px"&gt;&lt;a title="Orchard Widget Zones" href="//www.flickr.com/photos/36836555@N00/14371595856/"&gt;&lt;img border="0" alt="Orchard Widget Zones" src="//farm4.static.flickr.com/3856/14371595856_2f32e0f822.jpg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I'd been sneakily creating widgets for years by injecting HTML and JavaScript, but now there's real support. Orchard has some nice widgets, and you can drop them into 19 different zones, as shown on the right.&lt;/p&gt; &lt;p&gt;As I was beta testing, I asked Sebastien if we could move the comments from the content to an after content module so I could insert custom HTML widgets above the comments, and he set that up.&amp;nbsp; So far, the widgets have been incredibly flexible. No complaints at all there.&lt;/p&gt; &lt;h3&gt;Spam Control&lt;/h3&gt; &lt;p&gt;As I mentioned earlier, the spam was a bit out of hand before. Orchard adds &lt;a href="//en.wikipedia.org/wiki/ReCAPTCHA"&gt;ReCAPTCHA&lt;/a&gt; support. No messing around now, I can barely pass it.&lt;/p&gt; &lt;h3&gt;Social Media Tag support&lt;/h3&gt; &lt;p&gt;Orchard automatically includes support for all the fancy og:tags that are so hot these days. &lt;a href="//www.sebastienros.com/adding-social-meta-tags-in-orchard"&gt;Sebastien wrote a post with more information&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Custom Script Support&lt;/h3&gt; &lt;p&gt;I have already admitted to jamming script tags in HTML areas on the previous site. The new site includes the ability to add custom scripts for analytics, syntax highlighting, etc. It's supported, and I can include them in the header or footer as appropriate.&lt;/p&gt; &lt;p&gt;Site Nav Integration&lt;/p&gt; &lt;p&gt;Now new pages can be integrated into the site navigation. Cool.&lt;/p&gt; &lt;h2&gt;More Goodness!&lt;/h2&gt; &lt;p&gt;There's a lot more! If you're running a blog that's hosted on weblogs.asp.net, see the updated support &lt;a href="//www.asp.net/community/support/weblogs"&gt;here&lt;/a&gt;. If you'd like to learn more about Orchard - or contribute, as it's an open source project - check out the &lt;a href="//orchardproject.net/"&gt;Orchard Project&lt;/a&gt;. I'll be posting more about some things I've learned in customizing my blog a bit, including the code formatting. &lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=NMLkuBaMPsY:DbHr2GoUOL8:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=NMLkuBaMPsY:DbHr2GoUOL8:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=NMLkuBaMPsY:DbHr2GoUOL8:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=NMLkuBaMPsY:DbHr2GoUOL8:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=NMLkuBaMPsY:DbHr2GoUOL8:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/NMLkuBaMPsY" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 11 Jun 2014 01:21:58 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/weblogs-asp-net-now-running-on-orchard-and-azure-web-sites</feedburner:origLink></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/Building-Real-Time-Applications-With-Firebase-And-AngularJS/</guid><title>Building Real Time Applications With Firebase And AngularJS</title><description>&lt;p&gt;&lt;img style="float: right;" src="http://midnightprogrammer.net/image.axd?picture=2014\5\firebase_logo.png" alt="" /&gt;Building real-time applications with SignalR is easy. But building real-time applications with JavaScript will be a problem if you are not aware of &lt;a href="https://www.firebase.com/" target="_blank"&gt;Firebase&lt;/a&gt;. I first heard of it when I was learning &lt;a href="http://angularjs.org" target="_blank"&gt;AngularJS&lt;/a&gt;. The official AngularJS site has the example where you can add, edit and delete the detials in real-time. This example uses Firebase as the storage and updates the UI in real time.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The data is stored in JSON format and accessing it using jQuery makes it very easy. Firebase API is pretty powerful and lets you get started in minutes. To get started with Firebase, you have to first &lt;a href="https://www.firebase.com/signup/" target="_blank"&gt;create a new account with Firebase&lt;/a&gt;. It's a paid service but for now you can opt for a developer account. As soon as your account is created you will be redirected to your dashboard where you can create a new application or use the one which is there by default from Firebase. Take the note of the URL ending with &lt;strong&gt;firebaseIO.com&lt;/strong&gt;, we will be needing it later on at the time of implementing.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\FirebaseApps.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Clicking on Manage App button will take you to the details page of the application. Where you can view/edit/import/export the data in the JSON format, authentication from Facebook, Twitter, Google etc, simulate read/write operation and more. You can see the sample data in JSON format I have been testing in the below screenshot. If you already have a JSON file, you can directly import it from the dashboard using the &lt;strong&gt;Import JSON&lt;/strong&gt; feature.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\FirebaseDetails.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;For this example I am using jQuery and AngularJS. If you wish you can just stick to jQuery. Create a new HTML page and add Firebase JS references in the head section. I am using AngularJS so I am going to add AngularJS reference as well.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;&amp;lt;script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.2.min.js" type="text/javascript"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.15/angular.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="https://cdn.firebase.com/js/client/1.0.11/firebase.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="https://cdn.firebase.com/libs/angularfire/0.7.1/angularfire.min.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/pre&gt;
&lt;p&gt;You get the first three references but the last reference is the AngularFire which is a quick way to work with Firebase applications with AngularJS. This is AngularJS code with firebase dependency.&lt;/p&gt;
&lt;pre class="brush: js;"&gt;var feedApp = angular.module('feedDataApp', ['firebase']);

feedApp.controller('feedListController', function ($scope, $firebase) {
    var fbURL = new Firebase("https://scorching-fire-0000.firebaseio.com/Feeds/");
    $scope.feedsList = $firebase(fbURL);

    $scope.save = function () {
        $scope.feedsList.$add({
            Name: $scope.feedsList.Name,
            Url: $scope.feedsList.Url,
            Description: $scope.feedsList.Description
            
        });
        $(":text").val('');
    }
});&lt;/pre&gt;
&lt;p&gt;I am not getting into the basics of AngularJS, but I will explain few things in the above code. The first line in the above code has the dependency named &lt;strong&gt;firebase&lt;/strong&gt;, in simple AngularJS apps we could have skip the dependecies. Then I have the controller named &lt;strong&gt;feeListController&lt;/strong&gt;, which is accompanied by a very own &lt;strong&gt;$scope&lt;/strong&gt; and new param which is &lt;strong&gt;$firebase&lt;/strong&gt;. Inside the controller I have a variable &lt;strong&gt;fbURL&lt;/strong&gt; which holds my Firebase URL. If you see here, you willl notice that I have appended the URL with &lt;strong&gt;Feeds&lt;/strong&gt;. This is because I want my data to be saved inside the &lt;strong&gt;Feeds&lt;/strong&gt; section in the Firebase storage. The &lt;strong&gt;$scope.feedsList&lt;/strong&gt; will hold the collection of all my entries I have in my storage. I have the save function which will save the details to my storage. Inside the Firebase's &lt;strong&gt;$add&lt;/strong&gt; function, I have passed &lt;strong&gt;Name&lt;/strong&gt;, &lt;strong&gt;Url&lt;/strong&gt; and &lt;strong&gt;Description&lt;/strong&gt;. You can pass as many params as you want. the best thing is that you don't even have to set the storage schema. As soon as you click the save button, a new entry is created in the storage. This is my storage looks like.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\FBStorage.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;If you don't want to save it under the &lt;strong&gt;Feeds&lt;/strong&gt; section then in the above JS file you just have to remove the &lt;strong&gt;Feeds&lt;/strong&gt; from the above URL. The UI for this demo is simple, just listing down the saved JSON data in a readable form using AngularJS.&lt;/p&gt;
&lt;pre class="brush: js;"&gt;&amp;lt;div ng-controller="feedListController"&amp;gt;
    &amp;lt;table class="table"&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                Name
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                Url
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                Description
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr ng-repeat=" feeds in feedsList"&amp;gt;
            &amp;lt;td&amp;gt;{{feeds.Name}}&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;{{feeds.Url}}&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;{{feeds.Description}}&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input type="text" ng-model="feedsList.Name" /&amp;gt;&amp;lt;br /&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input type="text" ng-model="feedsList.Url" /&amp;gt;&amp;lt;br /&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input type="text" ng-model="feedsList.Description" /&amp;gt;&amp;lt;br /&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;button type="submit" ng-click="save()"&amp;gt;Add Feed&amp;lt;/button&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;
&lt;p&gt;Using a simple design I have displayed the details using AngularJS.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\FireBaseUI.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;The best part is the as soon as I add a new feed details, it will get updated in the UI in real-time. Open the same page on a different browser and add a new entry. You will notice that the data is updated in real-time.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\JSONStore.PNG" alt="" /&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\AllDataFirebase.PNG" alt="" width="750" /&gt;&lt;/p&gt;
&lt;p&gt;Firebase is not limited for web, it is available for iOS/OS x, Java/Android, Node.js, Ember etc. Building mobile applications using Firebase as a real-time storage will be an amazing thing to do. This is not a very good example for Firebase with AngularJS but this will get you started with Firebase and let you test a part of your application using this awesome real-time storage.&lt;/p&gt;
&lt;p&gt;I would recommend you to look at &lt;a href="https://github.com/firebase/firereader" target="_blank"&gt;this web application&lt;/a&gt; build completely on Firebase and AngularJS.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.firebase.com" target="_blank"&gt;Firebase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://angularfire.com/" target="_blank"&gt;AngularFire&lt;/a&gt;&amp;nbsp;/ &lt;a href="https://github.com/firebase/angularFire" target="_blank"&gt;Github&lt;/a&gt;&amp;nbsp;/ &lt;a href="https://www.firebase.com/docs/angular/reference.html" target="_blank"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.firebase.com/docs/" target="_blank"&gt;Firebase - Getting started docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><pubDate>Sat, 17 May 2014 23:25:03 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/Building-Real-Time-Applications-With-Firebase-And-AngularJS/" /><a10:updated>2014-05-17T18:07:31Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/a-30-minute-look-at-asp-net-vnext</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/KbIHkhY--4I/a-30-minute-look-at-asp-net-vnext</link><title>A 30 Minute Look At ASP.NET vNext</title><description>&lt;p&gt;This week at TechEd, the ASP.NET team announced some pretty exciting updates on the way for ASP.NET.&lt;/p&gt;  &lt;h2&gt;Top Links&lt;/h2&gt;  &lt;h3&gt;Blog Posts&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/05/13/asp-net-vnext-the-future-of-net-on-the-server.aspx"&gt;ASP.NET vNext: the future of .NET on the Server&lt;/a&gt; (.NET Web Development and Tools Blog) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/IntroducingASPNETVNext.aspx"&gt;Introducing ASP.NET vNext&lt;/a&gt; (Scott Hanselman) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://davidfowl.com/asp-net-vnext/"&gt;ASP.NET vNext&lt;/a&gt; (David Fowler) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/dotnet/archive/2014/05/12/the-next-generation-of-net-asp-net-vnext.aspx"&gt;The Next Generation of .NET – ASP.NET vNext&lt;/a&gt; (.NET Team Blog) &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014?t=microsoft-asp.net#fbid="&gt;ASP.NET team session videos from TechEd&lt;/a&gt;&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B385#fbid="&gt;INTRODUCING: The Future of .NET on the Server&lt;/a&gt; (Scott Hunter and Scott Hanselman) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/C9-09"&gt;Channel 9 Live: ASP.NET Developer Q&amp;amp;A&lt;/a&gt;&amp;#160; (Scott Hunter and Scott Hanselman) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B411#fbid="&gt;DEEP DIVE: The Future of .NET on the Server&lt;/a&gt; (David Fowler and Scott Hanselman) &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;&lt;a href="http://www.asp.net/vnext"&gt;ASP.NET site content&lt;/a&gt;&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/overview"&gt;Getting Started with ASP.NET vNext&lt;/a&gt; (Mike Wasson) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/walkthrough-mvc-music-store"&gt;MVC Music Store Sample Application for ASP.NET vNext&lt;/a&gt; (Cephas Lin) &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/walkthrough-bugtracker"&gt;BugTracker Sample Application for ASP.NET vNext&lt;/a&gt; (Erik Reitan) &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;Getting Involved&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://forums.asp.net/1255.aspx/1?ASP+NET+vNext"&gt;ASP.NET vNext Discussion Forum&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="https://jabbr.net/#/rooms/AspNetvNext"&gt;ASP.NET vNext chat on JabbR&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="https://github.com/aspnet/Home"&gt;ASP.NET vNext Home repository on GitHub&lt;/a&gt; - The place to get started with the code &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;What Is It?&lt;/h2&gt;  &lt;p&gt;In case you haven't read up on it, I'll just quote from the ASP.NET site:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;The next version of ASP.NET (“ASP.NET vNext”) has been re-designed from the ground up. The goal is to create a lean and composable .NET stack for building modern cloud-based apps.&lt;/p&gt;    &lt;p&gt;Here are some of the features of ASP.NET vNext:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;vNext includes new cloud-optimized versions of MVC, Web API, Web Pages, SignalR, and Entity Framework. &lt;/li&gt;      &lt;li&gt;MVC, Web API, and Web Pages will be merged into one framework, called MVC 6. The new framework removes a lot of overlap between the existing MVC and Web API frameworks. It uses a common set of abstractions for routing, action selection, filters, model binding, and so on. You can use the framework to create both UI (HTML) and web APIs. &lt;/li&gt;      &lt;li&gt;ASP.NET vNext apps can use a cloud-optimized subset of .NET vNext. This subset is factored for server and web workloads, has a smaller footprint than the full .NET vNext, and supports side-by-side deployment. &lt;/li&gt;      &lt;li&gt;MVC 6 has no dependency on System.Web. The result is a leaner framework, with faster startup time and lower memory consumption. &lt;/li&gt;      &lt;li&gt;vNext will support true side-by-side deployment. If your app uses the cloud-optimized subset of .NET vNext, you can bin deploy all of your dependencies, including the .NET vNext (cloud optimized) packages. That means you can update your app without affecting other applications on the same server. &lt;/li&gt;      &lt;li&gt;vNext is host agnostic. You can host your app in IIS, or self-host in a custom process. (Web API 2 and SignalR 2 already support self-hosting; ASP.NET vNext brings this same capability to MVC.) &lt;/li&gt;      &lt;li&gt;Dependency injection is built into the framework. Use your preferred IoC container to register dependencies. &lt;/li&gt;      &lt;li&gt;vNext uses the Rosyln compiler to compile code dynamically. You will be able to edit a code file, refresh the browser, and see the changes without rebuilding the project. &lt;/li&gt;      &lt;li&gt;vNext is open source and cross platform. &lt;/li&gt;   &lt;/ul&gt; &lt;/blockquote&gt;  &lt;p&gt;To me as a web developer, this means I get:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;All the advantages of the .NET platform (performance, stability, security, comprehensive API), and &lt;/li&gt;    &lt;li&gt;The development experience of C# and Visual Studio... with &lt;/li&gt;    &lt;li&gt;The simplicity, portability, quick dev refresh cycle and flexibility of an interpreted web framework. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;And I like the sound of that.&lt;/p&gt;  &lt;h2&gt;Source Code&lt;/h2&gt;  &lt;p&gt;All the source code and samples are published under a new &lt;a href="https://github.com/aspnet"&gt;ASP.NET organization on GitHub&lt;/a&gt;. There are lots of interesting repos to look at; here are some top ones to get started with:&lt;/p&gt;  &lt;h3&gt;&lt;a href="https://github.com/aspnet/Home"&gt;Home repository&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;This is the place to get started. The readme for this repo explains how to install and run the Hello World samples.&lt;/p&gt;  &lt;h3&gt;&lt;a title="https://github.com/aspnet/MusicStore" href="https://github.com/aspnet/MusicStore"&gt;Music Store sample&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;Ah, the Music Store. The team wanted some samples to validate and test vNext as they developed it, and this was one of them. I updated the source code to ASP.NET MVC 5 and threw it over the wall to them, and it seems to have held up. Cephas Lin has a &lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/walkthrough-mvc-music-store"&gt;Music Store walkthrough posted in the vNext content on the ASP.NET site&lt;/a&gt;, and it's pretty easy to follow along.&lt;/p&gt;  &lt;h3&gt;&lt;a href="https://github.com/aspnet/BugTracker"&gt;BugTracker sample&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;The BugTracker is a single page application using SignalR,&amp;#160; Knockout.js and Web API. I'm pretty happy that they had a single page application as one of their validation cases from the beginning.&lt;/p&gt;  &lt;h3&gt;&lt;a title="https://github.com/aspnet/KRuntime" href="https://github.com/aspnet/KRuntime"&gt;KRuntime&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;If you're feeling adventurous, this it the actual runtime. It includes things like the compilation system, SDK tools, and the native CLR hosts. (parental warning advisory if stumbling across some C++ gives you nightmares)&lt;/p&gt;  &lt;ul&gt;&lt;!--EndFragment--&gt;&lt;/ul&gt;  &lt;p&gt;&lt;font size="5"&gt;Quick Walkthrough&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;I promised I'd skip the detailed walkthrough, because you really should be looking at the &amp;quot;official&amp;quot; ones I've linked to above. &lt;strong&gt;My point here is not really guide you through them, but to give you a look at what the experience is like if you're not feeling up to doing it yourself. So let's see what I can get running in 30 minutes or so (until my next meeting). If you want to follow along, read the walkthroughs.&lt;/strong&gt;&lt;/p&gt;  &lt;h3&gt;Important Notes Before We Get Started&lt;/h3&gt;  &lt;p&gt;I'm doing this on my dev machine. It runs side by side with my existing .NET and Visual Studio 2013 installs.&lt;/p&gt;  &lt;p&gt;This looks a bit fiddly because we're doing this all from the commandline. Don't worry if that's not your bag - this will all be supported via Visual Studio. This is an early preview. But, it's good that this level of control is available. Note that I'm doing all of this without firing up Visual Studio or installing any other software.&lt;/p&gt;  &lt;p&gt;You'll see the letter K pops up from time to time. This was internally called Project K before it was released. I have no idea if the k will go away now, but I kind of like it. So we've got kvm (k version manager), kre (k runtime engine), kpm (k package manager), and k (the actual bootstrapper to run our app).&lt;/p&gt;  &lt;h3&gt;The Home Repo samples&lt;/h3&gt;  &lt;p&gt;First, let's try out the &lt;a href="https://github.com/aspnet/home"&gt;ASP.NET vNext Home repo&lt;/a&gt;. I've already got this locally, but for the purposes of science I'll pretend that I don't. Since I'm just kicking the tires here, instead of cloning the repo I'll just download the zip to my desktop, unblock if necessary, and unzip it.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-05-13_14h27_33" href="http://www.flickr.com/photos/36836555@N00/14200631213/"&gt;&lt;img border="0" alt="2014-05-13_14h27_33" src="http://farm3.static.flickr.com/2919/14200631213_8cc6c267cf_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's what that gets me:&lt;/p&gt;  &lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master&amp;gt;dir
 Volume in drive C has no label.
 Volume Serial Number is 5E2E-AE5E

 Directory of C:\Users\Jon\Desktop\Home-master\Home-master

05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          .
05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          ..
05/13/2014  01:51 PM               851 .gitattributes
05/13/2014  01:51 PM               245 .gitignore
05/13/2014  01:51 PM             1,513 CONTRIBUTING.md
05/13/2014  01:51 PM               356 kvm.cmd
05/13/2014  01:51 PM            17,278 kvm.ps1
05/13/2014  01:51 PM                28 kvmsetup.cmd
05/13/2014  01:51 PM               592 LICENSE.txt
05/13/2014  01:51 PM               481 NuGet.Config
05/13/2014  01:51 PM             6,390 README.md
05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          samples
               9 File(s)         27,734 bytes
               3 Dir(s)  11,363,086,336 bytes free&lt;/pre&gt;

&lt;p&gt;The next step in the readme tells me to execute kvmsetup.cmd, which tells me this:&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;Copying file C:\Users\Jon\.kre\bin\kvm.ps1
Copying file C:\Users\Jon\.kre\bin\kvm.cmd
Adding C:\Users\Jon\.kre\bin to process PATH
Adding C:\Users\Jon\.kre\bin to user PATH
Adding C:\Program Files\KRE;%USERPROFILE%\.kre to process KRE_HOME
Adding C:\Program Files\KRE;%USERPROFILE%\.kre to machine KRE_HOME
Press any key to continue ...&lt;/pre&gt;

&lt;p&gt;And with that, we've got the version manager installed. Important: this is the version manager, not the runtime. We can install multiple versions of the runtime engine, and use kvm to select the active one for a project.&lt;/p&gt;

&lt;p&gt;Next, the readme tells me to install a named version of the K Runtime Engine: &lt;code&gt;kvm install 0.1-alpha-build-0421&lt;/code&gt;&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master&amp;gt;kvm install 0.1-alpha-build-0421
Downloading KRE-svr50-x86.0.1-alpha-build-0421 from https://www.myget.org/F/aspnetvnext/api/v2/
Installing to C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421
Adding C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421\bin to process PATH&lt;/pre&gt;

&lt;p&gt;Now we've got a runtime installed, so we can run some samples. The readme recommends running the console sample first, and I think that makes sense since it's an incredibly simple app that verifies things are installed. So I cd to samples\ConsoleApp and run kpm restore. This looks scary, but it's really fast, and it's a good thing. The idea is that instead of running on big, monolithic framework assemblies, ASP.NET vNext is grabbing a bunch of small, focused NuGet packages. &lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master&amp;gt;cd samples\ConsoleApp

C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp&amp;gt;kpm restore

C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp&amp;gt;CALL &amp;quot;C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421\bin\KLR.cmd&amp;quot; --lib &amp;quot;C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421\bin\;C:\Users\Jon\.kre\packages\KRE-svr50-x86.0.1-alpha-build-0421\bin\lib\Microsoft.Framework.PackageManager&amp;quot; &amp;quot;Microsoft.Framework.PackageManager&amp;quot; restore
Restoring packages for C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp\project.json
Attempting to resolve dependency ConsoleApp &amp;gt;= 1.0.0
Attempting to resolve dependency System.Console &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Console'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.Console'
Attempting to resolve dependency mscorlib &amp;gt;=
Attempting to resolve dependency System &amp;gt;=
Attempting to resolve dependency System.Core &amp;gt;=
Attempting to resolve dependency Microsoft.CSharp &amp;gt;=
Attempting to resolve dependency ConsoleApp &amp;gt;= 1.0.0
Attempting to resolve dependency System.Console &amp;gt;= 4.0.0.0
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.Console' 931ms
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Console' 972ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.Console/4.0.0.0
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.Console/4.0.0.0 1696ms
Attempting to resolve dependency System.IO &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.IO'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.IO'
Attempting to resolve dependency System.Runtime &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Runtime'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.Runtime'
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.Runtime' 659ms
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.IO' 838ms
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Runtime' 841ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.Runtime/4.0.20.0
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.IO' 954ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.IO/4.0.0.0
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.IO/4.0.0.0 1779ms
Attempting to resolve dependency System.Text.Encoding &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Text.Encoding'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.Text.Encoding'
Attempting to resolve dependency System.Threading.Tasks &amp;gt;= 4.0.0.0
  GET https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Threading.Tasks'
  GET https://nuget.org/api/v2/FindPackagesById()?Id='System.Threading.Tasks'
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.Runtime/4.0.20.0 1919ms
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.Text.Encoding' 746ms
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Text.Encoding' 837ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.Text.Encoding/4.0.10.0
  OK https://www.myget.org/F/aspnetvnext/FindPackagesById()?Id='System.Threading.Tasks' 843ms
  OK https://nuget.org/api/v2/FindPackagesById()?Id='System.Threading.Tasks' 1051ms
  GET https://www.myget.org/F/aspnetvnext/api/v2/package/System.Threading.Tasks/4.0.0.0
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.Text.Encoding/4.0.10.0 1356ms
  OK https://www.myget.org/F/aspnetvnext/api/v2/package/System.Threading.Tasks/4.0.0.0 1721ms
Resolving complete, 8357ms elapsed
Installing System.Console 4.0.0.0
Installing System.Runtime 4.0.20.0
Installing System.IO 4.0.0.0
Installing System.Text.Encoding 4.0.10.0
Installing System.Threading.Tasks 4.0.0.0
Restore complete, 8495ms elapsed&lt;/pre&gt;

&lt;p&gt;Now I run it with k run:&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp&amp;gt;k run
Hello World

C:\Users\Jon\Desktop\Home-master\Home-master\samples\ConsoleApp&amp;gt;&lt;/pre&gt;

&lt;p&gt;Like I said, not all that exciting. Just a quick verification check. Now that I know that's working, I'll quickly pop into one of the other sandbox samples, the HelloWeb one. Notice how simple the startup.cs file is (&lt;a href="http://www.asp.net/vnext/overview/aspnet-vnext/overview"&gt;the official walkthrough explains it in detail&lt;/a&gt;). &lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb&amp;gt;dir
 Volume in drive C has no label.
 Volume Serial Number is 5E2E-AE5E

 Directory of C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb

05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          .
05/13/2014  02:29 PM    &amp;lt;DIR&amp;gt;          ..
05/13/2014  01:51 PM           310,647 image.jpg
05/13/2014  01:51 PM               506 project.json
05/13/2014  01:51 PM               227 Startup.cs
               3 File(s)        311,380 bytes
               2 Dir(s)  11,368,951,808 bytes free

C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb&amp;gt;copy startup.cs con
using Microsoft.AspNet.Builder;

namespace KWebStartup
{
    public class Startup
    {
        public void Configure(IBuilder app)
        {
            app.UseStaticFiles();
            app.UseWelcomePage();
        }
    }
}        1 file(s) copied.

C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb&amp;gt;&lt;/pre&gt;

&lt;p&gt;Now I'll call kpm restore , just like before. This time kpm restore takes a bit longer, because there are more included packages (listed in &lt;a href="https://github.com/aspnet/Home/blob/master/samples/HelloWeb/project.json"&gt;project.json&lt;/a&gt;) and their dependencies.&lt;/p&gt;

&lt;p&gt;And I'm ready to run it. This time, instead of k run, I'll call k web since it's a web app. If I forget and call k run, it reminds what's what:&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;C:\Users\Jon\Desktop\Home-master\Home-master\samples\HelloWeb&amp;gt;k run
'HelloWeb' does not contain a static 'Main' method suitable for an entry point&lt;/pre&gt;

&lt;p&gt;Fine, k web it is. It tells me the server's started, but how do I view it? Well, the readme tells me it's at &lt;a href="http://localhost:5001"&gt;http://localhost:5001&lt;/a&gt;, but if I didn't know I could consult the commands section of project.json:&lt;/p&gt;

&lt;pre class="brush: plain; auto-links: false;"&gt;&amp;quot;commands&amp;quot;: {
    &amp;quot;web&amp;quot;: &amp;quot;Microsoft.AspNet.Hosting server=Microsoft.AspNet.Server.WebListener server.urls=http://localhost:5001&amp;quot;
  }&lt;/pre&gt;

&lt;p&gt;Simple enough. And browsing to that gives me a cool hello world page:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-05-13_15h01_50" href="http://www.flickr.com/photos/36836555@N00/13993838169/"&gt;&lt;img border="0" alt="2014-05-13_15h01_50" src="http://farm6.static.flickr.com/5566/13993838169_53a2e6619f_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nerd note: That page is shown because we've got app.UseWelcomePage() in startup.cs. There are no images or css in the project because everything's contained in the emitted HTML. It's actually really impressive - it's got embedded fonts, images as data:urls, CSS, and a minimized version of jQuery (for some nice animations), so it's a 287KB HTML payload... but since it's being served locally and you're not going to run this in production, not a problem.&lt;/p&gt;

&lt;p&gt;Nerd smackdown: David Fowler reminded me that this welcome page has been in Katana for a while.&lt;/p&gt;

&lt;h3&gt;Music Store&lt;/h3&gt;

&lt;p&gt;Okay, now that I've got this stuff installed, let's see how fast I can get the Music Store sample running.&lt;/p&gt;

&lt;p&gt;Step 1: Grab the zip from &lt;a title="https://github.com/aspnet/MusicStore" href="https://github.com/aspnet/MusicStore"&gt;https://github.com/aspnet/MusicStore&lt;/a&gt;, verify it's not blocked, and unzip on desktop.&lt;/p&gt;

&lt;p&gt;Step 2: Run kpm restore.&lt;/p&gt;

&lt;p&gt;Step 3: Select the hosting opeion (Helios, SelfHost, CustomHost - explained &lt;a href="https://github.com/aspnet/MusicStore"&gt;here&lt;/a&gt;). In this case I'll stick with selfhost, so I run k web and browse to localhost:5002:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-05-13_15h15_46" href="http://www.flickr.com/photos/36836555@N00/13993925660/"&gt;&lt;img border="0" alt="2014-05-13_15h15_46" src="http://farm3.static.flickr.com/2897/13993925660_5110a4b5e3.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yippee!&lt;/p&gt;

&lt;p&gt;Again, the point is that it's pretty quick and painless to get started and play with the samples; just follow the walkthroughs. If you're used to Node or Rails a lot of these steps should seem pretty familiar. If you're not and this freaks you out, don't be freaked out... this will all work smoothly from within Visual Studio in the release version. This is a preview. Take a look! Have Fun! Let us know what you think!&lt;/p&gt;

&lt;h2&gt;Videos&lt;/h2&gt;

&lt;p&gt;The best way to get up to speed is by watching the videos I mentioned earlier.&lt;/p&gt;

&lt;p&gt;&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B385/player?h=540&amp;amp;w=960" frameborder="0" scrolling="no" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;p&gt;&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B411/player?h=540&amp;amp;w=960" frameborder="0" scrolling="no" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=KbIHkhY--4I:co1XT4kPU5U:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=KbIHkhY--4I:co1XT4kPU5U:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=KbIHkhY--4I:co1XT4kPU5U:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=KbIHkhY--4I:co1XT4kPU5U:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=KbIHkhY--4I:co1XT4kPU5U:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/KbIHkhY--4I" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 13 May 2014 23:05:50 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/a-30-minute-look-at-asp-net-vnext</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/upcoming-web-camps-summer-2014</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/fUuSM6iy1os/upcoming-web-camps-summer-2014</link><title>Upcoming Web Camps - Summer 2014</title><description>&lt;p&gt;Web Camps are free, no fluff, lots of code events where you can get learn what's new in the Microsoft web platform and how you can put it to use right away. They're by developers for developers - no marketing, just building web apps.&lt;/p&gt;
&lt;p&gt;&lt;a title="DevCamps-Summer-2014" href="http://www.flickr.com/photos/36836555@N00/14149839646/"&gt;&lt;img alt="DevCamps-Summer-2014" src="http://farm6.static.flickr.com/5588/14149839646_3ffc4b0443.jpg" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Upcoming events&lt;/h4&gt;
&lt;p&gt;Here's the list, with speakers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;May 20 - &lt;strong&gt;Lisbon&lt;/strong&gt;, Portugal - Jon Galloway and &lt;a href="http://www.matvelloso.com/"&gt;Mat Velloso&lt;/a&gt; [&lt;a href="http://aka.ms/mswebcamp"&gt;register&lt;/a&gt; (nearly full, hurry!)]&lt;/li&gt;
&lt;li&gt;May 22 - &lt;strong&gt;Milan&lt;/strong&gt;, Italy - Jon Galloway and &lt;a href="http://www.matvelloso.com/"&gt;Mat Velloso&lt;/a&gt; (additional tracks as part of Cloud e ASP.NET Developer Day) [&lt;a href="https://msevents.microsoft.com/cui/EventDetail.aspx?EventID=1032587661"&gt;register&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;May 26 - &lt;strong&gt;Helsinki&lt;/strong&gt;, Finland - Jon Galloway and &lt;a href="http://www.matvelloso.com/"&gt;Mat Velloso&lt;/a&gt; [&lt;a href="https://msevents.microsoft.com/cui/EventDetail.aspx?EventID=1032582777"&gt;register&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;May 28 - &lt;strong&gt;Brussels&lt;/strong&gt; (Mechelen), Belgium - Jon Galloway (part of &lt;a href="http://www.techorama.be/"&gt;Techorama&lt;/a&gt;) [sold out]&lt;/li&gt;
&lt;li&gt;June 23 - &lt;strong&gt;New York City&lt;/strong&gt;, NY, USA - &lt;a href="http://www.bradygaster.com/"&gt;Brady Gaster&lt;/a&gt;, &lt;a href="http://nikcodes.com/"&gt;Nik Molnar&lt;/a&gt;, &lt;a href="http://blog.anthonyvanderhoorn.com/"&gt;Anthony van der Hoorn&lt;/a&gt; [&lt;a href="https://msevents.microsoft.com/cui/EventDetail.aspx?EventID=1032587864"&gt;register&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;July 9&amp;nbsp;- &lt;strong&gt;Los Angeles&lt;/strong&gt;, CA, USA - &lt;a href="https://twitter.com/coolcsh"&gt;Scott Hunter&lt;/a&gt;, Jon Galloway, Daniel Egan, Adam Tuliper&amp;nbsp;[&lt;a href="https://msevents.microsoft.com/cui/EventDetail.aspx?EventID=1032587863"&gt;register&lt;/a&gt;] (rescheduled)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Fresh ASP.NET and Visual Studio 2013.2 Content&lt;/h4&gt;
&lt;p&gt;We'll be covering all kinds of great new stuff in ASP.NET, Visual Studio 2013.2 and Azure for web developers. We organized the content so we start with tools and frameworks (e.g. ASP.NET MVC, ASP.NET Web API, Visual Studio 2013.2, Azure Web Sites), then dig into some specific scenarios for modern web application development. Here's the general agenda (varies by location, but should give you the general idea):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keynote&lt;/li&gt;
&lt;li&gt;Introduction to ASP.NET and Visual Studio 2013 Web Tools&lt;/li&gt;
&lt;li&gt;Building Web Applications using the latest ASP.NET technologies&lt;/li&gt;
&lt;li&gt;Building web front ends for both desktop and mobile using the latest web standards&lt;/li&gt;
&lt;li&gt;API Services for both web and devices&lt;/li&gt;
&lt;li&gt;Running, improving and maintaining a site in the real world&lt;/li&gt;
&lt;li&gt;Real-time Communications with SignalR&lt;/li&gt;
&lt;li&gt;Wrap Up&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go on, register (links are up above)! And let your web dev friends and co-workers who don't read blogs know, too, because this is a great way for them to get a recap on what's going on with ASP.NET, Visual Studio 2012, HTML5, JavaScript, and more.&lt;/p&gt;
&lt;p&gt;And... if we're not coming to a city near you (this time), you can play along from home. There's a complete video recording of our &lt;a href="http://channel9.msdn.com/Events/Windows-Azure-DevCamps/WebCamp"&gt;Web Camp from Vancouver posted on Channel 9&lt;/a&gt;, and the &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=36393"&gt;Web Camps Training Kit&lt;/a&gt; includes all the decks and demos, plus 5 in-depth hands on labs.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fUuSM6iy1os:Ww46AoyngIg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fUuSM6iy1os:Ww46AoyngIg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=fUuSM6iy1os:Ww46AoyngIg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fUuSM6iy1os:Ww46AoyngIg:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fUuSM6iy1os:Ww46AoyngIg:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/fUuSM6iy1os" height="1" width="1" alt=""/&gt;</description><pubDate>Mon, 12 May 2014 23:21:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/upcoming-web-camps-summer-2014</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/lessons-learned-preparing-and-presenting-tech-training-events</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/SQVFuoV8fo4/lessons-learned-preparing-and-presenting-tech-training-events</link><title>Lessons Learned Preparing and Presenting Tech Training Events</title><description>&lt;p&gt;You've agreed to present a full day training event, and the day's approaching. What do you do?&lt;/p&gt;  &lt;p&gt;I'm not a training expert, but I've learned a few lessons on the job over the past few years that I think will help. I'd done some technical presentations over the years, but in the 4+ years I've been at Microsoft I've been doing quite a bit more. I've presented at dozens of Web Camp events (both one and two day) all over the world, been in charge of the Web Camps Training Kit for the past few years, helped plan and present two &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start"&gt;Microsoft Virtual Academy events&lt;/a&gt; (both full day, &lt;a href="http://channel9.msdn.com/Series/Building-Web-Apps-with-ASP-NET-Jump-Start"&gt;almost 400k online views for some of the sessions&lt;/a&gt;). I've also presented some smaller training workshops to some development teams at some large companies as they were looking at making some technology transitions.&lt;/p&gt;  &lt;p&gt;Most of these events went pretty well. Some of them, towards the beginning and despite my best efforts, did not go well. Here's what I've learned so far.&lt;/p&gt;  &lt;h2&gt;Different From One Hour Tech Presentation&lt;/h2&gt;  &lt;p&gt;I'm going to start with the planning stages in a second, but we need to get one thing out of the way first. A training event is significantly different from a one hour technical presentation. Many of the things are similar - you can start to get a handle on it by breaking an eight hour day into a series of eight one hour talks - but it's different enough that some things you can get away with for an hour won't work for eight, and vice versa.&lt;/p&gt;  &lt;p&gt;Just a few of the important differences:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Expectations for the balance training vs. entertaining are different. When people invest a day attending training, they have higher expectations of learning something, whereas some attendees of a one hour session - especially at a conference or code camp - are just &amp;quot;channel surfing&amp;quot; and have greater expectations for entertainment. On the other hand, it's perhaps more important to strategically entertain / engage during a full day of training to break it up. &lt;/li&gt;    &lt;li&gt;A full day of training is exhausting. I know an hour presentation seems tiring, but wait until you've done a full day. It's a marathon, not a sprint. &lt;/li&gt;    &lt;li&gt;Organization and timing are more important. You might be able to get away with rambling and poor time management for an hour, but it won't fly when you're doing multiple sessions. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Note: Keep in mind that this post is focused on presenting several consecutive hours of technical training. Many of the recommendations I'll give will also apply to your standard one hour technical presentation, but keep in mind that I'm not writing about How To Give A Technical Presentation. &lt;/p&gt;  &lt;h2&gt;Planning&lt;/h2&gt;  &lt;h3&gt;Ask Questions Early&lt;/h3&gt;  &lt;p&gt;If at possible, do a short pre-meeting before you get too much into planning. I generally hate meetings and avoid them when possible. This is a meeting you want to have. I get different answers in a meeting than I do in an e-mail thread. &lt;/p&gt;  &lt;p&gt;Find out the following:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Who will you be speaking to (numbers, skill level, etc.)? &lt;/li&gt;    &lt;li&gt;What do they want to get out of the day? &lt;/li&gt;    &lt;li&gt;Get a list of specific questions and topics that they want to learn about. &lt;/li&gt;    &lt;li&gt;What is the expected format? Is this presentation style (attendees passively watching speaker), workshop (attendees following along on laptops), a mix, or something else? &lt;/li&gt;    &lt;li&gt;Will the presentation be filmed? It usually can be if you ask early enough. &lt;/li&gt;    &lt;li&gt;What's the tech setup? What resolution will you be projecting at? What video connector? &lt;/li&gt; &lt;/ol&gt;  &lt;h3&gt;Some Anecdotes on Planning&lt;/h3&gt;  &lt;p&gt;&lt;strong&gt;Planning win:&lt;/strong&gt; A few years back I got a request for a day of advanced MVC training, but during a pre-meeting it came out that the team had no MVC experience and while they were experienced developers, what they needed was an introduction to MVC with a few additional, specific questions addressed at the end of the day after they were up to speed. &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Lesson: Ask questions before (or at the very least at the beginning of) the event to determine skill and experience level, don't assume.&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Planning fail:&lt;/strong&gt; Probably my worst presentation ever was an ASP.NET MVC bootcamp I presented at a conference. Having spent a portion of my youth in the military, I'd assumed that the participants at a bootcamp would show up expecting to do some work. In what kind of bizarro world do bootcamp attendees just kick back and watch a presentation? None, right? Right. &lt;/p&gt;  &lt;p&gt;So I prepared a long workshop style tutorial wherein I would guide attendees through building an application, completely revolving around them typing things into their laptops. I had a bunch of downloads prepared for them including checkpoints at the end of each section, etc. When I began the presentation, it quickly became apparent that none of my assumptions were correct. Many of the attendees didn't have laptops, many that did have laptops didn't have the development prerequisites, and everyone was expecting to watch me talk to them for half a day. It was horrible. Eventually I just had to give up on my plans, throw out my slides, and come up with something new on the fly. It wasn't good, but it was better than the train wreck my original lesson plan had become. Some left, some stuck around and I did my best to adapt, get those who wanted to follow along set up and speak to the rest of them. Years later, this still haunts me. I'm really sorry. &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Lesson: Ask an organizer to make sure you're clear on the format. If you expect people to participate, make sure that's clearly communicated to them before the event. Assume people will be participating as little as they can get away with unless.&lt;/strong&gt;&lt;/p&gt;  &lt;h2&gt;Get Another Presenter&lt;/h2&gt;  &lt;p&gt;Training is SO much easier if you have another presenter who can cover a few of your talks. You'll need breathers, and you'll appreciate time to review notes and set up your demos. Attendees will appreciate the break from watching one person all day, too.&lt;/p&gt;  &lt;p&gt;This goes double if you're travelling to another time zone. It's really hard to keep focused and energetic when you're jetlagged. Breaks are important, and you'll be kept busy during scheduled breaks.&lt;/p&gt;  &lt;h2&gt;Preparing The Lesson Plan&lt;/h2&gt;  &lt;h3&gt;What Matters: The End Result&lt;/h3&gt;  &lt;p&gt;Decide what you want them to get out of the day and let that drive your outline – not the feature list or demos you want to show off, etc. What will they remember a day after your talk? Focus on that.&lt;/p&gt;  &lt;p&gt;Expectations for the balance of training vs. entertaining are different compared to a one hour presentation. When people invest a day attending training, they have higher expectations of learning something, whereas some attendees of a one hour session - especially at a conference or code camp - are just &amp;quot;channel surfing&amp;quot; and have greater expectations for entertainment. On the other hand, it's perhaps more important to strategically entertain / engage during a full day of training to break it up.&lt;/p&gt;  &lt;p&gt;A lot of the value you're providing in a full day of training is in the higher level conceptual models and organization. You're not just working through the feature list, you're explaining why the features exist and how they work together.&lt;/p&gt;  &lt;h3&gt;Work From An Outline&lt;/h3&gt;  &lt;p&gt;As I mentioned earlier, an eight hour training course is just eight one hour presentations. It takes time an preparation, but you can do this. Let's look at an example breakdown an eight hour course on anything - could be on How To Make Ramen Burgers:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;&lt;strong&gt;Keynote&lt;/strong&gt;. You always need an introduction. Explain what you'll cover, set expectations, explain the high level roadmap for the day, cover prerequisites. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;The Tools&lt;/strong&gt; - Explain what you'll use, how it works, where you can learn more. (note: If you're thinking this doesn't apply, remember to adapt tools to the concept. e.g. for Node, this is stuff like NPM.) &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;The Concepts&lt;/strong&gt; - Now that we're familiar with the tools, let's build something simple and explain every concept, ever step of the way. Remind advanced folks that we're going to speed up in a bit. Let them feel superior for being so experienced (and stay awake) by asking questions. Key point: the experienced people are not your adversaries! They are your allies, and a huge asset in teaching the class. Include them, don't battle them. &lt;/li&gt;    &lt;li&gt;Deep Dive 1 &lt;/li&gt;    &lt;li&gt;Deep Dive 2 &lt;/li&gt;    &lt;li&gt;Deep Dive 3 &lt;/li&gt;    &lt;li&gt;Deep Dive 4 &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Wrap Up.&lt;/strong&gt; Summarize what was covered, encourage everyone with what they've learned, give resources for going further. This is important for two reasons. First, you want to tie things up conceptually so they don't just leave with &amp;quot;Whoa, that was a lot of stuff. What was the middle thing?&amp;quot; feeling. Second, you want to make sure they can take advantage of what you just taught them, and learn more or get help. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Yes, steps 4 - 7 are not filled in. &lt;/p&gt;  &lt;p&gt;&lt;a title="sidney-harris-cartoon-a-miracle-occurs-here[1]" href="http://www.flickr.com/photos/36836555@N00/13900085900/"&gt;&lt;img border="0" alt="sidney-harris-cartoon-a-miracle-occurs-here[1]" src="http://farm8.static.flickr.com/7061/13900085900_8cac31e8df_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;But already you're down from 8 hours to 4 hours, and that's quite something.&lt;/p&gt;  &lt;p&gt;Now, for steps 4 - 7, here's the idea. You are the expert. You've been asked to speak because you know something. You're really quite smart, and experienced. Right? If not, well... oh, dear, we should have covered that earlier. You'll really need to be somewhat experienced to do some training. If you're not, and you can't get out of this, hack like mad for a week or two to try to build some experience. Good luck!&lt;/p&gt;  &lt;p&gt;So, you're experienced. What would you tell a friend who wanted to learn about this concept? Can you break it into four big things they should know? Either four main concepts, or a four step process? Great. From there, it's just four one hour presentations.&lt;/p&gt;  &lt;p&gt;Here's what I currently cover at Web Camps:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Keynote &lt;/li&gt;    &lt;li&gt;Introduction to ASP.NET and Visual Studio 2013 Web Tooling &lt;em&gt;&amp;lt;-- The tools &lt;/em&gt;&lt;/li&gt;    &lt;li&gt;Building Web Applications using the latest ASP.NET technologies &lt;em&gt;&amp;lt;-- The concepts &lt;/em&gt;&lt;/li&gt;    &lt;li&gt;Building web front ends using the latest web standards &lt;em&gt;&amp;lt;-- Deep dive #1&lt;/em&gt; &lt;/li&gt;    &lt;li&gt;API Services for both web and devices &lt;em&gt;&amp;lt;-- Deep dive #2&lt;/em&gt; &lt;/li&gt;    &lt;li&gt;Running, improving and maintaining a site in the real world &lt;em&gt;&amp;lt;-- Deep dive #3&lt;/em&gt; &lt;/li&gt;    &lt;li&gt;Real-time Communications with SignalR &lt;em&gt;&amp;lt;-- Deep Dive #3 &lt;/em&gt;&lt;/li&gt;    &lt;li&gt;Wrap Up &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Presenting several presentations works best if there's a natural flow. In the above case, it's something like &lt;em&gt;Create -&amp;gt; Build -&amp;gt; Deploy&lt;/em&gt;. &lt;/p&gt;  &lt;p&gt;But be willing to make exceptions. For this example, you'll see there's one small thing that's out of order: Sessions 6 is post-deployment, and 7 is a dev topic. That is completely intentional, based on presenting this content a few times. &lt;a href="http://asp.net/signalr"&gt;SignalR&lt;/a&gt; is cool and exciting. It's a highlight, and it's fun to end on. Scaling and maintaining a site in production is really important, but it's hard work and requires more energy than most attendees will have at the end of the day. So I break my logical flow to put the hawt guitar solo at the end. And, honestly, to keep people from leaving after session 5, or at lunch time.&lt;/p&gt;  &lt;h3&gt;A Theme&lt;/h3&gt;  &lt;p&gt;You've been to technical training, right? It gets hard to keep perspective and focus after a few hours. One really useful way to simplify that is to have a common theme. For me, that's usually a common scenario: we're building a site that does X. It doesn't really matter what X is as long as it fits all of your scenarios and you can excited about it. Really, it should be something you can get excited about. Do you like golfing? Make a golf tracker site, not a Contoso Widget Inventory System. And definitely not a Foo app that tracks Bar and Baz instances.&lt;/p&gt;  &lt;ol&gt;&lt;!--EndFragment--&gt;&lt;/ol&gt;  &lt;h2&gt;Demos&lt;/h2&gt;  &lt;p&gt;Okay, let's start with the bad news:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;The only way to keep people awake and interested in a full day training course is with a lot of demos. &lt;/li&gt;    &lt;li&gt;It is exponentially harder to do a full day of demos than it is to do a single hour of demos. The hardest part is that you don't really get any set up time in between sessions, but even if you do it might get monopolized by someone with an obscure question who isn't thinking about the time it takes to set up demos for the next session. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;So, just plan to give 8 presentations without any time in between them. (Note: Remember that I said it's great to have another presenter? Yeah. Any time another presenter speaks, it resets your clock. Gold.)&lt;/p&gt;  &lt;h3&gt;Begin / End States&lt;/h3&gt;  &lt;p&gt;Okay, we've built up some stress. You have to give eight presentations, you can't count on having any prep time between them, and they have to be good. What can you do?&lt;/p&gt;  &lt;p&gt;Here's where prep can really help.&amp;#160; The idea is that, for each demo, you have a begin state (where the demo starts) and an end state (the way the demo should look when your demo is done). This really helps with your peace of mind: for every demo, you've got a set place to start and - more importantly - a working demo to fall back to in case everything goes wrong. Just like washing your car ensures it won't rain, having a working (and validated) end state for each demo does wonders for both the demo and your peace of mind. Trust me. And, if you get nervous (like me) it's so great knowing there's a working example of your demo app in case things just won't cooperate.&lt;/p&gt;  &lt;p&gt;You can do this using source control labels if those come naturally to you. For the Web Camps Training Kit, we just have subfolders with begin and end stats.&lt;/p&gt;  &lt;h3&gt;Strategic Typing&lt;/h3&gt;  &lt;p&gt;Think about what you'll be live coding. Does this add value? Does it teach people? Are you 100% certain you can pull it off without dealing with a&amp;#160; minor typo here or there? Hey, if you're a ninja coder, more power to you. Run that kata.&lt;/p&gt;  &lt;p&gt;For the rest of us, think of what you'll actually show, and what your attendees will profit from seeing. Forget about impressing them, focus on the actual value of having 100 or so people watch you type. As I've done this, I've moved to showing a lot of my demos as tours rather than &amp;quot;feats of strength&amp;quot; - here's what the code looks like, let's talk about it.&lt;/p&gt;  &lt;p&gt;I realize I'm not going to impress people with this technique, or get high speaker ratings, or any of that. I'm okay with it. I have a limited amount of time, I choose to focus it on making my viewers successful rather than trying to make me successful.&lt;/p&gt;  &lt;p&gt;But, recognize that just watching someone explain code can be boring, too. So I try to pick strategic bits and pieces. An easy way to interact with the code is to intentionally break it, or change output text.&lt;/p&gt;  &lt;h3&gt;Reset Scripts&lt;/h3&gt;  &lt;p&gt;Doubling back a bit here, but if you're going to give the same training several times, what do you do? The simplest solution is to have one source&amp;#160; of truth, and you copy from that into a presentation directory each time. That totally works. The important bit is not to present from the source directory.&lt;/p&gt;  &lt;p&gt;If you want to level-up a bit, you might want to write some scripts. The idea is to have three directories for each demo: Begin, Complete, and Initial. The idea is that your script copies your initial state directories over your presentation directory.&lt;/p&gt;  &lt;h3&gt;You Don't Have To Write Then All From Scratch&lt;/h3&gt;  &lt;p&gt;You don't necessarily have to write all of your own demos. More precisely, there's no perceived value to your students / attendees in presenting novel, amazing demos that don't actually accomplish something. Your demos should be optimized for the time and opportunity. Lately I've been building some simple code by hand, then showing a completed example someone else has published. I'll dig in to the code and show them how the exact concepts and code we used in the simple Hello World example work in a completed application.&lt;/p&gt;  &lt;p&gt;Ask around - Twitter, social networks, co-workers, etc. Often someone has a great demo already written, waiting for you to show it off. That lets you focus on the presentation, not building a new demo from scratch.&lt;/p&gt;  &lt;h2&gt;Presentation&lt;/h2&gt;  &lt;h3&gt;Managing expectations&lt;/h3&gt;  &lt;p&gt;Be really clear with expectations and roadmap throughout the day.&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Show the outline at the start of the day and set expectations on what you will and won’t be covering. &lt;/li&gt;    &lt;li&gt;Refer back to the outline regularly during the day – it doesn’t hurt to have a “you are here” at the start of each talk. It also cuts down on questions about things that will be covered in a later session. &lt;/li&gt;    &lt;li&gt;Wrap up at the end – helps people digest what they’ve learned (as explained earlier). &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Things make a lot more sense if you're providing the conceptual framework for attendees to file the content away.&lt;/p&gt;  &lt;h3&gt;Slides&lt;/h3&gt;  &lt;p&gt;There are different philosophies on using slides in presentations. For training, my opinion is that they can really help, and it's best to keep them pretty standard.&lt;/p&gt;  &lt;p&gt;Here's what I think the slides should do:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Make it easy to follow what you're talking about by showing structure, showing frequent &amp;quot;you are here&amp;quot; signposts, and giving plenty of context. &lt;/li&gt;    &lt;li&gt;Gives something for attendees to write down (or take pictures of). &lt;/li&gt;    &lt;li&gt;Give the speaker some cues. It's hard to remember where every single demo goes in a full day of training. Some Demo slides that just show the title of the feature or concept can cue you in so you're not wondering what's next or forgetting demos. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;The standard things apply - don't read slide after slide, don't make eye charts with tons of bullet points, etc. Use diagrams and pictures where possible. Use the slides to enhance the presentation, not as a crutch.&lt;/p&gt;  &lt;h2&gt;Rehearsal&lt;/h2&gt;  &lt;p&gt;It's time consuming, but it's important to take the time for a full rehearsal. If you're co-presenting, take turns presenting your sessions for the other speakers (screen sharing if you're remote). I know this is a big time investment and you won't want to do it - or you'll want to race through it - but this will really pay off.&lt;/p&gt;  &lt;p&gt;Two big things to pay attention to:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;&lt;strong&gt;Timing&lt;/strong&gt; - You know how it's tricky to nail timing a one hour talk? Multiply that by eight. You need to know which sessions are running long, which ones can be sped up if you're running late, etc. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Demo Transitions&lt;/strong&gt; - You'll want to make sure you're able to transition smoothly between slides and demos, that the demos actually work when you do them consecutively, etc. &lt;/li&gt; &lt;/ol&gt;  &lt;h2&gt;Cheat Sheet&lt;/h2&gt;  &lt;p&gt;As you're rehearsing, make notes on a one-page cheat sheet. Mine usually include reminders about important bits of code or steps for the demos, anything tricky about the demo reset steps or setup, and important points I miss in practicing. I keep mine with me when I speak, and the fact that I know it's sitting next to me means I rarely really need it. When you do need it, though, it saves your audience from watching you fumble around. And it's handy to glance at during travel, as well.&lt;/p&gt;  &lt;h2&gt;Tech Check&lt;/h2&gt;  &lt;p&gt;It's a good idea to get in to the place you'll be presenting early to make sure that your laptop works and check the resolution and font size are visible in the back seats. Attendees shouldn't have to suffer through any of that. If you absolutely can't schedule it, at least find out the tech specifics and make sure you've got whatever video adapters you'll need.&lt;/p&gt;  &lt;h2&gt;It's All About Preparation&lt;/h2&gt;  &lt;p&gt;You'll notice that pretty much all of the above covers how to prepare for the event itself. There are a few other small tips for during the event (e.g. have some energy bars or Five Hour Energy handy, ask questions at the beginning to verify attendee experience level), but if you've prepared correctly then most of the actual presentation is already done. &lt;a href="http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful"&gt;Just be the user interface for the content you've prepared. Disappear.&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=SQVFuoV8fo4:1vG3zscFthc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=SQVFuoV8fo4:1vG3zscFthc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=SQVFuoV8fo4:1vG3zscFthc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=SQVFuoV8fo4:1vG3zscFthc:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=SQVFuoV8fo4:1vG3zscFthc:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/SQVFuoV8fo4" height="1" width="1" alt=""/&gt;</description><pubDate>Mon, 05 May 2014 23:14:48 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/lessons-learned-preparing-and-presenting-tech-training-events</feedburner:origLink></item><item><guid isPermaLink="false">http://midnightprogrammer.net/post/Turn-Your-Google-Drive-Folder-In-An-Online-Album-Viewer/</guid><title>Turn Your Google Drive Folder In An Online Album Viewer</title><description>&lt;p&gt;Working with &lt;a href="https://developers.google.com/drive/" target="_blank"&gt;Google Drive API&lt;/a&gt; is fun. The documentation is good and will let you get started with the API pretty quickly. I have my whole complete family album on &lt;a href="http://onedrive.com" target="_blank"&gt;OneDrive&lt;/a&gt;, but the API is still a bit hard to use as compared to Google Drive API or maybe it is just for me. But while playing around with Drive API I ended up creating a small razor based web page application which will allow you to show your folder as an online web album. I have the &lt;a href="https://github.com/prashantkhandelwal/DriveGallery" target="_blank"&gt;source code at Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started register your application on the Google Developer Console. Here is a &lt;a href="https://developers.google.com/console/help/" target="_blank"&gt;complete guide&lt;/a&gt; on how to use the Google APIs.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\Register.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Copy the API keys and save it on the notepad. The basic usage example on the Google Drive API reference page uses a file called &lt;strong&gt;client_secrets.json&lt;/strong&gt; which actually holds the API key. You can find this file in the &lt;strong&gt;bin&lt;/strong&gt; folder.&lt;/p&gt;
&lt;pre&gt;{
&amp;nbsp; "installed": {
&amp;nbsp; &amp;nbsp; "client_id": "524339914714.apps.googleusercontent.com",
&amp;nbsp; &amp;nbsp; "client_secret": "_Lq8D_Ai-T2IbhU8m2zXlQa"
&amp;nbsp; }&amp;nbsp;
}&lt;/pre&gt;
&lt;p&gt;You also have to enable the Drive API before you start using it.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\EnableAPI.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;I created a wrapper around the Google Drive API so I can use it in my other projects. Here is the complete code of my GoogleDrive class.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;using System;
using System.Collections.Generic;
using System.Web;
using Google;
using Google.Apis.Auth.OAuth2;
using Google.Apis.Download;
using Google.Apis.Drive.v2;
using Google.Apis.Drive.v2.Data;
using Google.Apis.Logging;
using Google.Apis.Services;
using System.Threading.Tasks;
using System.Threading;
//using Google.Apis.Upload;

public class GoogleDrive
{
    DriveService service = null;
    public GoogleDrive()
    {
        Run().Wait();
    }


    private File GetFileByID(string fileID, DriveService service)
    {
        File file = service.Files.Get(fileID).Execute();
        if (file.ExplicitlyTrashed == null)
            return file;
        return null;
    }

    public string GetFolderID(string FolderName)
    {
        FilesResource.ListRequest request = service.Files.List();
        request.Q = "title = '" + FolderName + "'";
        FileList files = request.Execute();
        return files.Items[0].Id;
    }
    public List&amp;lt;File&amp;gt; ListFolderContent(string FolderID)
    {
        ChildrenResource.ListRequest request = service.Children.List(FolderID);
        List&amp;lt;File&amp;gt; files = new List&amp;lt;File&amp;gt;();
        //request.Q = "mimeType = 'image/jpeg'";

        request.Q = "'" + FolderID + "' in parents";

        do
        {
            try
            {
                ChildList children = request.Execute();

                foreach (ChildReference child in children.Items)
                {
                    files.Add(GetFileByID(child.Id, service));
                }

                request.PageToken = children.NextPageToken;

            }
            catch (Exception e)
            {
                request.PageToken = null;
            }
        } while (!String.IsNullOrEmpty(request.PageToken));
        return files;
    }

    public List&amp;lt;File&amp;gt; ListRootFileFolders()
    {
        List&amp;lt;File&amp;gt; result = new List&amp;lt;File&amp;gt;();
        FilesResource.ListRequest request = service.Files.List();
        do
        {
            try
            {
                FileList files = request.Execute();

                result.AddRange(files.Items);
                request.PageToken = files.NextPageToken;
            }
            catch (Exception e)
            {
                request.PageToken = null;
            }
        } while (!String.IsNullOrEmpty(request.PageToken));
        return result;
    }

    public byte[] DownloadFile(string fileID)
    {
        File file = service.Files.Get(fileID).Execute();
        var bytes = service.HttpClient.GetByteArrayAsync(file.DownloadUrl);
        return  bytes.Result;
    }


    private async Task Run()
    {
        try
        {
            GoogleWebAuthorizationBroker.Folder = "Files";
            UserCredential credential;
            using (var stream = new System.IO.FileStream("client_secrets.json",
                System.IO.FileMode.Open, System.IO.FileAccess.Read))
            {
                credential = await GoogleWebAuthorizationBroker.AuthorizeAsync(
                    GoogleClientSecrets.Load(stream).Secrets, DriveConstants.Scopes, "user", CancellationToken.None);
            }

            var drvService = new DriveService(new BaseClientService.Initializer()
            {
                HttpClientInitializer = credential,
                ApplicationName = "Drive API Sample",

            });

            if (drvService != null)
            {
                service = drvService;
            }
        }
        catch { }
    }
}&lt;/pre&gt;
&lt;p&gt;The &lt;strong&gt;Storage&lt;/strong&gt; class uses &lt;a href="https://github.com/robconery/biggy" target="_blank"&gt;Biggy&lt;/a&gt; for the document storage. You have to manually add the names of the folder (considered as albums) on &lt;strong&gt;settings&lt;/strong&gt; page. This will get added/appended in &lt;strong&gt;settings.json&lt;/strong&gt; file in the &lt;strong&gt;Data&lt;/strong&gt; folder which is in the web root of &lt;a href="https://github.com/prashantkhandelwal/DriveGallery" target="_blank"&gt;DriveGallery&lt;/a&gt;. Here is my settings file.&lt;/p&gt;
&lt;pre&gt;{"AlbumName":"Atlassian"}
{"AlbumName":"DivX"}
{"AlbumName":"Envato"}
{"AlbumName":"Disqus"}&lt;/pre&gt;
&lt;p&gt;Settings page from where I can add the names of folders/albums. No view and delete options as of now, but I will soon add it.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\Settings.PNG" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;The added albums will be listed on the main/default page.&amp;nbsp;The user will then have to click the name of the album to view the contents which should only images. At the moment there is no check which prevents it to show other files rather than only image files.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\MainView.PNG" alt="" width="750" /&gt;&lt;/p&gt;
&lt;p&gt;Google Drive is slow when it comes to handle high amount of data. Google Drive storage is not like Azure or Amazon storage. It&amp;rsquo;s different and will not get you large results in appropriate time. If you want to use Drive Gallery make sure that you don&amp;rsquo;t use more than 25-50 images in a folder. Querying 25-50 files in a single go will be long but not more than if you have more than 50. Better option is to break your folder in parts like volume I &amp;amp; II or Part 1 or 2.&lt;/p&gt;
&lt;p&gt;I will try to make it look more attractive but for the moment it solves the purpose for me. Click on the &lt;strong&gt;View&lt;/strong&gt; button to view the album. The &lt;strong&gt;View&lt;/strong&gt; page accepts a query string &lt;strong&gt;name&lt;/strong&gt;, which has the name of the folder/album. Google Drive API does not understand the name of the folder, so I have to get the folder id from the name. I will use the &lt;strong&gt;GetFolderID&lt;/strong&gt; method of the &lt;strong&gt;GoogleDrive&lt;/strong&gt; class which gives me the folder id. The received folder id is then passed to &lt;strong&gt;ListFolderContent&lt;/strong&gt; method which will list all the files in the folder.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Please note that, for the moment there is no check to retrieve only images from the folder. GoogleDrive.cs class is a generic version of the class I am using in my other projects. You just need to be sure that you have only images in the folder and not any other file.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="http://midnightprogrammer.net/image.axd?picture=2014\5\View.PNG" alt="" width="700" /&gt;&lt;/p&gt;
&lt;p&gt;Click the &lt;strong&gt;View&lt;/strong&gt; button to view the full size image in the browser else click the &lt;strong&gt;Download&lt;/strong&gt; button to download it directly. Basically Drive API does not have any property which holds the value of the URL to view the image online. So I tweaked the thumbnail URL in the ViewURL property so I can view the images online without having to download it.&lt;/p&gt;
&lt;pre class="brush: c-sharp;"&gt;public class Albums
{
    public string Id { get; set; }
    public string Title { get; set; }
    public string AlbumName { get; set; }
    public string DownloadURL { get; set; }
    public string ViewURL
    {
        get
        {
            return ThumbnailLink.Replace("=s220", "=s4000");
        }
    }
    public string ThumbnailLink { get; set; }
}
&lt;/pre&gt;
&lt;p&gt;Taking the &lt;strong&gt;ThumbnailLink&lt;/strong&gt; property and replace the &lt;strong&gt;=s220&lt;/strong&gt; to &lt;strong&gt;=s4000&lt;/strong&gt; does the trick.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: The URLs are not permanent, it will change when the request expires.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Properties of the Album class:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Id:&lt;/strong&gt; File/Image id.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tilte:&lt;/strong&gt; Title of the image/file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AlbumName:&lt;/strong&gt; Name of the album/folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DownloadURL:&lt;/strong&gt; Download URL of the image/file. Original Drive API property name:&amp;nbsp;&lt;strong&gt;DownloadUrl&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ViewURL:&lt;/strong&gt;&amp;nbsp;URL which allows user to view the image in the browser.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ThumbnailLink:&lt;/strong&gt; URL of the thumbnail image.&amp;nbsp;Original Drive API property name: &lt;strong&gt;ThumbnailLink&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The duration of the operation depends on the amount of images you have in your folder. The lesser the number of images the fast the query will get executed. Here just for fun I have used Biggy JSON store to save the content details of the folder. If you want to remove it from your implementation, please do so. You may have to change some functions in order to get all other things working fine.&lt;/p&gt;
&lt;p&gt;You can &lt;a href="https://github.com/prashantkhandelwal/DriveGallery" target="_blank"&gt;download the complete source code from Github&lt;/a&gt;. I am still working on it to make it more flexible and good looking. As I am not a designer and I seriously lack when it comes to web designs. Thanks to &lt;a href="http://getbootstrap.com/" target="_blank"&gt;Twitter bootstrap&lt;/a&gt; to make it look a bit good.&lt;/p&gt;</description><pubDate>Sun, 04 May 2014 15:09:16 Z</pubDate><a10:link href="http://midnightprogrammer.net/post/Turn-Your-Google-Drive-Folder-In-An-Online-Album-Viewer/" /><a10:updated>2014-05-04T14:58:24Z</a10:updated></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/catching-up-on-the-channel-9-event-videos-for-build-2014</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/qh4WnW8BtTQ/catching-up-on-the-channel-9-event-videos-for-build-2014</link><title>5 Tricks for catching up on the Channel 9 event videos for Build 2014</title><description>&lt;p&gt;Okay, you've had a week to digest all the video content from Build 2014? Done yet? Me, neither. Well, how about some tricks to make this easier?&lt;/p&gt;  &lt;p&gt;I'd written up a few tips and tricks for catching up on Channel 9 event videos back in 2011, this is an update circa 2014.&lt;/p&gt;  &lt;h2&gt;Trick 1: Subscribe and watch at high speed in VLC&lt;/h2&gt;  &lt;p&gt;There are a lot of sessions, and watching even at 10% faster makes a difference. I think you'll be surprised at how, with a little practice, you can keep cranking the speed up and absorb the content at 2x or even faster. Note: Every time I tell people about high speed playback, people assume it's going to make the speakers sound like chipmunks. &lt;strong&gt;All of the high speed playback options I'm going to show are pitch corrected, so they don't raise the speakers' voices.&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;If you don't have VLC installed, I highly recommend it. It's lightweight and has a minimal interface, but is packed with codecs and advanced features when you need them. You can install via &lt;a href="http://chocolatey.org/packages/vlc"&gt;Chocolatey&lt;/a&gt; (cinst vlc), directly from &lt;a href="http://www.videolan.org/"&gt;http://www.videolan.org/&lt;/a&gt;, or from &lt;a href="http://ninite.com"&gt;http://ninite.com&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Run VLC and pop into Playlist mode. You can do that from the View menu, hit Ctrl+L, or click on the Playlist icon at the bottom to do that.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.flickr.com/photos/36836555@N00/5642027358/"&gt;&lt;img border="0" alt="2011-04-21 16h47_08" src="http://static.flickr.com/5023/5642027358_7896ef1d7d.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;In the Playlist interface, expand the Internet group and click on + sign to the right of Podcasts.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_14h59_04" href="http://www.flickr.com/photos/36836555@N00/13881286755/"&gt;&lt;img border="0" alt="2014-04-15_14h59_04" src="http://farm3.static.flickr.com/2850/13881286755_14fdfda85b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;This brings up a prompt to enter the URL for the feed. Each Channel 9 event has a list of formats available under the &amp;quot;Subscribe to this event&amp;quot; link:&lt;/p&gt;  &lt;p&gt;&lt;a title="Channel 9 Event - RSS" href="http://www.flickr.com/photos/36836555@N00/13881210023/"&gt;&lt;img border="0" alt="Channel 9 Event - RSS" src="http://farm3.static.flickr.com/2835/13881210023_cdbd89f5f7.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;You have a few options (the types are obvious from the last bit of the URL):&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp4"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp4&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp4high"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp4high&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp3"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp3&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;You can enter the format of your choice here - in my case I'm going to pick the MP4 HD feed: &lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp4high"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp4high&lt;/a&gt;. However, note that the MP3 format is available. We'll get back to that later.&lt;/p&gt;  &lt;p&gt;That grabs the feed and builds a playlist for us, listing all the videos. &lt;/p&gt;  &lt;p&gt;Note: nothing's been downloaded at this point, it's just showing the list from the RSS feed.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h06_24" href="http://www.flickr.com/photos/36836555@N00/13881464363/"&gt;&lt;img border="0" alt="2014-04-15_15h06_24" src="http://farm8.static.flickr.com/7101/13881464363_47b464242b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Now I'll use the search section to filter on ASP.NET because I do love it so.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h16_09" href="http://www.flickr.com/photos/36836555@N00/13881632633/"&gt;&lt;img border="0" alt="2014-04-15_15h16_09" src="http://farm8.static.flickr.com/7333/13881632633_f760420689.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here's the key thing - when I double click the video to start streaming it, I'll switch to a faster speed. There are two ways to do that.&lt;/p&gt;  &lt;p&gt;The easy way is to use the Playback / Speed menu.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h19_24" href="http://www.flickr.com/photos/36836555@N00/13881625085/"&gt;&lt;img border="0" alt="2014-04-15_15h19_24" src="http://farm4.static.flickr.com/3692/13881625085_afc967b8cd.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Once you get hooked on this, though, you can use the [ and ] hotkeys (speed up and slow down respectively). Now I'm watching this demo at 2x speed. You might start with 1.5x or so and crank it up as you get more used to it.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h20_16" href="http://www.flickr.com/photos/36836555@N00/13881701123/"&gt;&lt;img border="0" alt="2014-04-15_15h20_16" src="http://farm3.static.flickr.com/2814/13881701123_731b575e74.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Trick 2: Use high speed playback in the Channel 9 player&lt;/h2&gt;  &lt;p&gt;HTML5 video players in all the new browsers support high speed playback. Here's an example showing the Day 1 Keynote on the Channel 9 site; I've right clicked the video to bring up the context menu and I'm about to kick it up to 2x.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h24_19" href="http://www.flickr.com/photos/36836555@N00/13881744765/"&gt;&lt;img border="0" alt="2014-04-15_15h24_19" src="http://farm4.static.flickr.com/3785/13881744765_0c604ba5fc_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;That's it! Easy!&lt;/p&gt;  &lt;h2&gt;Trick 3: Subscribe to the MP3 feed on Windows Phone 8.1&lt;/h2&gt;  &lt;p&gt;One of my favorite sleeper features in Windows Phone 8.1 is support for high speed playback in the new Podcasts app. For this one, I wanted to add the MP3 URL for just the Build 2014 event: &lt;a href="http://channel9.msdn.com/Events/Build/2014/RSS/mp3"&gt;http://channel9.msdn.com/Events/Build/2014/RSS/mp3&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;But that's a bit long to type on the phone, so I made a special short URL: &lt;a href="http://aka.ms/b14mp3"&gt;http://aka.ms/b14mp3&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Then in the Podcasts app, I chose add by URL:&lt;/p&gt;  &lt;p&gt;&lt;a title="wp_ss_20140415_0002" href="http://www.flickr.com/photos/36836555@N00/13882347204/"&gt;&lt;img border="0" alt="wp_ss_20140415_0002" src="http://farm3.static.flickr.com/2856/13882347204_259d718a1b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;That gave me a list of MP3's. In the podcast options, I can select to have it stream or download them. Now, once I started playing one, I clicked on the little 1.5x thing to the right of the video twice, toggling to 2x speed.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;a title="wp_ss_20140415_0001" href="http://www.flickr.com/photos/36836555@N00/13882347074/"&gt;&lt;img border="0" alt="wp_ss_20140415_0001" src="http://farm6.static.flickr.com/5275/13882347074_f3e87fac48.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Yee haw!!!&lt;/p&gt;  &lt;p&gt;Notes: &lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;David Tesar reminded me that the &lt;a href="http://www.windowsphone.com/en-us/store/app/moliplayer-pro/19ea6d3e-e3d9-401d-b30a-f6471811fe08"&gt;Moliplayer video player app&lt;/a&gt; for Windows Phone has variable speed playback.&lt;/li&gt;    &lt;li&gt;There are high speed playback options for other phones, too. On Android, the &lt;a href="https://play.google.com/store/apps/details?id=com.astroplayerkey"&gt;Astro Player app&lt;/a&gt; has great support for variable speed playback.&lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Trick 4: Downloading videos using a script&lt;/h2&gt;  &lt;p&gt;In the past, I've published some Powershell scripts for bulk downloading Channel 9 videos. Here' s one, updated for Build 2014. But don't run it just yet, because I think I've found a better options, which I'll show you next.&lt;/p&gt; &lt;script src="https://gist.github.com/jongalloway/935780.js"&gt;&lt;/script&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h2&gt;Trick 5: Downloading videos using a smarter script&lt;/h2&gt;  &lt;p&gt;That's fine, but it's kind of heavy handed. Let's be honest, have you actually watched all of the videos from an event before? It's more likely that you'll want to pick some based on the topic. I found a great site that builds customized feeds based on the session tags: &lt;a title="http://dayngo.com/channel9/Events/a99db53e-aa3d-4089-9859-a2fe017ca357/Build_2014" href="http://dayngo.com/channel9/Events/a99db53e-aa3d-4089-9859-a2fe017ca357/Build_2014"&gt;http://dayngo.com/channel9/Events/a99db53e-aa3d-4089-9859-a2fe017ca357/Build_2014&lt;/a&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;Disclaimer: This is some random site I found on the internet. Works on my machine. It does generate scripts, so you can see what it's doing.&lt;/p&gt;  &lt;p&gt;Here I've filtered to show events tagged with ASP.NET, Web API, and Node.js.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h54_54" href="http://www.flickr.com/photos/36836555@N00/13882221823/"&gt;&lt;img border="0" alt="2014-04-15_15h54_54" src="http://farm8.static.flickr.com/7413/13882221823_8165911af5_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Clicking the download button lets me select the formats I want to download.&lt;/p&gt;  &lt;p&gt;&lt;a title="2014-04-15_15h56_40" href="http://www.flickr.com/photos/36836555@N00/13882590544/"&gt;&lt;img border="0" alt="2014-04-15_15h56_40" src="http://farm3.static.flickr.com/2908/13882590544_d17f59b2ef_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;That generates a custom PowerShell script (WGET is also an option) with just the content I picked:&lt;/p&gt;  &lt;pre class="brush: ps; auto-links: false;"&gt;$overwrite = $false
$webClient = New-Object System.Net.WebClient 
$feeds =  ((&amp;quot;Take_Your_Solution_Worldwide_from_the_Start_with_Bing_Translator.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/2-656_LG.mp4&amp;quot;),(&amp;quot;Continuous_Delivery_and_Continuous_Integration_with_Visual_Studio_Online_and_Microsoft_Azure.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-584_LG.mp4&amp;quot;),(&amp;quot;What_s_New_for_ASP_NET_and_Web_in_Visual_Studio_2013_Update_2_and_Beyond.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-602_LG.mp4&amp;quot;),(&amp;quot;Building_Web_APIs_for_Mobile_Apps_Using_ASP_NET_Web_API_2_1.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-603_LG.mp4&amp;quot;),(&amp;quot;Deep_Dive_Improving_Performance_in_Your_ASP_NET_App.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-605_LG.mp4&amp;quot;),(&amp;quot;Powerful_Mobile_Apps_with_Mobile_Services_and_ASP_NET_Web_API.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-623_LG.mp4&amp;quot;),(&amp;quot;Using_Node_js_and_Python_in_Visual_Studio_and_on_Azure.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-631_LG.mp4&amp;quot;),(&amp;quot;Building_a_Single_Page_Application_with_ASP_NET_and_AngularJS.mp4&amp;quot;,&amp;quot;http://video.ch9.ms/sessions/build/2014/3-644_LG.mp4&amp;quot;))  
$entries = $feeds.Length
$progress = 0 
$pagepercent = 0 
$dir = get-location
foreach ($item in $feeds){
    $name,$link = $item
    $saveFileName = join-path $dir $name
    if ((-not $overwrite) -and (Test-Path -path $saveFileName))     
    {        
        write-progress -activity &amp;quot;$saveFileName already downloaded&amp;quot; -status &amp;quot;$pagepercent% ($progress / $entries) complete&amp;quot; -percentcomplete $pagepercent    
    }    
    else     
    {        
        write-progress -activity &amp;quot;Downloading $saveFileName&amp;quot; -status &amp;quot;$pagepercent% ($progress / $entries) complete&amp;quot; -percentcomplete $pagepercent       
        &amp;amp;{#TRY
            $webClient.DownloadFile($link, $saveFileName)
        }
        trap [Exception]{
            write-host
            write-host (&amp;quot;Unable to download &amp;quot; + $saveFileName)
            continue; 
        }
    }    
    $pagepercent = [Math]::floor((++$progress)/$entries*100) 
}&lt;/pre&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;p&gt;Hope these tips help. Get to work!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=qh4WnW8BtTQ:8vbISAoYlZg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=qh4WnW8BtTQ:8vbISAoYlZg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=qh4WnW8BtTQ:8vbISAoYlZg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=qh4WnW8BtTQ:8vbISAoYlZg:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=qh4WnW8BtTQ:8vbISAoYlZg:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/qh4WnW8BtTQ" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 15 Apr 2014 23:01:45 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/catching-up-on-the-channel-9-event-videos-for-build-2014</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/4LfGhFWEacg/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling</link><title>Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 4 - Web API Help Pages, BSON, and Global Error Handling</title><description>&lt;p&gt;This is part 4 of a series covering some of the new features in the ASP.NET MVC 5.1 and Web API 2.1 releases. The last one! If you've read them all, you have earned twelve blog readership points... after you finish this one, of course. Here are the previous posts:&lt;/p&gt;    &lt;ul&gt;    &lt;li&gt;Part 1: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;Part 2: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Attribute Routing with Custom Constraints&lt;/a&gt; &lt;/li&gt;  &lt;li&gt;Part 3: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/28/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements.aspx"&gt;Bootstrap and JavaScript enhancements&lt;/a&gt; &lt;/li&gt;  &lt;li&gt;Part 4: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/02/26/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling.aspx"&gt;Web API Help Pages, BSON, and Global Error Handling&lt;/a&gt;&lt;/li&gt;   &lt;/ul&gt;  &lt;p&gt;The sample project covering the posts in this series is &lt;a href="https://github.com/jongalloway/StarDotOne"&gt;here&lt;/a&gt;; other referenced samples are in the &lt;a href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt"&gt;ASP.NET sample repository&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;As a reminder, Part 1 explained that ASP.NET MVC 5.1 / Web API 2.1 is a NuGet update for the MVC 5 / Web API 2 releases that shipped with Visual Studio 2013. There will be a Visual Studio update that will make them the defaults when you create new projects.&lt;/p&gt;    &lt;p&gt;In this post, we'll look at new features in ASP.NET Web API 2.1.&lt;/p&gt;    &lt;h2&gt;Attribute Routing&lt;/h2&gt;   &lt;p&gt;We already looked at the updates to Attribute Routing improvements for both ASP.NET Web API and MVC in the second post in this series, I just want to call it out again since this post is overviewing all of the other new features in ASP.NET Web API 2.1 and the Attribute Routing support for custom constraints is one of the top features in the ASP.NET Web API 2.1 release.&lt;/p&gt;    &lt;p&gt;As a reminder, custom route constraints make it really easy to create wrap route matching logic in a constraint which can then be placed on ApiControllers or actions like this:&lt;/p&gt;    &lt;pre class="brush: csharp; auto-links: false; highlight: [1,7];"&gt;[VersionedRoute("api/Customer", 1)]
public class CustomerVersion1Controller : ApiController
{
    // controller code goes here
}
[VersionedRoute("api/Customer", 2)]
public class CustomerVersion2Controller : ApiController
{
    // controller code goes here
}&lt;/pre&gt;

&lt;p&gt;In that example, the custom VersionedRoute constraint looks for an api-version header and forwards the request to the correct controller. &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;See the post for more information&lt;/a&gt;, including a link to the sample application.&lt;/p&gt;

&lt;h2&gt;Help Page improvements&lt;/h2&gt;

&lt;p&gt;Okay, let's dig into some of the cool new features we haven't seen yet. To start with, I'm going to scaffold out a new PersonApiController using the same Person class I've used earlier in this series, shown below:&lt;/p&gt;

&lt;pre class="brush: js; auto-links: false;"&gt;public class Person
{
    [ScaffoldColumn(false)]
    public int Id { get; set; }
    [UIHint("Enum-radio")]
    public Salutation Salutation { get; set; }
    [Display(Name = "First Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
   public string FirstName { get; set; }
    [Display(Name = "Last Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
    public string LastName { get; set; }
    public int Age { get; set; }
}
//I guess technically these are called honorifics
public enum Salutation : byte
{
    [Display(Name = "Mr.")]   Mr,
    [Display(Name = "Mrs.")]  Mrs,
    [Display(Name = "Ms.")]   Ms,
    [Display(Name = "Dr.")]   Doctor,
    [Display(Name = "Prof.")] Professor,
    Sir, 
    Lady, 
    Lord
}&lt;/pre&gt;

&lt;p&gt;And we're using the standard Web API scaffolding:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-30_16h11_27" href="http://www.flickr.com/photos/36836555@N00/12228468183/" mce_href="http://www.flickr.com/photos/36836555@N00/12228468183/"&gt;&lt;img alt="2014-01-30_16h11_27" src="http://farm8.static.flickr.com/7343/12228468183_ff9c844c8e.jpg" border="0" mce_src="http://farm8.static.flickr.com/7343/12228468183_ff9c844c8e.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nothing has really changed for the top level ASP.NET Web API Help Page - you get a generated list of API calls for each API Controller.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-12_23h20_49" href="http://www.flickr.com/photos/36836555@N00/12495094414/" mce_href="http://www.flickr.com/photos/36836555@N00/12495094414/"&gt;&lt;img alt="2014-02-12_23h20_49" src="http://farm4.static.flickr.com/3711/12495094414_6afae7eb09.jpg" border="0" mce_src="http://farm4.static.flickr.com/3711/12495094414_6afae7eb09.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What has changed is what you see when you click through on one of the API calls, e.g. the PersonApi GET method. Here's how that looked in ASP.NET Web API 2.1:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_13h40_46" href="http://www.flickr.com/photos/36836555@N00/12598874764/" mce_href="http://www.flickr.com/photos/36836555@N00/12598874764/"&gt;&lt;img alt="2014-02-17_13h40_46" src="http://farm3.static.flickr.com/2817/12598874764_9baa1098f0_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2817/12598874764_9baa1098f0_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It shows sample data in JSON and XML, and you can kind of guess what they are if you've named your model properties well, but there's no information on type, model attributes, validation rules, etc.&lt;/p&gt;

&lt;p&gt;Here's how it looks in ASP.NET Web API 2:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_13h41_45" href="http://www.flickr.com/photos/36836555@N00/12598899184/" mce_href="http://www.flickr.com/photos/36836555@N00/12598899184/"&gt;&lt;img alt="2014-02-17_13h41_45" src="http://farm3.static.flickr.com/2860/12598899184_be54e7720a_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2860/12598899184_be54e7720a_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Response Formats section hasn't changed, but now we have a Resource Description area at the top. Let's take a closer look at that:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_13h53_18" href="http://www.flickr.com/photos/36836555@N00/12599121614/" mce_href="http://www.flickr.com/photos/36836555@N00/12599121614/"&gt;&lt;img alt="2014-02-17_13h53_18" src="http://farm4.static.flickr.com/3779/12599121614_b2cbe8590e_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3779/12599121614_b2cbe8590e_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we're clearly displaying both the type and validation rules.&lt;/p&gt;

&lt;p&gt;Note that the Salutation type is hyperlinked, since it's using our custom Salutation enum. Clicking through shows the possible values for that enum:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_13h47_37" href="http://www.flickr.com/photos/36836555@N00/12598689633/" mce_href="http://www.flickr.com/photos/36836555@N00/12598689633/"&gt;&lt;img alt="2014-02-17_13h47_37" src="http://farm4.static.flickr.com/3823/12598689633_aeeaff5074_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3823/12598689633_aeeaff5074_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;If you've done any work integrating with API's that had minimal or out of date documentation, hopefully the value of the above is really clear. What's great is that this is generated for me at runtime, so it's always up to date with the latest code. If my Web API is in production and I add a new Enum value or change a validation rule, the live documentation on the web site is immediately updated without any work or extra thought on my part as soon as I deploy the code.&lt;/b&gt;&lt;/p&gt;

&lt;h3&gt;Short detour: Filling in Descriptions using C# /// Comments&lt;/h3&gt;

&lt;p&gt;Now that we've got documentation for our model types, it's clear that we could improve it a bit. The most obvious thing is that there's no provided description. That's easy to add using C# /// comments (aka XML Comments). ASP.NET Web API Help Pages have had support for /// comments documentation for a while, it just hasn't been this obvious.&lt;/p&gt;

&lt;p&gt;The ASP.NET Web API Help Pages are implemented in a really clear, open model: it's all implemented in an ASP.NET MVC Area within your existing site. If you're not familiar with ASP.NET MVC Areas, they're a way to allow you to segment your applications into with separate routes, models, views and controllers but still keep them in the same project so it's easier to manage, share resources, etc.&lt;/p&gt;

&lt;p&gt;Here's the Help Page Area within the sample project we're working on:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_14h36_48" href="http://www.flickr.com/photos/36836555@N00/12599963954/" mce_href="http://www.flickr.com/photos/36836555@N00/12599963954/"&gt;&lt;img alt="2014-02-17_14h36_48" src="http://farm3.static.flickr.com/2863/12599963954_f08e78d026_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2863/12599963954_f08e78d026_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1. In the above screenshot, I've highlighted the \App_Start\HelpPageConfig.cs file because that's where we're going to set up the XML comments. There's a Register method right at the top with the following two lines:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;//// Uncomment the following to use the documentation from XML documentation file.
//config.SetDocumentationProvider(new XmlDocumentationProvider(HttpContext.Current.Server.MapPath("~/App_Data/XmlDocument.xml")));&lt;/pre&gt;

&lt;p&gt;So to use that, we'll uncomment the second line, just as the instructions say.&lt;/p&gt;

&lt;p&gt;2. Note that the comments are pointing to an XmlDocument.xml file. We need to check a box in the project settings to generate that XML file as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_14h46_38" href="http://www.flickr.com/photos/36836555@N00/12599717125/" mce_href="http://www.flickr.com/photos/36836555@N00/12599717125/"&gt;&lt;img alt="2014-02-17_14h46_38" src="http://farm6.static.flickr.com/5537/12599717125_e0e8763f1a_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5537/12599717125_e0e8763f1a_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it!&lt;/p&gt;

&lt;p&gt;Once that's done, I'm going to throw the /// comments on the controller methods and model properties and generate XML comments. I used &lt;a href="http://submain.com/products/ghostdoc.aspx" mce_href="http://submain.com/products/ghostdoc.aspx"&gt;GhostDoc&lt;/a&gt; to generate the comments, then cleaned them up and editorialized a bit.&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;/// &amp;lt;summary&amp;gt;
/// This is an example person class. It artisanally crafted by a
/// bearded, bespeckled craftsman after being lovingly sketched
/// in a leather bound notebook with charcoal pencils.
/// &amp;lt;/summary&amp;gt;
public class Person
{
    [ScaffoldColumn(false)]
    public int Id { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// This uses a custom salution enum since there's apparently no ISO standard.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;value&amp;gt;
    /// The person's requested salutation.
    /// &amp;lt;/value&amp;gt;
    [UIHint("Enum-radio")]
    public Salutation Salutation { get; set; }
    [Display(Name = "First Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
   public string FirstName { get; set; }
    [Display(Name = "Last Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
    public string LastName { get; set; }
    /// &amp;lt;summary&amp;gt;
    /// This is the person's actual or desired age.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;value&amp;gt;
    /// The age in years, represented in an integer.
    /// &amp;lt;/value&amp;gt;
    public int Age { get; set; }
}&lt;/pre&gt;

&lt;p&gt;And here's the updated help page with the descriptions:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_15h04_16" href="http://www.flickr.com/photos/36836555@N00/12600033795/" mce_href="http://www.flickr.com/photos/36836555@N00/12600033795/"&gt;&lt;img alt="2014-02-17_15h04_16" src="http://farm8.static.flickr.com/7302/12600033795_f95a2754d6_b.jpg" border="0" mce_src="http://farm8.static.flickr.com/7302/12600033795_f95a2754d6_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a ton of other features in the HelpPageConfig - you could pull your documentation from a database or CMS, for example. And since it's all implemented in standard ASP.NET MVC, you can modify the views or do whatever else you want. But it's nice to have these new features available out of the box.&lt;/p&gt;

&lt;h2&gt;BSON&lt;/h2&gt;

&lt;p&gt;BSON is a binary serialization format that's similar to JSON in that they both store name-value pairs, but it's quite different in how the data is actually stored. BSON serializes data in a binary format, which can offer some performance benefits for encode / decode / traversal.&amp;nbsp; It's been possible to hook up a custom BSON formatter in ASP.NET Web API before; &lt;a href="http://www.strathweb.com/2012/07/bson-binary-json-and-how-your-web-api-can-be-even-faster/" mce_href="http://www.strathweb.com/2012/07/bson-binary-json-and-how-your-web-api-can-be-even-faster/"&gt;Filip and others have written comprehensive blog posts describing how to do just that&lt;/a&gt;. It's even easier now - both for clients and servers - since the BSON formatter is included with ASP.NET Web API.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Important note:&lt;/b&gt; BSON isn't designed to be more compact than JSON, in fact it's often bigger (depending on your data structure and content). That's because, unlike JSON, BSON embeds type information in the document. That makes for fast scan and read, but it's holding more data than the equivalent JSON document. That means that it will be faster in some cases, but it may be slower in other cases if your messages are bigger. This shows the value of content negotiation and flexible formatters in ASP.NET Web API - you can easily try out different formatters, both on the client and server side, and use the best one for the job.&lt;/p&gt;

&lt;p&gt;I'll look at two examples here.&lt;/p&gt;

&lt;h3&gt;Testing BSON with a text-heavy model&lt;/h3&gt;

&lt;p&gt;For the first example, I'll use the Person class we've been using for our previous examples. I'd like to have a lot more people in my database. I grabbed some absolutely silly code I wrote 7 years ago that generates fake surnames (&lt;a href="http://weblogs.asp.net/jgalloway/archive/2007/01/12/code-puzzle-2-generate-random-fake-surnames-recap.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2007/01/12/code-puzzle-2-generate-random-fake-surnames-recap.aspx"&gt;Generate random fake surnames&lt;/a&gt;) and added a controller action to slam 500 new people with a first name of Bob but a random last name and age into the database. Then I clicked on it a few times.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-17_16h19_50" href="http://www.flickr.com/photos/36836555@N00/12601399413/" mce_href="http://www.flickr.com/photos/36836555@N00/12601399413/"&gt;&lt;img alt="2014-02-17_16h19_50" src="http://farm8.static.flickr.com/7445/12601399413_a3ff443d5d.jpg" border="0" mce_src="http://farm8.static.flickr.com/7445/12601399413_a3ff443d5d.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Turning on the BSON formatter is just a one line code change:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [5];"&gt;public static class WebApiConfig
{
    public static void Register(HttpConfiguration config)
    {
        config.Formatters.Add(new BsonMediaTypeFormatter());
        // ...
    }
}&lt;/pre&gt;

&lt;p&gt;Now whenever a client sends an Accept header for application/bson, they'll get the data in BSON format. For comparison, I'm making two requests in Fiddler. Here's a request with no Accept header specified, so we get JSON:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-18_00h48_12" href="http://www.flickr.com/photos/36836555@N00/12608617655/" mce_href="http://www.flickr.com/photos/36836555@N00/12608617655/"&gt;&lt;img alt="2014-02-18_00h48_12" src="http://farm3.static.flickr.com/2810/12608617655_5096fc8815_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2810/12608617655_5096fc8815_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The content-length there is 118,353 bytes.&lt;/p&gt;

&lt;p&gt;Now I'm setting an Accept header with application/bson:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-18_00h51_19" href="http://www.flickr.com/photos/36836555@N00/12609081114/" mce_href="http://www.flickr.com/photos/36836555@N00/12609081114/"&gt;&lt;img alt="2014-02-18_00h51_19" src="http://farm6.static.flickr.com/5472/12609081114_9d2b98729c_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5472/12609081114_9d2b98729c_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice that &lt;b&gt;this BSON request is 134,395 bytes, or 13% larger&lt;/b&gt;. I've marked some of the type identifiers in there, but you can see there are a lot more since they're lined up in columns.&lt;/p&gt;

&lt;p&gt;Place your bets: think the faster BSON serializer will be faster, despite the larger payload size? Before we answer that, we'll add in a second scenario that replaces our text-heavy Person class with a quite exciting BoringData class that's mostly numeric and binary data:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class BoringData
{
    public int Id { get; set; }
    public long DataLong { get; set; }
    public byte[] DataBytes { get; set; }
    public DateTime DataDate { get; set; }
}&lt;/pre&gt;

&lt;p&gt;And here's the test we'll throw at both of these:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;private HttpClient _client = new HttpClient();
static void Main(string[] args)
{
    try
    {
        Console.WriteLine("Hit ENTER to begin...");
        RunAsync().Wait();
    }
    finally
    {
        Console.WriteLine("Hit ENTER to exit...");
        Console.ReadLine();
    }
}
private async static Task RunAsync()
{
    using (HttpClient client = new HttpClient())
    {
        await RunTimedTest&amp;lt;BoringData&amp;gt;(client, new JsonMediaTypeFormatter(), "http://localhost:29108/api/BoringDataApi", "application/json");
        await RunTimedTest&amp;lt;BoringData&amp;gt;(client, new BsonMediaTypeFormatter(), "http://localhost:29108/api/BoringDataApi", "application/bson");
        await RunTimedTest&amp;lt;Person&amp;gt;(client, new JsonMediaTypeFormatter(), "http://localhost:29108/api/PersonApi", "application/json");
        await RunTimedTest&amp;lt;Person&amp;gt;(client, new BsonMediaTypeFormatter(), "http://localhost:29108/api/PersonApi", "application/bson");
    }
}
public static async Task RunTimedTest&amp;lt;T&amp;gt;(HttpClient _client, MediaTypeFormatter formatter, string Uri, string mediaHeader)
{
    int iterations = 500;
    _client.DefaultRequestHeaders.Accept.Clear();
    _client.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue(mediaHeader));
    MediaTypeFormatter[] formatters = new MediaTypeFormatter[] { formatter };
    var watch = Stopwatch.StartNew();
    for (int i = 0; i &amp;lt; iterations; i++)
    {
        var result = await _client.GetAsync(Uri);
        var value = await result.Content.ReadAsAsync&amp;lt;T[]&amp;gt;(formatters);
    }
    Console.WriteLine("Format: {0,-20} Type: {1,-15}\t Time (s):{2,10:ss\\.fff}", mediaHeader, typeof(T).Name, watch.Elapsed);
}&lt;/pre&gt;

&lt;p&gt;The BoringDataApi controller's GET method returns lots of data, as you'd expect:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class BoringDataApiController : ApiController
{
    static Random rng = new Random(Guid.NewGuid().GetHashCode());
    public IEnumerable&amp;lt;BoringData&amp;gt; GetBoringData()
    {
        return GetLotsOfBoringData(100);
    }
    private IEnumerable&amp;lt;BoringData&amp;gt; GetLotsOfBoringData(int quantity)
    {
        byte[] buf1 = new byte[10000];
        byte[] buf2 = new byte[64];

        for (int i = 1; i &amp;lt; quantity; i++)
        {
            rng.NextBytes(buf1);
            rng.NextBytes(buf2);
            yield return new BoringData
            {
                Id  = i,
                DataBytes = buf1,
                DataDate = DateTime.UtcNow,
                DataLong = BitConverter.ToInt64(buf2,0)
            };
        }
    }
}&lt;/pre&gt;

&lt;p&gt;So, big picture, the test harness will run 500 end to end tests on both controllers, requesting both Person and BoringData as both JSON and BSON. What we're &lt;b&gt;not comparing&lt;/b&gt; is the difference between the Person and BoringData responses, we're just looking for some general trends to see if BSON is faster than JSON for a mostly-textual and mostly-binary model. &lt;a href="http://kellabyte.com/2014/02/12/create-benchmarks-and-results-that-have-value/" mce_href="http://kellabyte.com/2014/02/12/create-benchmarks-and-results-that-have-value/"&gt;Yes, Kelly Sommers will beat me up for this, and I'm okay with that&lt;/a&gt;. My goal is to get some basic guidelines on when BSON works better than JSON. &lt;/p&gt;

&lt;p&gt;The real point here is that you won't know how your API or a specific content type will perform until you test it.&lt;/p&gt;

&lt;p&gt;So how'd we do?&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-02-18_17h13_33" href="http://www.flickr.com/photos/36836555@N00/12624517414/" mce_href="http://www.flickr.com/photos/36836555@N00/12624517414/"&gt;&lt;img alt="2014-02-18_17h13_33" src="http://farm6.static.flickr.com/5540/12624517414_10643b7003_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5540/12624517414_10643b7003_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this case (and I ran this test many times with the same general result) BSON was a lot faster for mostly binary/numeric data, and a little slower for mostly textual data. In this pretty random example, &lt;b&gt;BSON was 140% faster for the mostly binary case and and 21% slower for the mostly-textual case. &lt;/b&gt;That's because both serialize textual data to UTF-8, but BSON includes some additional metadata.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;So, very generally speaking, if your service returns a lot of binary / numeric / non-textual data, you should really look at BSON.&lt;/b&gt; If you're looking for a silver bullet, you may have to pony up for some silver.&lt;/p&gt;

&lt;h3&gt;Easier implementations due to BaseJsonMediaTypeFormatter&lt;/h3&gt;

&lt;p&gt;Yes, that's the most boring heading you'll ever see. But it's hopefully true. The new BaseJsonMediaTypeFormatter has been designed to make it easier to implement new different serialization formats easier, since the the internal JSON formatters have been redesigned to make it easier to extend. I asked Doug, the dev that did most of the work for this BSON update, about his &lt;a href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/8b1440decc8ccc5800be799925064d5bb1aca509" mce_href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/8b1440decc8ccc5800be799925064d5bb1aca509"&gt;commit message saying recent changes will make it easier to make other formatters like MessagePack happen&lt;/a&gt; and he said:&lt;/p&gt;

&lt;blockquote&gt;
  
&lt;p&gt;Yes.&amp;nbsp; BaseJsonMediaTypeFormatter introduces a few Json.Net types and concepts.&amp;nbsp; But it also provides solid and reusable async wrappers around easier-to-implement sync methods.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The main thing I've noticed there is the common BaseJsonMediaTypeFormatter. There's not a whole lot of code in the &lt;a href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/8b1440decc8ccc5800be799925064d5bb1aca509" mce_href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/8b1440decc8ccc5800be799925064d5bb1aca509"&gt;BsonMediaTypeFormatter&lt;/a&gt;, since a lot of it's in the common base and in other support classes.&lt;/p&gt;

&lt;p&gt;And while I'm mentioning &lt;a href="http://msgpack.org/" mce_href="http://msgpack.org/"&gt;MessagePack&lt;/a&gt;, I think it's another great option that's really worth looking at, since (unlike BSON) MessagePack is designed for small message size. There's a &lt;a href="https://github.com/WebApiContrib/WebAPIContrib" mce_href="https://github.com/WebApiContrib/WebAPIContrib"&gt;MsgPack formatter available now in the WebApiContrib formatters collection&lt;/a&gt;, and Filip Woj. wrote a nice blog post overview here: &lt;a href="http://www.strathweb.com/2012/09/boost-up-your-asp-net-web-api-with-messagepack/" mce_href="http://www.strathweb.com/2012/09/boost-up-your-asp-net-web-api-with-messagepack/"&gt;Boost up your ASP.NET Web API with MessagePack&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Global Error Handling&lt;/h2&gt;

&lt;p&gt;The last feature we'll look at is Global Error Handling. The name's pretty self-descriptive: it lets you register handlers and loggers which will respond to any unhandled exceptions across your entire Web API application.&lt;/p&gt;

&lt;p&gt;Global error handling is especially useful in Web API because of the way the parts are so loosely coupled and composable - you've got all kinds of different handlers and filters, wired together with a very configurable system that encourages dependency injection... There's a lot going on.&lt;/p&gt;

&lt;p&gt;&lt;a title="ASP.NET Web API Poster" href="http://www.asp.net/posters/web-api/ASP.NET-Web-API-Poster.pdf" mce_href="http://www.asp.net/posters/web-api/ASP.NET-Web-API-Poster.pdf"&gt;&lt;img alt="ASP.NET Web API Poster" src="http://farm4.static.flickr.com/3731/12758637613_45f521098d_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3731/12758637613_45f521098d_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: You can &lt;a href="http://www.asp.net/posters/web-api/ASP.NET-Web-API-Poster.pdf" mce_href="http://www.asp.net/posters/web-api/ASP.NET-Web-API-Poster.pdf"&gt;download the PDF of this poster from the ASP.NET site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That provides you tons of flexibility when you're building HTTP services, but it can make it hard to find out what's wrong when there's a problem. Exception filters help, but &lt;a href="http://aspnetwebstack.codeplex.com/wikipage?title=Global%20Error%20Handling" mce_href="http://aspnetwebstack.codeplex.com/wikipage?title=Global%20Error%20Handling"&gt;as David Matson notes&lt;/a&gt;, they don't handle:&lt;/p&gt;

&lt;ol&gt;
  
&lt;li&gt;Exceptions thrown from controller constructors &lt;/li&gt;

  
&lt;li&gt;Exceptions thrown from message handlers &lt;/li&gt;

  
&lt;li&gt;Exceptions thrown during routing &lt;/li&gt;

  
&lt;li&gt;Exceptions thrown during response content serialization &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I recommend David Matson's &lt;a href="http://aspnetwebstack.codeplex.com/wikipage?title=Global%20Error%20Handling" mce_href="http://aspnetwebstack.codeplex.com/wikipage?title=Global%20Error%20Handling"&gt;Web API Global Error Handling&lt;/a&gt; wiki article entry in the ASP.NET repository for more information on design and technical implementation. The short excerpt is that you can register one IExceptionHandler and multiple IExceptionLogger instances in your application, and they'll respond to all Web API exceptions.&lt;/p&gt;

&lt;p&gt;There's already &lt;a href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/Elmah/ReadMe.txt" mce_href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/Elmah/ReadMe.txt"&gt;a pretty clear sample in the Web API samples&lt;/a&gt; which shows a GenericTextExceptionHandler (which returns a generic exception message for unhandled exceptions) and an ElmahExceptionLogger (which implements logging using the popular ELMAH logging system). I've been trying to come up with some other use cases, but I think they captured the main ones here - usually if you have an unhandled exception, you want to log it and make sure you return some sort of useful message to your client. &lt;/p&gt;

&lt;p&gt;Both of these interfaces are really simple - they both have a single async method (LogAsync and HandleAsync, respectively) which are passed an ExceptionContext and a CancellationToken.&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public interface IExceptionLogger
{
    Task LogAsync(ExceptionLoggerContext context, CancellationToken cancellationToken);
}
public interface IExceptionHandler
{
    Task HandleAsync(ExceptionHandlerContext context, CancellationToken cancellationToken);
}&lt;/pre&gt;

&lt;p&gt;The ExceptionContext includes the exception as well as a lot of other useful context information:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;Exception (Exception) &lt;/li&gt;

  
&lt;li&gt;Request (HttpRequestMessage) &lt;/li&gt;

  
&lt;li&gt;RequestContext () &lt;/li&gt;

  
&lt;li&gt;ControllerContext (HttpControllerContext) &lt;/li&gt;

  
&lt;li&gt;ActionContext (HttpActionContext) &lt;/li&gt;

  
&lt;li&gt;Response (HttpResponseMessage) &lt;/li&gt;

  
&lt;li&gt;CatchBlock (string) &lt;/li&gt;

  
&lt;li&gt;IsTopLevelCatchBlock (bool) &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They're registered in your WebApiConfig like this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public static class WebApiConfig
{
    public static void Register(HttpConfiguration config)
    {
        config.MapHttpAttributeRoutes();
        // There can be multiple exception loggers. (By default, no exception loggers are registered.)
        config.Services.Add(typeof(IExceptionLogger), new ElmahExceptionLogger());
        // There must be exactly one exception handler. (There is a default one that may be replaced.)
        // To make this sample easier to run in a browser, replace the default exception handler with one that sends
        // back text/plain content for all errors.
        config.Services.Replace(typeof(IExceptionHandler), new GenericTextExceptionHandler());
    }
}&lt;/pre&gt;

&lt;p&gt;There are a few areas to possibly add to, but I'm going to pass on actually implementing them so I can get this series wrapped before ASP.NET Web API 2.2 ships. Maybe an exercise for the reader?&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;The sample GenericTextExceptionHandler just returns generic text, but since it has access to the exception details and the context, I'd perhaps instead return an error reference code with the response so customers of my API could use them for troubleshooting. Since one cause of API errors is an inability to access the backend database, I might instead &lt;a href="https://www.runscope.com/docs/api/resources/messages#message-create" mce_href="https://www.runscope.com/docs/api/resources/messages#message-create"&gt;send an error message to Runscope&lt;/a&gt; to give more context for debugging there as well. &lt;/li&gt;

  
&lt;li&gt;Rather than implement several IExceptionLogger instances, I'd probably use ELMAH's extensibility to register additional log listeners - there are listeners available for files and databases like &lt;a href="http://code.google.com/p/elmah/downloads/list" mce_href="http://code.google.com/p/elmah/downloads/list"&gt;XML, JSON, SQL Server, PostgreSQL, SQLite, MySQL&lt;/a&gt;, and lots of &lt;a href="https://www.nuget.org/packages?q=elmah&amp;amp;prerelease=&amp;amp;sortOrder=relevance" mce_href="https://www.nuget.org/packages?q=elmah&amp;amp;prerelease=&amp;amp;sortOrder=relevance"&gt;NuGet packages&lt;/a&gt; covering &lt;a href="https://www.nuget.org/packages/Glimpse.Elmah/" mce_href="https://www.nuget.org/packages/Glimpse.Elmah/"&gt;Glimpse integration&lt;/a&gt;, RavenDb, MongoDb, etc. One other idea is to &lt;a href="http://docs.exceptionless.com/contents/sendingerrors/" mce_href="http://docs.exceptionless.com/contents/sendingerrors/"&gt;add in an additional logger to an additional service like Exceptionless&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Damien (damienbod) has a nice overview of Web API Exception handling, complete with a lot of references: &lt;a href="http://damienbod.wordpress.com/2014/02/12/exploring-web-api-exception-handling/" mce_href="http://damienbod.wordpress.com/2014/02/12/exploring-web-api-exception-handling/"&gt;Exploring Web API Exception Handling&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;More features to read about&lt;/h2&gt;

&lt;p&gt;We've looked at several of the top features in this release, but there are a lot more. Here's a list with links to the documentation:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;ASP.NET MVC 5.1&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#AttributeRouting" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#AttributeRouting"&gt;Attribute routing improvements&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Bootstrap" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Bootstrap"&gt;Bootstrap support for editor templates&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Enum" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Enum"&gt;Enum support in views&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Unobtrusive" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Unobtrusive"&gt;Unobtrusive validation for MinLength/MaxLength Attributes&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#thisContext" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#thisContext"&gt;Supporting the ‘this’ context in Unobtrusive Ajax&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=MVC&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=MVC&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;ASP.NET Web API 2.1&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#global-error" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#global-error"&gt;Global error handling&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#attribute-routing" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#attribute-routing"&gt;Attribute routing improvements&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#help-page" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#help-page"&gt;Help Page improvements&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#ignoreroute" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#ignoreroute"&gt;IgnoreRoute support&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#bson" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#bson"&gt;BSON media-type formatter&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#async-filters" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#async-filters"&gt;Better support for async filters&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#query-parsing" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#query-parsing"&gt;Query parsing for the client formatting library&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20API|Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20API|Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;ASP.NET Web Pages 3.1&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20Pages%2FRazor&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20Pages%2FRazor&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you enjoyed the series. As a reminder, you can grab the source for my samples &lt;a href="https://github.com/jongalloway/StarDotOne" mce_href="https://github.com/jongalloway/StarDotOne"&gt;here&lt;/a&gt; and the official ASP.NET / Web API samples in the &lt;a href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt" mce_href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt"&gt;ASP.NET sample repository&lt;/a&gt;.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=4LfGhFWEacg:-rfz58149Q0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=4LfGhFWEacg:-rfz58149Q0:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=4LfGhFWEacg:-rfz58149Q0:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=4LfGhFWEacg:-rfz58149Q0:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=4LfGhFWEacg:-rfz58149Q0:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/4LfGhFWEacg" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 26 Feb 2014 19:51:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/Ebmhl2CUJF4/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements</link><category>ASP.NET</category><category>ASP.NET MVC</category><title>Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 3 - Bootstrap and JavaScript enhancements</title><description>&lt;p&gt;This is part 3 of a 4 part series covering some of the new features in the ASP.NET MVC 5.1 and Web API 2.1 releases.&lt;/p&gt;
  
&lt;ul&gt;   
&lt;li&gt;Part 1: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt; &lt;/li&gt;
    
&lt;li&gt;Part 2: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Attribute Routing with Custom Constraints&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 3: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/28/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements.aspx"&gt;Bootstrap and JavaScript enhancements&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 4: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/02/26/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling.aspx"&gt;Web API Help Pages, BSON, and Global Error Handling&lt;/a&gt;&lt;/li&gt;

 &lt;/ul&gt;
  
&lt;p&gt;In this post, we'll be focusing on some client-side improvements to ASP.NET MVC 5.1.&lt;/p&gt;
  
&lt;p&gt;As a reminder if you haven't read the first post, these updates are currently delivered via a NuGet update to your existing ASP.NET MVC 5 / Web API 2 applications. They'll be part of the File / New Project templates included in an upcoming Visual Studio update.&lt;/p&gt;
  &lt;h2&gt;EditorFor now supports passing HTML attributes - Great for Bootstrap&lt;/h2&gt;  
&lt;p&gt;The new ASP.NET project templates all include Bootstrap themes. Bootstrap uses custom class names for everything - styling, components, layout, behavior. That made it frustrating that you couldn't pass classes down to the Html.EditorFor HTML helper: you either had to use specific HTML Helpers like Html.TextBoxFor (which do allow you to pass HTML attributes, but don't benefit from some of the other nice features in HTML.EditorFor, like Data Attribute support for display and input validation) or give up on using the Bootstrap classes and style things yourself.&lt;/p&gt;
  
&lt;p&gt;In the 5.1 release, you can now pass HTML attributes as an additional parameter to Html.EditorFor, allowing you to get the best of both. Here's an example of why that's useful.&lt;/p&gt;
  
&lt;p&gt;In the first post in the series, we scaffolded a simple create controller and associated views. The Create view ended up looking like this:&lt;/p&gt;
  
&lt;p&gt;&lt;a title="2014-01-28_10h51_55" href="http://www.flickr.com/photos/36836555@N00/12193032655/" mce_href="http://www.flickr.com/photos/36836555@N00/12193032655/"&gt;&lt;img alt="2014-01-28_10h51_55" src="http://farm3.static.flickr.com/2890/12193032655_8a37eaee04_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2890/12193032655_8a37eaee04_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
  
&lt;p&gt;That's okay, but it's not taking advantage of any of the Bootstrap form styling (e.g. focus indication, element sizing, groups, etc.) and it won't do anything special with custom Bootstrap themes. A great start would be just to add the "form-control" class to the form elements. That just involves changing from this:&lt;/p&gt;
  
&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EditorFor(model =&amp;gt; model.FirstName)&lt;/pre&gt;

&lt;p&gt;to this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EditorFor(model =&amp;gt; model.FirstName, new { htmlAttributes = new { @class = "form-control" }, })&lt;/pre&gt;

&lt;p&gt;When I make that update to the textboxes, I get this view:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-28_00h51_07" href="http://www.flickr.com/photos/36836555@N00/12186423094/" mce_href="http://www.flickr.com/photos/36836555@N00/12186423094/"&gt;&lt;img alt="2014-01-28_00h51_07" src="http://farm3.static.flickr.com/2850/12186423094_8976fc8c40_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2850/12186423094_8976fc8c40_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll notice some subtle improvements, like the focus highlight on the FirstName field, nicer textbox size and validation layout for Age, etc. These are just really simple things with a&amp;nbsp; very basic model, but they give a quick idea of the improvement here.&lt;/p&gt;

&lt;p&gt;Also nice is that I can pass the attributes on Html.EditorFor when displaying the entire model. Here I've updated the entire form section to just use one EditorFor call, passing in the model:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [10];"&gt;@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    &amp;lt;div class="form-horizontal"&amp;gt;
        &amp;lt;h4&amp;gt;Person&amp;lt;/h4&amp;gt;
        &amp;lt;hr /&amp;gt;
        @Html.ValidationSummary(true)
        @Html.EditorFor(model =&amp;gt; model, new { htmlAttributes = new { @class = "form-control" }, })
        &amp;lt;div class="form-group"&amp;gt;
            &amp;lt;div class="col-md-offset-2 col-md-10"&amp;gt;
                &amp;lt;input type="submit" value="Create" class="btn btn-default" /&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
}&lt;/pre&gt;

&lt;p&gt;Note that to make sure the Id property didn't display and to use the custom radio enum display template (as explained in the first post in the series), I added two annotations to my model. Here's how the model and associated Enum look:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [3,5];"&gt;public class Person
{
    [ScaffoldColumn(false)]
    public int Id { get; set; }
    [UIHint("Enum-radio")]
    public Salutation Salutation { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public int Age { get; set; }
}
//I guess technically these are called honorifics
public enum Salutation : byte
{
    [Display(Name = "Mr.")]   Mr,
    [Display(Name = "Mrs.")]  Mrs,
    [Display(Name = "Ms.")]   Ms,
    [Display(Name = "Dr.")]   Doctor,
    [Display(Name = "Prof.")] Professor,
    Sir, 
    Lady, 
    Lord
}&lt;/pre&gt;

&lt;p&gt;That gives me the exact same output as shown above (the second, nicer screenshot). What's cool there is that the EditorFor method passed that form-control class to each element in the form, so each input tag got the form-control class. That means that I could apply additional Bootstrap classes, as well as my own custom classes, in that same call:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;        @Html.EditorFor(model =&amp;gt; model, new { htmlAttributes = new { @class = "form-control input-sm my-custom-class" }, })&lt;/pre&gt;

&lt;p&gt;You can see the &lt;a href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/f5a8ab8dd751b6d046f55dfdf0138bda202bcdbf" mce_href="https://aspnetwebstack.codeplex.com/SourceControl/changeset/f5a8ab8dd751b6d046f55dfdf0138bda202bcdbf"&gt;code changes and associated tests for this EditorFor change on this commit on CodePlex&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Client-side validation for MinLength and MaxLength&lt;/h2&gt;

&lt;p&gt;This is a pretty straightforward one: we had client-side validation for StringLength before, but not for MinLength and MaxLength. Personally, I feel like it's a tossup on which to use - StringLength lets you set both min and max and is more widely supported, but MinLength and MaxLength allow you to specify them separately and give different validation messages for each. Regardless, the good news is that whichever you use, they're both supported on both server and client.&lt;/p&gt;

&lt;p&gt;To test that out, we'll add some MinLength and MaxLength attributes to our Person class.&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [8,9,12,13];"&gt;public class Person
{
    [ScaffoldColumn(false)]
    public int Id { get; set; }
    [UIHint("Enum-radio")]
    public Salutation Salutation { get; set; }
    [Display(Name = "First Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
    public string FirstName { get; set; }
    [Display(Name = "Last Name")]
    [MinLength(3, ErrorMessage = "Your {0} must be at least {1} characters long")]
    [MaxLength(100, ErrorMessage = "Your {0} must be no more than {1} characters")]
    public string LastName { get; set; }
    public int Age { get; set; }
}&lt;/pre&gt;

&lt;p&gt;I get immediate feedback on what the website thinks of a potential stage name I've been considering:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-28_14h45_16" href="http://www.flickr.com/photos/36836555@N00/12196896086/" mce_href="http://www.flickr.com/photos/36836555@N00/12196896086/"&gt;&lt;img alt="2014-01-28_14h45_16" src="http://farm8.static.flickr.com/7443/12196896086_9043699fb8_b.jpg" border="0" mce_src="http://farm8.static.flickr.com/7443/12196896086_9043699fb8_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's the &lt;a href="http://aspnetwebstack.codeplex.com/workitem/1476" mce_href="http://aspnetwebstack.codeplex.com/workitem/1476"&gt;link to the work item&lt;/a&gt;, and here's &lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/1eb13543f730431a2f20abe64bb8ff5df76d5941" mce_href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/1eb13543f730431a2f20abe64bb8ff5df76d5941"&gt;the code diff for the commit&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Three small but useful fixes to Unobtrusive Ajax&lt;/h2&gt;

&lt;p&gt;There are a &lt;a href="http://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=ajax&amp;amp;status=Resolved&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=Votes&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=All" mce_href="http://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=ajax&amp;amp;status=Resolved&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=All&amp;amp;sortField=Votes&amp;amp;sortDirection=Descending&amp;amp;page=0&amp;amp;reasonClosed=All"&gt;few fixes to Unobtrusive Ajax&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;&lt;a href="http://aspnetwebstack.codeplex.com/workitem/1487" mce_href="http://aspnetwebstack.codeplex.com/workitem/1487"&gt;Support "this" context for ajax actions/forms&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://aspnetwebstack.codeplex.com/workitem/238" mce_href="http://aspnetwebstack.codeplex.com/workitem/238"&gt;Unobtrusive.Ajax interferes with the cancel convention on validation&lt;/a&gt; &lt;/li&gt;

  
&lt;li&gt;&lt;a href="http://aspnetwebstack.codeplex.com/workitem/1520" mce_href="http://aspnetwebstack.codeplex.com/workitem/1520"&gt;ASP.NET MVC 3 LoadingElementDuration is not working&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I thought the first fix was pretty interesting: a &lt;a href="http://stackoverflow.com/questions/6630189/how-to-use-this-inside-mvc3-ajax-actionlink-onbegin-oncomplete-events/14611314#14611314" mce_href="http://stackoverflow.com/questions/6630189/how-to-use-this-inside-mvc3-ajax-actionlink-onbegin-oncomplete-events/14611314#14611314"&gt;question came up on StackOverflow&lt;/a&gt;, someone posted &lt;a href="http://aspnetwebstack.codeplex.com/workitem/1487" mce_href="http://aspnetwebstack.codeplex.com/workitem/1487"&gt;a suggested one line fix on a CodePlex issue&lt;/a&gt;, and it got &lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/8a2c969ab6b41591e6a7194028b5b37a562c855a" mce_href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/8a2c969ab6b41591e6a7194028b5b37a562c855a"&gt;fixed in this commit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This issue allows callbacks from Unobtrusive Ajax to have access to the initiating element.&amp;nbsp; That's pretty handy when you've got multiple potential callers, e.g. a list of items which contain Ajax.ActionLink calls. In the past, I've had to write &lt;a href="http://www.asp.net/mvc/tutorials/mvc-music-store/mvc-music-store-part-8" mce_href="http://www.asp.net/mvc/tutorials/mvc-music-store/mvc-music-store-part-8"&gt;unnecessarily complicated JavaScript to wire things up manually&lt;/a&gt; because I couldn't take advantage of the OnBegin, OnComplete, OnFailure and OnSuccess options, e.g.&lt;/p&gt;

&lt;pre class="brush: js; auto-links: false;"&gt;&amp;lt;script type="text/javascript"&amp;gt;
    $(function () {
        // Document.ready -&amp;gt; link up remove event handler
        $(".RemoveLink").click(function () {
            // Get the id from the link
            var recordToDelete = $(this).attr("data-id");
            if (recordToDelete != '') {
                // Perform the ajax post
                $.post("/ShoppingCart/RemoveFromCart", {"id": recordToDelete },
                    function (data) {
                        // Successful requests get here
                        // Update the page elements
                        if (data.ItemCount == 0) {
                            $('#row-' + data.DeleteId).fadeOut('slow');
                        } else {
                            $('#item-count-' + data.DeleteId).text(data.ItemCount);
                        }
                        $('#cart-total').text(data.CartTotal);
                        $('#update-message').text(data.Message);
                        $('#cart-status').text('Cart (' + data.CartCount + ')');
                    });
            }
        });
    });
&amp;lt;/script&amp;gt;&lt;/pre&gt;

&lt;p&gt;Now with this change, I'd have the option of wiring up the Ajax call and success callbacks separately and tersely, since they'd have access to the calling element for the ID.&lt;/p&gt;

&lt;p&gt;That's it for this post, in the next (and definitely last) post of this series I'll look at some ASP.NET Web API 2.1 improvements.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=Ebmhl2CUJF4:_xuZ-vfgobM:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=Ebmhl2CUJF4:_xuZ-vfgobM:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=Ebmhl2CUJF4:_xuZ-vfgobM:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=Ebmhl2CUJF4:_xuZ-vfgobM:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=Ebmhl2CUJF4:_xuZ-vfgobM:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/Ebmhl2CUJF4" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 28 Jan 2014 23:17:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/LUB2e8fTiAw/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints</link><title>Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 2 - Attribute Routing with Custom Constraints</title><description>&lt;p&gt;I'm continuing a series looking at some of the new features in ASP.NET MVC 5.1 and Web API 2.1. Part 1 (&lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt;) explained how to update your NuGet packages in an ASP.NET MVC application, so I won't rehash that here.&lt;/p&gt;

&lt;ul&gt;   
&lt;li&gt;Part 1: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt; &lt;/li&gt;
    
&lt;li&gt;Part 2: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Attribute Routing with Custom Constraints&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 3: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/28/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements.aspx"&gt;Bootstrap and JavaScript enhancements&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 4: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/02/26/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling.aspx"&gt;Web API Help Pages, BSON, and Global Error Handling&lt;/a&gt;&lt;/li&gt;

 &lt;/ul&gt;

&lt;p&gt;The sample project covering the posts in this series is &lt;a href="https://github.com/jongalloway/StarDotOne"&gt;here&lt;/a&gt;; other referenced samples are in the &lt;a href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt"&gt;ASP.NET sample repository&lt;/a&gt;.&lt;/p&gt;
  
&lt;p&gt;In this post, we'll look at improvements to attribute routing for both ASP.NET MVC and ASP.NET Web API. First, a quick review of what routing constraints are used for.&lt;/p&gt;
  &lt;h2&gt;Intro to Routing Constraints&lt;/h2&gt;  
&lt;p&gt;ASP.NET MVC and Web API have both offered both simple and custom route constraints since they first came out. A simple constraint would be something like this:&lt;/p&gt;
  
&lt;pre class="brush: csharp; auto-links: false; highlight: [3];"&gt;routes.MapRoute("blog", "{year}/{month}/{day}",
    new { controller = "blog", action = "index" },
    new { year = @"\d{4}", month = @"\d{2}", day = @"\d{2}" });&lt;/pre&gt;

&lt;p&gt;In the above case, "/2014/01/01" would match but "/does/this/work" would not since the values don't match the required pattern.&amp;nbsp; If you needed something more complex than a simple pattern match, you'd use a custom constraint by implementing IRouteConstraint and defining the custom logic in the Match method - if it returns true, the route is a match.&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public interface IRouteConstraint
{
    bool Match(HttpContextBase httpContext, Route route, string parameterName, RouteValueDictionary values, RouteDirection routeDirection);
}&lt;/pre&gt;
&lt;h2&gt;Route Constraints in Attribute Routing&lt;/h2&gt;

&lt;p&gt;One of the top new features in ASP.NET MVC 5 and Web API 2 was the addition of Attribute Routing. Rather than defining all your routes in /App_Start/RouteConfig.cs using a series of routes.MapRoute() calls, you can define routes using attributes on your controller actions and controller classes. You can take your pick of whichever works better to you: continue to use traditional routing, use attribute routing instead, or use them both.&lt;/p&gt;

&lt;p&gt;Attribute routing previously offered custom inline constraints, like this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;[Route("temp/{scale:values(celsius|fahrenheit)}")]&lt;/pre&gt;

&lt;p&gt;Here, the scale segment has a custom inline Values constraint which will only match if the the scale value is in the pipe-delimited list, e.g. this will match temp/celsius and /temp/fahrenheit but not /temp/foo. You can read more about the Attribute Routing features that shipped with ASP.NET MVC 5, including inline constraints like the above, on this post by Ken Egozi: &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/10/17/attribute-routing-in-asp-net-mvc-5.aspx" mce_href="http://blogs.msdn.com/b/webdev/archive/2013/10/17/attribute-routing-in-asp-net-mvc-5.aspx"&gt;Attribute Routing in ASP.NET MVC 5&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;While inline constraints allow you to restrict values for a particular segment, they're both a little limited (e.g. they can't operate over the entire URL, and some more complex thing that aren't possible at that scope). To see more about what changed and why, see the &lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/f291ab8258da6536eb74930222a9a73989128b3b" mce_href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/f291ab8258da6536eb74930222a9a73989128b3b"&gt;issue report&lt;/a&gt; and &lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/f291ab8258da6536eb74930222a9a73989128b3b" mce_href="http://aspnetwebstack.codeplex.com/SourceControl/changeset/f291ab8258da6536eb74930222a9a73989128b3b"&gt;changed code for this commit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now with ASP.NET MVC 5.1, we can create a new attribute that implements a custom route constraint. Here's an example.&lt;/p&gt;

&lt;h2&gt;ASP.NET MVC 5.1 Example: Adding a custom LocaleRoute&lt;/h2&gt;

&lt;p&gt;Here's a simple custom route attribute that matches based on a list of supported locales.&lt;/p&gt;

&lt;p&gt;First, we'll create a custom LocaleRouteConstraint that implements IRouteConstraint:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class LocaleRouteConstraint : IRouteConstraint
{
	public string Locale { get; private set; }
	public LocaleRouteConstraint(string locale)
	{
		Locale = locale;
	}
	public bool Match(HttpContextBase httpContext, Route route, string parameterName, RouteValueDictionary values, RouteDirection routeDirection)
	{
		object value;
		if (values.TryGetValue("locale", out value) &amp;amp;&amp;amp; !string.IsNullOrWhiteSpace(value as string))
		{
			string locale = value as string;
			if (isValid(locale))
			{
				return string.Equals(Locale, locale, StringComparison.OrdinalIgnoreCase);
			}
		}
		return false;
	}
	private bool isValid(string locale)
	{
		string[] validOptions = "EN-US|EN-GB|FR-FR".Split('|') ;
		return validOptions.Contains(locale.ToUpper());
	}
}&lt;/pre&gt;

&lt;p&gt;IRouteConstraint has one method, Match. That's where you write your custom logic which determines if a set of incoming route values, context, etc., match your custom route. If you return true, routes with this constraint are eligible to respond to the request; if you return false the request will not be mapped to routes with this constraint.&lt;/p&gt;

&lt;p&gt;In this case, we've got a simple isValid matcher which takes a locale string (e.g. fr-fr) and validates it against a list of supported locales. In more advanced use, this may be querying against a database backed cache of locales your site supports or using some other more advanced method. If you are working with a more advanced constraint, especially a locale constraint, I recommend Ben Foster's article &lt;a title="http://ben.onfabrik.com/posts/improving-aspnet-mvc-routing-configuration" href="http://ben.onfabrik.com/posts/improving-aspnet-mvc-routing-configuration" mce_href="http://ben.onfabrik.com/posts/improving-aspnet-mvc-routing-configuration"&gt;Improving ASP.NET MVC Routing Configuration&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;It's important to see that the real value in this case is running more advanced logic than a simple pattern match - if that's all you're doing, you could use a regex inline route constraint (e.g. {x:regex(^\d{3}-\d{3}-\d{4}$)}).&lt;/p&gt;

&lt;p&gt;Now we've got a constraint, but we need to map it to an attribute to use in attribute routing. Note that separating constraints from attributes gives a lot more flexibility - for instance, we could use this constraint on multiple attributes.&lt;/p&gt;

&lt;p&gt;Here's a simple one:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class LocaleRouteAttribute : RouteFactoryAttribute
{
	public LocaleRouteAttribute(string template, string locale)
		: base(template)
	{
		Locale = locale;
	}
	public string Locale
	{
		get;
		private set;
	}
	public override RouteValueDictionary Constraints
	{
		get
		{
			var constraints = new RouteValueDictionary();
			constraints.Add("locale", new LocaleRouteConstraint(Locale));
			return constraints;
		}
	}
	public override RouteValueDictionary Defaults
	{
		get
		{
			var defaults = new RouteValueDictionary();
			defaults.Add("locale", "en-us");
			return defaults;
		}
	}
}&lt;/pre&gt;

&lt;p&gt;Now we've got a complete route attribute we can place on a controller or action:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [5];"&gt;using System.Web.Mvc;
namespace StarDotOne.Controllers
{
    [LocaleRoute("hello/{locale}/{action=Index}", "EN-GB")]
    public class ENGBHomeController : Controller
    {
        // GET: /hello/en-gb/
        public ActionResult Index()
        {
            return Content("I am the EN-GB controller.");
        }
    }
}&lt;/pre&gt;

&lt;p&gt;And here's our FR-FR controller:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;using System.Web.Mvc;
namespace StarDotOne.Controllers
{
    [LocaleRoute("hello/{locale}/{action=Index}", "FR-FR")]
    public class FRFRHomeController : Controller
    {
        // GET: /hello/fr-fr/
        public ActionResult Index()
        {
            return Content("Je suis le contrôleur FR-FR.");
        }
    }
}&lt;/pre&gt;

&lt;p&gt;Before running this, we need to verify that we've got Attribute Routes enabled in our RouteConfig:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [7];"&gt;public class RouteConfig
{
    public static void RegisterRoutes(RouteCollection routes)
    {
        routes.IgnoreRoute("{resource}.axd/{*pathInfo}");
        routes.MapMvcAttributeRoutes();
        routes.MapRoute(
            name: "Default",
            url: "{controller}/{action}/{id}",
            defaults: new { controller = "Home", action = "Index", id = UrlParameter.Optional }
        );
    }
}&lt;/pre&gt;

&lt;p&gt;Now a request to /hello/en-gb/ goes to our ENGBController and a request to /hello/fr-fr/ goes to the FRFRController:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-24_11h18_03" href="http://www.flickr.com/photos/36836555@N00/12122081323/" mce_href="http://www.flickr.com/photos/36836555@N00/12122081323/"&gt;&lt;img alt="2014-01-24_11h18_03" src="http://farm6.static.flickr.com/5532/12122081323_30f4b1cd6f_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5532/12122081323_30f4b1cd6f_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because we've set the default locale in the LocaleRouteAttribute to en-us, we can browse to it using either /hello/en-us/ or just /hello:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-24_11h20_05" href="http://www.flickr.com/photos/36836555@N00/12122479736/" mce_href="http://www.flickr.com/photos/36836555@N00/12122479736/"&gt;&lt;img alt="2014-01-24_11h20_05" src="http://farm4.static.flickr.com/3704/12122479736_545c6a0708_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3704/12122479736_545c6a0708_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you've been paying close attention, you may be thinking that we could have accomplished the same thing using an inline route constraint. I think the real benefit over a custom inline constraint is when you're doing more than operating on one segment in the URL: preforming logic on the entire route or context. One great example there would be using a custom attribute based on a user's locale selection (set in a cookie, perhaps) or using a header.&lt;/p&gt;

&lt;p&gt;So, to recap:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;You could write custom route constraints before in "Traditional" code-based routing, but not in attribute routing &lt;/li&gt;

  
&lt;li&gt;You could write custom inline constraints, but they mapped just to a segment in the URL &lt;/li&gt;

  
&lt;li&gt;Custom route constraints now can operate at a higher level than just a segment on the URL path, e.g. headers or other request context &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A very common use case for using headers in routing is versioning by header. We'll look at that with ASP.NET Web API 2.1 next. Keep in mind that, while the general recommendation is to use ASP.NET Web API for your HTTP APIs, many APIs are still running on ASP.NET MVC for a variety of reasons (existing / legacy systems APIs built on ASP.NET MVC, familiarity with MVC, mostly-MVC applications with relatively few APIs that want to stay simple, developer preferences, etc.) and for that reason, versioning ASP.NET MVC HTTP APIs by headers is probably one of the top use cases of custom route attribute constaints for ASP.NET MVC as well.&lt;/p&gt;

&lt;h2&gt;ASP.NET Web API 2.1 Custom Route Attributes example: Versioning By Header&lt;/h2&gt;

&lt;p&gt;Note: The example I'm showing here is in &lt;a href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RoutingConstraintsSample/ReadMe.txt" mce_href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RoutingConstraintsSample/ReadMe.txt"&gt;the official samples list on CodePlex&lt;/a&gt;. There's a lot of great examples there, including some samples showing off some of the more complex features you don't hear about all that often. Since the methodology is almost exactly the same as what we looked at in ASP.NET MVC 5.1 and &lt;a href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RoutingConstraintsSample/ReadMe.txt" mce_href="http://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RoutingConstraintsSample/ReadMe.txt"&gt;the sample's available&lt;/a&gt;, I'll go through this one a lot faster.&lt;/p&gt;

&lt;p&gt;First, the custom constraint:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;internal class VersionConstraint : IHttpRouteConstraint
{
    public const string VersionHeaderName = "api-version";
    private const int DefaultVersion = 1;
    public VersionConstraint(int allowedVersion)
    {
        AllowedVersion = allowedVersion;
    }
    public int AllowedVersion
    {
        get;
        private set;
    }
    public bool Match(HttpRequestMessage request, IHttpRoute route, string parameterName, IDictionary&amp;lt;string, object&amp;gt; values, HttpRouteDirection routeDirection)
    {
        if (routeDirection == HttpRouteDirection.UriResolution)
        {
            int version = GetVersionHeader(request) ?? DefaultVersion;
            if (version == AllowedVersion)
            {
                return true;
            }
        }
        return false;
    }
    private int? GetVersionHeader(HttpRequestMessage request)
    {
        string versionAsString;
        IEnumerable&amp;lt;string&amp;gt; headerValues;
        if (request.Headers.TryGetValues(VersionHeaderName, out headerValues) &amp;amp;&amp;amp; headerValues.Count() == 1)
        {
            versionAsString = headerValues.First();
        }
        else
        {
            return null;
        }
        int version;
        if (versionAsString != null &amp;amp;&amp;amp; Int32.TryParse(versionAsString, out version))
        {
            return version;
        }
        return null;
    }
}&lt;/pre&gt;

&lt;p&gt;This is similar to the simpler LocaleConstraint we looked at earlier, but parses an integer version number from a header. Now, like before, we create an attribute to put this constraint to work:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;    internal class VersionedRoute : RouteFactoryAttribute
    {
        public VersionedRoute(string template, int allowedVersion)
            : base(template)
        {
            AllowedVersion = allowedVersion;
        }
        public int AllowedVersion
        {
            get;
            private set;
        }
        public override IDictionary&amp;lt;string, object&amp;gt; Constraints
        {
            get
            {
                var constraints = new HttpRouteValueDictionary();
                constraints.Add("version", new VersionConstraint(AllowedVersion));
                return constraints;
            }
        }
    }
}&lt;/pre&gt;

&lt;p&gt;And with that set up, we can just slap the attribute header on a couple different ApiControllers:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false; highlight: [1,7];"&gt;[VersionedRoute("api/Customer", 1)]
public class CustomerVersion1Controller : ApiController
{
    // controller code goes here
}
[VersionedRoute("api/Customer", 2)]
public class CustomerVersion2Controller : ApiController
{
    // controller code goes here
}&lt;/pre&gt;

&lt;p&gt;That's it - now requests to /api/Customer with the api-version header set to 1 (or empty, since it's the default) go to the first controller, and with api-version set to 2 go to the second controller. The sample includes a handy test client console app that does just that:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-24_14h58_06" href="http://www.flickr.com/photos/36836555@N00/12124449735/" mce_href="http://www.flickr.com/photos/36836555@N00/12124449735/"&gt;&lt;img alt="2014-01-24_14h58_06" src="http://farm8.static.flickr.com/7310/12124449735_156c2c6a3e_b.jpg" border="0" mce_src="http://farm8.static.flickr.com/7310/12124449735_156c2c6a3e_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, let's wrap up there for now. In the next (probably final) post, we'll take a quick high level look at some of the other features in this release.&lt;/p&gt;

&lt;p&gt;Recap:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;Custom route constraints let you run custom logic to determine if a route matches as well as other things like compute values that are available in the matching controllers &lt;/li&gt;

  
&lt;li&gt;The previous release allowed for custom inline route constraints, but they only operated on a segment &lt;/li&gt;

  
&lt;li&gt;This *.1 release includes support for full custom route constraints &lt;/li&gt;
&lt;/ul&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=LUB2e8fTiAw:CWr9g_TrD2o:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=LUB2e8fTiAw:CWr9g_TrD2o:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=LUB2e8fTiAw:CWr9g_TrD2o:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=LUB2e8fTiAw:CWr9g_TrD2o:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=LUB2e8fTiAw:CWr9g_TrD2o:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/LUB2e8fTiAw" height="1" width="1" alt=""/&gt;</description><pubDate>Fri, 24 Jan 2014 23:03:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/eeeusPqRqIE/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums</link><title>Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 1 - Overview and Enums</title><description>&lt;p&gt;This is the first in a four part series covering ASP.NET MVC 5.1 and Web API 2.1&lt;/p&gt;

&lt;ul&gt;   
&lt;li&gt;Part 1: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;Overview and Enums&lt;/a&gt; &lt;/li&gt;
    
&lt;li&gt;Part 2: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Attribute Routing with Custom Constraints&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 3: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/28/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-3-bootstrap-and-javascript-enhancements.aspx"&gt;Bootstrap and JavaScript enhancements&lt;/a&gt; &lt;/li&gt;

&lt;li&gt;Part 4: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/02/26/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-4-web-api-help-pages-bson-and-global-error-handling.aspx"&gt;Web API Help Pages, BSON, and Global Error Handling&lt;/a&gt;&lt;/li&gt;

 &lt;/ul&gt;

&lt;p&gt;The sample project covering the posts in this series is &lt;a href="https://github.com/jongalloway/StarDotOne"&gt;here&lt;/a&gt;; other referenced samples are in the &lt;a href="http://aspnet.codeplex.com/sourcecontrol/latest#Samples/ReadMe.txt"&gt;ASP.NET sample repository&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;ASP.NET MVC 5.1, Web API 2.1 and Web Pages 3.1 were released on January 20. I call it the star-dot-one release, not sure if that one's going to stick. Here are the top links to find out more:&lt;/p&gt;
  
&lt;ul&gt;   
&lt;li&gt;The announcement blog post: &lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/01/20/announcing-the-release-of-asp-net-mvc-5-1-asp-net-web-api-2-1-and-asp-net-web-pages-3-1.aspx" mce_href="http://blogs.msdn.com/b/webdev/archive/2014/01/20/announcing-the-release-of-asp-net-mvc-5-1-asp-net-web-api-2-1-and-asp-net-web-pages-3-1.aspx"&gt;Announcing the Release of ASP.NET MVC 5.1, ASP.NET Web API 2.1 and ASP.NET Web Pages 3.1&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
  
&lt;p&gt;Release notes &lt;/p&gt;
  
&lt;ul&gt;   
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes"&gt;ASP.NET MVC 5.1 release notes&lt;/a&gt;       
&lt;ul&gt;       
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#AttributeRouting" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#AttributeRouting"&gt;Attribute routing improvements&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Bootstrap" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Bootstrap"&gt;Bootstrap support for editor templates&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Enum" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Enum"&gt;Enum support in views&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Unobtrusive" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#Unobtrusive"&gt;Unobtrusive validation for MinLength/MaxLength Attributes&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#thisContext" mce_href="http://www.asp.net/mvc/overview/releases/mvc51-release-notes#thisContext"&gt;Supporting the ‘this’ context in Unobtrusive Ajax&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=MVC&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=MVC&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt;&lt;!--EndFragment--&gt; &lt;/li&gt;
     &lt;/ul&gt;
   &lt;/li&gt;
    
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21"&gt;ASP.NET Web API release notes&lt;/a&gt;       
&lt;ul&gt;       
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#global-error" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#global-error"&gt;Global error handling&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#attribute-routing" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#attribute-routing"&gt;Attribute routing improvements&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#help-page" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#help-page"&gt;Help Page improvements&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#ignoreroute" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#ignoreroute"&gt;IgnoreRoute support&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#bson" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#bson"&gt;BSON media-type formatter&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#async-filters" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#async-filters"&gt;Better support for async filters&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;&lt;a href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#query-parsing" mce_href="http://www.asp.net/web-api/overview/releases/whats-new-in-aspnet-web-api-21#query-parsing"&gt;Query parsing for the client formatting library&lt;/a&gt; &lt;/li&gt;
        
&lt;li&gt;Various &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20API|Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20API|Web%20API%20OData&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;bug fixes&lt;/a&gt; &lt;!--EndFragment--&gt;&lt;/li&gt;
     &lt;/ul&gt;
   &lt;/li&gt;
    
&lt;li&gt;ASP.NET Web Pages 3.1 is a bug fix release, here's the &lt;a href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20Pages%2FRazor&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed" mce_href="https://aspnetwebstack.codeplex.com/workitem/list/advanced?keyword=&amp;amp;status=Closed&amp;amp;type=All&amp;amp;priority=All&amp;amp;release=v5.1%20Preview|v5.1%20RTM&amp;amp;assignedTo=All&amp;amp;component=Web%20Pages%2FRazor&amp;amp;sortField=AssignedTo&amp;amp;sortDirection=Ascending&amp;amp;page=0&amp;amp;reasonClosed=Fixed"&gt;list of fixed bugs&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
  
&lt;p&gt;Let's run through what's involved in getting them and trying some of the new features.&lt;/p&gt;
  &lt;h3&gt;Nothing to Install, just NuGet package updates&lt;/h3&gt;  
&lt;p&gt;As I mentioned in my last post, ASP.NET has moved from a "big thing" that you install every few years. The ASP.NET project templates are now mostly a collection of composable NuGet packages, which can be updated more frequently and used without needing to install anything that will affect your dev environment, other projects you're working on, your server environment, or other applications on your server.&lt;/p&gt;
  
&lt;p&gt;You don't need to wait for your hosting provider to support ASP.NET MVC 5.1, ASP.NET Web API 2.1 or ASP.NET Web Pages 3.1 - if they supported 5/2/3 they support 5.1/2.1/3.1. Easier said, if your server supports ASP.NET 4.5, you're set.&lt;/p&gt;
  
&lt;p&gt;However, there are some new features for ASP.NET MVC 5.1 views that require you to be running the most recent Visual Studio update to get editing support. You're installing the Visual Studio updates when they come out so that's not a problem, right?&lt;/p&gt;
  
&lt;ul&gt;   
&lt;li&gt;For Visual Studio 2012, you should have &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390062" mce_href="http://go.microsoft.com/fwlink/?LinkId=390062"&gt;ASP.NET and Web Tools 2013.1 for Visual Studio 2012&lt;/a&gt;. You'd need this for ASP.NET MVC 5 support in Visual Studio 2012, so no real change there. &lt;/li&gt;
    
&lt;li&gt;For Visual Studio 2013, you should have &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390064" mce_href="http://go.microsoft.com/fwlink/?LinkId=390064"&gt;Visual Studio 2013 Update 1&lt;/a&gt;. This update is needed to get nice editor support for the new ASP.NET MVC 5.1 Razor View features (e.g. Bootstrap overloads). &lt;/li&gt;
 &lt;/ul&gt;
  &lt;h3&gt;Okay, Let's Have a Look Then&lt;/h3&gt;  
&lt;p&gt;Game plan: I'm going to take an ASP.NET MVC 5 + Web API 2 project, update the NuGet packages, and then throw some of my favorite features in there.&lt;/p&gt;
  
&lt;p&gt;In this case, I'm opting for the "mostly Web API template" since it includes both MVC and Web API, and it includes help pages right out of the box. I could go with "mostly MVC" + Web API, but then I'd need to install the Web API Help Page NuGet package and I might strain a muscle.&lt;/p&gt;
  
&lt;p&gt;&lt;a title="2014-01-20_16h31_07" href="http://www.flickr.com/photos/36836555@N00/12060286423/" mce_href="http://www.flickr.com/photos/36836555@N00/12060286423/"&gt;&lt;img alt="2014-01-20_16h31_07" src="http://farm4.static.flickr.com/3764/12060286423_947afba81e.jpg" border="0" mce_src="http://farm4.static.flickr.com/3764/12060286423_947afba81e.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
  
&lt;p&gt;Now I'll open the Manage NuGet Packages dialog and check for updates. Yup, there they are.&lt;/p&gt;
  
&lt;p&gt;&lt;a title="2014-01-20_16h37_07" href="http://www.flickr.com/photos/36836555@N00/12060960846/" mce_href="http://www.flickr.com/photos/36836555@N00/12060960846/"&gt;&lt;img alt="2014-01-20_16h37_07" src="http://farm4.static.flickr.com/3819/12060960846_2472bcd4c5_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3819/12060960846_2472bcd4c5_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
  
&lt;p&gt;Since this is a throw-away project I'll throw caution to the wind and click Update All. If this were a real project, I might just update the three new releases so as not to pick an unnecessary fight with JavaScript libraries. But I'm feeling lucky today so Update All it is. &lt;/p&gt;
  
&lt;p&gt;&lt;a title="2014-01-20_16h42_15" href="http://www.flickr.com/photos/36836555@N00/12061011636/" mce_href="http://www.flickr.com/photos/36836555@N00/12061011636/"&gt;&lt;img alt="2014-01-20_16h42_15" src="http://farm6.static.flickr.com/5511/12061011636_906022fdbc_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5511/12061011636_906022fdbc_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
  
&lt;p&gt;Wow, look at them go! jQuery 2.0.3 even. It's a party. (anti-party disclaimer for those who might be getting carsick: I didn't have to update to jQuery 2.0.3 or any of that other stuff to use the 5.1/2.1 stuff).&lt;/p&gt;
  &lt;h3&gt;Enum Support in ASP.NET MVC Views&lt;/h3&gt;  
&lt;p&gt;Okay, I'll start by creating a Person model class with a Salutation enum:&lt;/p&gt;
  
&lt;pre class="brush: csharp; auto-links: false;"&gt;using System.ComponentModel.DataAnnotations;
namespace StarDotOne.Models
{
    public class Person
    {
        public int Id { get; set; }
        public Salutation Salutation { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public int Age { get; set; }
    }
    //I guess technically these are called honorifics
    public enum Salutation
    {
        [Display(Name = "Mr.")]
        Mr,
        [Display(Name = "Mrs.")]
        Mrs,
        [Display(Name = "Ms.")]
        Ms,
        [Display(Name = "Dr.")]
        Doctor,
        [Display(Name = "Prof.")]
        Professor,
        Sir,
        Lady,
        Lord
    }
}&lt;/pre&gt;

&lt;p&gt;Note that I'm using the Display attribute on a few that I want to abbreviate.&lt;/p&gt;

&lt;p&gt;Next, I delete my HomeController and views and scaffold a new HomeController using the Person class. Caution to the wind being our theme, I'll run it.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h04_50" href="http://www.flickr.com/photos/36836555@N00/12065201545/" mce_href="http://www.flickr.com/photos/36836555@N00/12065201545/"&gt;&lt;img alt="2014-01-21_00h04_50" src="http://farm6.static.flickr.com/5473/12065201545_26d6e4041f_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5473/12065201545_26d6e4041f_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh no! No dropdown on Salutation!&lt;/p&gt;

&lt;p&gt;Just kidding. That's to be expected. To get the dropdown, we need to change the scaffolded view code for the Salutation from the generic Html.EditorFor to use the new Html.EnumDropDownListFor helper.&lt;/p&gt;

&lt;p&gt;So in my Create.cshtml, I need to change this line:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EditorFor(model =&amp;gt; model.Salutation)&lt;/pre&gt;

&lt;p&gt;to this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EnumDropDownListFor(model =&amp;gt; model.Salutation)&lt;/pre&gt;

&lt;p&gt;Okay, with that done I'll refresh the page:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h09_53" href="http://www.flickr.com/photos/36836555@N00/12065544563/" mce_href="http://www.flickr.com/photos/36836555@N00/12065544563/"&gt;&lt;img alt="2014-01-21_00h09_53" src="http://farm6.static.flickr.com/5478/12065544563_b892c5f80e_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5478/12065544563_b892c5f80e_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there it is.&lt;/p&gt;

&lt;p&gt;"Now, Jon," you say, "That's really nice, but it would have been absolutely perfect if the scaffolder or EditorFor or something had seen the Enum property and just done the right thing."&lt;/p&gt;

&lt;p&gt;You're right. I'm told that will all magically work in an update on the way soon. For now, though, it's easy to get that behavior using some simple EditorTemplates and DisplayTemplates. You can find examples of them in this &lt;a href="https://aspnet.codeplex.com/SourceControl/latest#Samples/MVC/EnumSample/EnumSample/Views/Shared/" mce_href="https://aspnet.codeplex.com/SourceControl/latest#Samples/MVC/EnumSample/EnumSample/Views/Shared/"&gt;EnumSample on CodePlex&lt;/a&gt;. So I grabbed those templates and copied them into the /Views/Shared directory in my project:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h18_21" href="http://www.flickr.com/photos/36836555@N00/12065331315/" mce_href="http://www.flickr.com/photos/36836555@N00/12065331315/"&gt;&lt;img alt="2014-01-21_00h18_21" src="http://farm6.static.flickr.com/5482/12065331315_c33f53ec08_b.jpg" border="0" mce_src="http://farm6.static.flickr.com/5482/12065331315_c33f53ec08_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I'll change my Create.cshtml view back how it was originally scaffolded, using Html.EditorFor. That way the view engine will look for a matching EditorTemplate for the object type, find Enum.cshtml, and use that to render all Enum model properties.&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h51_35" href="http://www.flickr.com/photos/36836555@N00/12065950363/" mce_href="http://www.flickr.com/photos/36836555@N00/12065950363/"&gt;&lt;img alt="2014-01-21_00h51_35" src="http://farm3.static.flickr.com/2847/12065950363_06f7e5be44_b.jpg" border="0" mce_src="http://farm3.static.flickr.com/2847/12065950363_06f7e5be44_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blam!&lt;/p&gt;

&lt;p&gt;Okay, one more fun thing in that EnumSample. There's an override in Html.EditorFor that lets you specify the EditorTemplate you'd like to be used. So I'll change that line to this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;@Html.EditorFor(model =&amp;gt; model.Salutation, templateName: "Enum-radio")&lt;/pre&gt;

&lt;p&gt;And now we are truly dropping science like Galileo dropped the orange:&lt;/p&gt;

&lt;p&gt;&lt;a title="2014-01-21_00h57_41" href="http://www.flickr.com/photos/36836555@N00/12066013263/" mce_href="http://www.flickr.com/photos/36836555@N00/12066013263/"&gt;&lt;img alt="2014-01-21_00h57_41" src="http://farm4.static.flickr.com/3756/12066013263_ca2023f5f6_b.jpg" border="0" mce_src="http://farm4.static.flickr.com/3756/12066013263_ca2023f5f6_b.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recap so far:&lt;/p&gt;

&lt;ul&gt;
  
&lt;li&gt;We updated to the new NuGet packages &lt;/li&gt;

  
&lt;li&gt;We saw that we can now use a new helper to render dropdowns for enums: Html.EnumDropDownListFor &lt;/li&gt;

  
&lt;li&gt;We saw that we can use EditorTemplates (and, trust me, DisplayTemplates as well) to encapsulate that so any call to Html.EditorFor will intelligently display enum properties &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's the next post in the series: &lt;a title="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx" mce_href="http://weblogs.asp.net/jgalloway/archive/2014/01/24/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-2-attribute-routing-with-custom-constraints.aspx"&gt;Looking at ASP.NET MVC 5.1 and Web API 2.1 - Part 2 - Attribute Routing with Custom Constraints&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=eeeusPqRqIE:YTiCVn7kj0A:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=eeeusPqRqIE:YTiCVn7kj0A:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=eeeusPqRqIE:YTiCVn7kj0A:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=eeeusPqRqIE:YTiCVn7kj0A:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=eeeusPqRqIE:YTiCVn7kj0A:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/eeeusPqRqIE" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 21 Jan 2014 22:44:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/asp-net-a-last-look-back-at-2013-looking-ahead-to-2014</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/y70gmpYwwwY/asp-net-a-last-look-back-at-2013-looking-ahead-to-2014</link><title>ASP.NET - A last look back at 2013, looking ahead to 2014</title><description>&lt;p&gt;There's something about getting into a new year that makes us step back and consider the bigger picture. Where is it all headed? Am I making the most out of my life? What web tools and products has Microsoft released lately?&lt;/p&gt;  &lt;p&gt;I got to present a few Web Camps in December, in Oslo and Vancouver. I was reminded that there are some people - we'll call them normal developers who have work to do - don't sit there refreshing the Microsoft downloads new releases page all day. I don't understand them, but I appreciate that they exist. &lt;/p&gt;  &lt;p&gt;We announce stuff all the time, but it's hard to keep up with what's important, what you need to know, and stuff you should start paying attention to because it's going to be a big deal really soon. So here's my quick summary of the important things that happened in 2013 and what I think it suggests we watch for in 2014.&lt;/p&gt;  &lt;h2&gt;The Big Picture&lt;/h2&gt;  &lt;h3&gt;One ASP.NET&lt;/h3&gt;  &lt;p&gt;This has been a thing for brewing for a bit, but really came together in 2013. With Visual Studio 2013, you really can mix and match ASP.NET MVC + Web API + Web Forms + SignalR + &amp;quot;your framework here&amp;quot; and they all get along. This has been a lot of work over several releases: breaking out functionality out into packages, setting up common components like routing and identity so they're universal, moving to common HTML and CSS for the project templates, Visual Studio tooling changes, etc. That all culminated with the Visual Studio 2013 release, where we finally have just one ASP.NET project with a la carte support for Web Forms, MVC, Web API, and more. &lt;/p&gt;  &lt;p&gt;What's probably more important is that you can also add functionality after you've created a project, so if you decide later to add MVC libraries to your Web Forms project it's no big deal.&lt;/p&gt;  &lt;h3&gt;Visual Studio as a great editor for front-end (HTML / CSS / JavaScript) files&lt;/h3&gt;  &lt;p&gt;Again, this one has been growing over time: Visual Studio 2012 introduced new JavaScript and CSS editors. The &lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/whats-new#_Toc318097407"&gt;JavaScript editor added tons of new features&lt;/a&gt; like ECMAScript 5 support, code outlining, brace matching, go to definition, dynamic IntelliSense. The &lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/whats-new#_Toc318097415"&gt;CSS editor added&lt;/a&gt; things like much better IntelliSense, color picker, snippets, lots of HTML5 / modern web development support. It also included Page Inspector - a built-in browser view that shows a running view of your site (e.g. live data from the database, JavaScript is evaluated, everything's running end to end) and allows you to click on an an element and find the line of code that produced the HTML. But the HTML editor in Visual Studio 2012 was old, and that prevented adding modern web development features.&lt;/p&gt;  &lt;p&gt;In Visual Studio 2013, the HTML editor was completely rewritten to allow for the cool (MEF based) extensibility that the CSS editor in Visual Studio 2012 leveraged so heavily. That allowed for new support for all kinds of new modern features like IntelliSense for AngularJS, built-in CoffeeScript and LESS editor support and more. The HTML editor features in Visual Studio 2013 get even better with the Web Essentials extension, which I'll talk about in a minute.&lt;/p&gt;  &lt;p&gt;And we haven't even mentioned Browser Link yet! Browser Link takes the smarts that went into Page Inspector, hooks it up with a real-time Web Socket connection (powered by SignalR) that's hosted inside of Visual Studio, and gives me real-time, two-way interactivity between my server-side code and any running browser. That means I can run my site in Visual Studio, pop open Chrome or Opera or Firefox or IE or some mobile emulator, hover over an element in the browser and see the source of that HTML highlighted in Visual Studio. That is a huge, huge timesaver I've been wanting for a very long time.&lt;/p&gt;  &lt;p&gt;The point is that Visual Studio 2013 ships with newly rewritten, advanced editors for your front-end web files. Like me, you may have seen Visual Studio as an editor for back-end code but went to a lightweight notepad style text editor for HTML / CSS / JavaScript / modern web language of the week. But I think it's time to change that way of thinking - Visual Studio gives me the benefits of a lightweight editor (starts up in 2-3 seconds on a modern computer, has a light UI that gets out of my way), but helps me spot misspellings, get the right vendor prefixes, use JavaScript libraries without having to dig through source code and docs more than I want to, etc.&lt;/p&gt;  &lt;h3&gt;Web Essentials as &amp;quot;Visual Studio web dev labs&amp;quot;&lt;/h3&gt;  &lt;p&gt;Web Essentials is a side project run by Mads Kristensen, the project manager for the web developer features that ship with Visual Studio. While Visual Studio's new ship schedule means you get a new version yearly and updates several times throughout the year, Web Essentials ships as often as Mads wants to. Which turns out to be &lt;a href="http://vswebessentials.com/changelog"&gt;pretty often&lt;/a&gt; - often every two or three weeks.&lt;/p&gt;  &lt;p&gt;Some features in Web Essentials are prototypes which might land in the next version of Visual Studio - an example is the Paste JSON as Classes feature. This allows you to get your hands on them right away, give feedback on how they work, and then see them graduate to full Visual Studio support.&lt;/p&gt;  &lt;p&gt;Web Essentials also includes some interesting features which are useful to web developers who are engaged enough to spend a minute to install and extension, but might not be for everyone. Zen Coding might be an example of that - I don't know if it'll ever ship in Visual Studio, but it's a useful feature if you're an HTML focused web developer and into the new, new stuff. Since web development techniques and metalanguages come out so frequently and change so rapidly, it's great to have a lightweight extension that can keep up with them until they're mature enough to maybe ship with Visual Studio.&lt;/p&gt;  &lt;h3&gt;Release and update speed&lt;/h3&gt;  &lt;p&gt;When Visual Studio 2012 was launched in September 2012, Soma announced that they were shifting to a faster release cadence which would include both more frequent full releases and regular smaller updates to deliver features throughout the year. An important point there is that these aren't just service packs with bug fixes, they include useful features. We really saw that come together in 2013. The best example of that was the ASP.NET and Web Tools 2012.2 release in February 2013. I list some of the features below, but it was a pretty big batch: new templates for both ASP.NET Web Forms and MVC, Page Inspector and more. As of now, there have been a total of 5 updates for Visual Studio 2012; &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/11/18/announcing-release-of-asp-net-and-web-tools-2013-1-for-visual-studio-2012.aspx"&gt;the latest added some support for ASP.NET MVC 5 (albeit only with an empty MVC 5 template) to Visual Studio 2012&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;I think that's a great thing. The technologies, browsers and languages we need to work with as web developers move really quickly, and we need tools that keep up. Two or three years between releases doesn't work for me, and even yearly is pushing it. I expect to see this update cycle continue in 2014 and beyond. For instance, we've already got the &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/09/asp-net-and-web-tools-2013-2-preview-for-visual-studio-2013.aspx"&gt;release candidates for ASP.NET MVC 5.1, Web API 2.1 and Web Pages 3.1&lt;/a&gt; - expect the final release very soon. [Update: the final version was released on January 20, read my &lt;a href="http://weblogs.asp.net/jgalloway/archive/2014/01/21/looking-at-asp-net-mvc-5-1-and-web-api-2-1-part-1-overview-and-enums.aspx"&gt;post series on the new features here&lt;/a&gt;.]&lt;/p&gt;  &lt;p&gt;&lt;em&gt;Note: In case you didn't know - if you've got Visual Studio 2012 Professional, you can &lt;/em&gt;&lt;a href="http://www.microsoftstore.com/store/msusa/en_US/pdp/Visual-Studio-Professional-2013/productID.284832200"&gt;&lt;em&gt;upgrade to Visual Studio 2013 Professional for $99 now&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;/p&gt;  &lt;p&gt;Again, thinking beyond Visual Studio, the rest of the ASP.NET dev landscape is moving very quickly. &lt;a href="http://weblogs.asp.net/scottgu/default.aspx"&gt;Windows Azure has releases roughly every three weeks&lt;/a&gt;. &lt;a href="http://vswebessentials.com/"&gt;Web Essentials&lt;/a&gt; and &lt;a href="http://sidewaffle.com/"&gt;SideWaffle&lt;/a&gt; have release updates measured in weeks. &lt;a href="https://twitter.com/nugetlatest"&gt;NuGet packages update constantly&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Do you have to keep up to date with all of the new things? No, of course not. But since web development technologies and requirements move rapidly, it's good to know that you're generally not going to be waiting on Visual Studio or ASP.NET when you do need the features. And of course, there are lots of benefits (in addition to the big flashy new features) to being on the newest version, e.g. scaffolding in ASP.NET MVC now whitelists your parameters to prevent overposting.&lt;/p&gt;  &lt;h3&gt;Externalization of ASP.NET&lt;/h3&gt;  &lt;p&gt;ASP.NET used to be pretty monolithic. You'd get one big ASP.NET release and it did everything. You could plug into it - using things like control events, membership provider hooks, modules and handlers, but you were just plugging into the big ASP.NET thing.&lt;/p&gt;  &lt;p&gt;That's really changed over the years.&lt;/p&gt;  &lt;p&gt;When you look at what's installed in a new ASP.NET project, it's almost all NuGet packages. That's a big part of what made it possible for the One ASP.NET thing to happen: ASP.NET MVC, Web Forms, Web API, and Web Pages all share common NuGet packages. That definitely includes new features, like the new &lt;a href="http://asp.net/identity"&gt;ASP.NET Identity&lt;/a&gt; system.&lt;/p&gt;  &lt;p&gt;&lt;em&gt;Side note: You can use these packages individually, or even create your own versions (since they're a permissive &lt;/em&gt;&lt;a href="http://aspnetwebstack.codeplex.com/"&gt;&lt;em&gt;under open source license&lt;/em&gt;&lt;/a&gt;&lt;em&gt;). You can grab &lt;/em&gt;&lt;a href="http://aspnetwebstack.codeplex.com/wikipage?title=Use%20Nightly%20Builds"&gt;&lt;em&gt;nightly builds&lt;/em&gt;&lt;/a&gt;&lt;em&gt; and which include &lt;/em&gt;&lt;a href="http://aspnetwebstack.codeplex.com/SourceControl/list/changesets"&gt;&lt;em&gt;changes as they're committed&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;The tooling (Microsoftese, generally meaning &amp;quot;Visual Studio support&amp;quot;) for ASP.NET has also been externalized over the past few years. If you poke around in the Visual Studio program directory (e.g. \Common7\IDE\Extensions\Microsoft\Web Tools), you'll see features are being built using the standard VSIX / MEF extensibility points. That's good because it means things can ship and update more quickly, and the hooks they're using are available to you. Heck, the source is even available to you if you pop them open in a tool like ILSpy or Reflector.&lt;/p&gt;  &lt;p&gt;Things are also being built using OWIN (Open Web Interfaces for .NET) now. I've written before about &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/05/30/getting-up-to-speed-with-katana.aspx"&gt;why I think OWIN and Katana are important&lt;/a&gt;. The result is that core functionality like authentication is now being plugged into ASP.NET as portable middleware rather than shipped in a big monolithic framework that hides somewhere in your GAC.&lt;/p&gt;  &lt;p&gt;Oh, and &lt;a href="http://sidewaffle.com/"&gt;SideWaffle&lt;/a&gt;. What on earth is a SideWaffle?!? Well, just like NuGet externalized ASP.NET dependencies and VSIX externalized tooling, SideWaffle externalizes templates. The idea is that, unlike waiting for new ASP.NET project templates in Visual Studio releases or updates, you install the SideWaffle extension and get (or contribute) Visual Studio templates that are updated more rapidly.&lt;/p&gt;  &lt;h2&gt;Releases&lt;/h2&gt;  &lt;p&gt;I've already talked about what these release mean in a big picture sense, so I'll just list them out in linked bullet point form.&lt;/p&gt;  &lt;h3&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw"&gt;ASP.NET and Web Tools 2012.2 (Feb 2013, included with Visual Studio Update 2)&lt;/a&gt;&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;Here's my announcement blog post with more details: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/02/18/announcing-the-asp-net-and-web-tools-2012-2-release.aspx"&gt;Announcing the ASP.NET and Web Tools 2012.2 Release!&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Some top features:      &lt;ul&gt;       &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_Templates"&gt;Template updates for ASP.NET MVC 4 (SPA, Facebook)&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_ASP.NET_Web_API"&gt;ASP.NET Web API updates (Help Page, Tracing, OData)&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_ASP.NET_Friendly_URLs"&gt;ASP.NET Web Forms updates to include Friendly URLs&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_Tooling"&gt;Web Tools (Page Inspector updates, IntelliSense, Publishing)&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/aspnet/overview/aspnet-and-visual-studio-2012/aspnet-and-web-tools-20122-release-notes-rtw#_ASP.NET_SignalR"&gt;ASP.NET SignalR (this was the first time SignalR shipped with a Visual Studio release)&lt;/a&gt; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/10/17/top-things-web-developers-should-know-about-the-visual-studio-2013-release.aspx"&gt;Visual Studio 2013 (Oct 2013)&lt;/a&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;ul&gt;     &lt;li&gt;ASP.NET Core Features (new &lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC8"&gt;ASP.NET Identity&lt;/a&gt; system, common templates using Bootstrap, &lt;a href="http://www.asp.net/visual-studio/overview/2013/aspnet-scaffolding-overview"&gt;new Scaffolding system&lt;/a&gt;) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC10"&gt;ASP.NET MVC 5&lt;/a&gt; (One ASP.NET so it works in all ASP.NET projects, attribute&amp;#160; routing) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC11"&gt;ASP.NET Web API 2&lt;/a&gt; (Attribute routing, OAuth 2, CORS, Portable client, OWIN integration, lots more) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC13"&gt;SignalR 2&lt;/a&gt; (OWIN and cross platform / portable support, cross domain support, lots more) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/ms171868.aspx#v451"&gt;.NET 4.5.1&lt;/a&gt; (ASP.NET impact is mostly performance improvements, e.g. &lt;a href="http://blogs.msdn.com/b/dotnet/archive/2013/10/09/asp-net-app-suspend-responsive-shared-net-web-hosting.aspx"&gt;App Suspend&lt;/a&gt;) &lt;/li&gt;      &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/using-browser-link"&gt;Brower Link&lt;/a&gt; (and &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/11/18/browser-link-apis-in-visual-studio-2013-rtm.aspx"&gt;Browser Link Extension support&lt;/a&gt;) &lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/11/18/announcing-release-of-asp-net-and-web-tools-2013-1-for-visual-studio-2012.aspx"&gt;ASP.NET and Web Tools 2013.1 for Visual Studio 2012&lt;/a&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Release Post: &lt;a title="http://www.asp.net/visual-studio/overview/2012/aspnet-and-web-tools-20131-for-visual-studio-2012" href="http://blogs.msdn.com/b/webdev/archive/2013/11/18/announcing-release-of-asp-net-and-web-tools-2013-1-for-visual-studio-2012.aspx"&gt;Announcing release of ASP.NET and Web Tools 2013.1 for Visual Studio 2012&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Features      &lt;ul&gt;       &lt;li&gt;Round trip support between Visual Studio 2012 and 2013 &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC10"&gt;ASP.NET MVC 5 support&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC11"&gt;ASP.NET Web API 2 support&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;ASP.NET Scaffolding (brings the new scaffolding system in to Visual Studio 2012) &lt;/li&gt;        &lt;li&gt;Bootstrap support &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Windows Azure updates&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Tons of releases throughout the year, but here are some of what I think are the top features for ASP.NET developers:      &lt;ul&gt;       &lt;li&gt;Remote debugging (was in Web Roles, now it's available in Windows Azure Web Sites) &lt;/li&gt;        &lt;li&gt;Create and publish to Windows Azure Web Sites from Visual Studio &lt;/li&gt;        &lt;li&gt;Right-click on VM, RDP &lt;/li&gt;        &lt;li&gt;MDSN benefits / price cuts / run VS in cloud (also VS Online) &lt;/li&gt;        &lt;li&gt;Web Socket support &lt;/li&gt;        &lt;li&gt;Windows Server 2012 R2 &lt;/li&gt;        &lt;li&gt;General Availability (Web Sites, Mobile Services, IAAS) &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://vswebessentials.com/changelog"&gt;Web Essentials&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://sidewaffle.com/"&gt;Side Waffle&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;NuGet&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;There were lots throughout the year, but I think the main feature for web developers was that Package Restore is enabled by default in NuGet 2.7 &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Portable class libraries&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;This is a big step forward for portable libraries - both community open source libraries and Microsoft provided libraries - to work cross platform &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;New Stuff That You Really Need To Understand&lt;/h2&gt;  &lt;h3&gt;&lt;a href="http://asp.net/identity"&gt;ASP.NET Identity&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;We had an old ASP.NET Membership system that worked for a while, but was definitely showing its age. It didn't support claims and social authentication, it didn't work well with custom membership data, it was hard to extend. Then we got Simple Membership in ASP.NET MVC 4, which was simple but hard to extend. A lot of work went into the new Identity system to make sure it both did simple things well and was wasn't hard to extend later.&lt;/p&gt;  &lt;p&gt;There's a lot of documentation out there on the new Identity system, and more on the way at &lt;a title="http://www.asp.net/identity" href="http://www.asp.net/identity"&gt;http://www.asp.net/identity&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Also, I recommend K. Scott Allen's recent posts exploring ASP.NET Identity, such as&amp;#160; &lt;a href="http://odetocode.com/blogs/scott/archive/2014/01/09/customization-options-with-asp-net-identity.aspx"&gt;Customization Options With ASP.NET Identity&lt;/a&gt;.&lt;/p&gt;  &lt;h3&gt;&lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;All of the new web project templates are built using Bootstrap. I &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/10/17/top-things-web-developers-should-know-about-the-visual-studio-2013-release.aspx"&gt;overviewed that a little in a previous post&lt;/a&gt;, but there's a lot more to it. The top benefits I see are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;It's popular across the web development community, so we're able to take advantage of community support for things like themes, documentation, tutorials, etc. &lt;/li&gt;    &lt;li&gt;It's responsive and mobile-first, so it's very easy to build sites that work well at narrow (mobile) screen resolutions, intermediate screen resolutions like tablets, and on widescreen displays &lt;/li&gt;    &lt;li&gt;It's got a lot of components and jQuery based plugins that handle common web developer concerns &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Other Neat Stuff That You Should Start Paying Attention To&lt;/h2&gt;  &lt;h3&gt;Scaffolding&lt;/h3&gt;  &lt;p&gt;We've had scaffolding in ASP.NET before, but it was framework specific - there was MVC scaffolding, Web API scaffolding, and nothing else if you were working on another project type. The scaffolding system in Visual Studio 2013 (and now available in 2012, as mentioned above) has been updated so it works in any ASP.NET project, and it's been built to be easily extensible (the extensibility bit will be shipped and documented in a Visual Studio update early this year).&lt;/p&gt;  &lt;p&gt;Some good references:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/aspnet-scaffolding-overview"&gt;ASP.NET Scaffolding overview on the ASP.NET site&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/26/how-to-customize-the-generated-files-from-the-new-scaffolded-item-dialog.aspx"&gt;How to customize the generated files from the New Scaffolded Item dialog&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/09/asp-net-and-web-tools-2013-2-preview-for-visual-studio-2013.aspx"&gt;ASP.NET MVC 5.1, Web API 2.1 and Web Pages 3.1&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;The release candidates have already shipped and the final release will be out very extremely soon. Some of the new features:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;ASP.NET MVC 5.1      &lt;ul&gt;       &lt;li&gt;Attribute Routing support for constraints &lt;/li&gt;        &lt;li&gt;Bootstrap support for HTML helpers (allowing HTML attributes in Html.EditorFor) &lt;/li&gt;        &lt;li&gt;Support for Enums &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;ASP.NET Web API 2.1      &lt;ul&gt;       &lt;li&gt;Global Error Handling &lt;/li&gt;        &lt;li&gt;Attribute Routing support for constraints &lt;/li&gt;        &lt;li&gt;BSON media type formatter &lt;/li&gt;        &lt;li&gt;Async filters &lt;/li&gt;        &lt;li&gt;Help Page improvements &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;OWIN and Katana&lt;/h3&gt;  &lt;p&gt;I mentioned these earlier. If you've been putting this on your &amp;quot;I'll ignore this until it starts getting important&amp;quot; list, it's time. The new Identity system is wired into the ASP.NET project templates using OWIN, and new things will be moving that direction.&lt;/p&gt;  &lt;h3&gt;Visual Studio Online&lt;/h3&gt;  &lt;p&gt;I think Visual Studio Online - including the Monaco editor - is getting pretty interesting. It's definitely useful for web developers. See my post here: &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/11/13/a-quick-look-at-the-new-visual-studio-online-quot-monaco-quot-code-editor.aspx"&gt;A look at the new Visual Studio Online &amp;quot;Monaco&amp;quot; code editor&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Node Tools for Visual Studio&lt;/h3&gt;  &lt;p&gt;Node (and NPM) are getting to be pretty big in the web development world, and I think it's important to keep up with where it's going. It hasn't been that hard: Node's pretty lightweight, runs well on Windows for a while now, and is incredibly easy to run in Windows Azure Web Sites. But, it's gotten incredibly easy now that they've built pretty impressive support for Node.js into Visual Studio. I think it's worth taking some time and getting a little familiarity with Node.js if you haven't yet. Don't get me wrong, I'm in no way pushing Node.js over ASP.NET development, I'm just saying that I personally think it's a good idea to keep up with as a professional web developer.&lt;/p&gt;  &lt;p&gt;See Scott Hanselman's post (&lt;a href="http://www.hanselman.com/blog/IntroducingNodejsToolsForVisualStudio.aspx"&gt;Introducing node.js Tools for Visual Studio&lt;/a&gt;) and give it a look.&lt;/p&gt;  &lt;h2&gt;Keeping Up With The New Stuff&lt;/h2&gt;  &lt;p&gt;That's a condensed list of what I think's important circa January 2014, and it's a lot. How on earth can we keep up with all of this?&lt;/p&gt;  &lt;p&gt;Here are some resources I recommend:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;ASP.NET social accounts      &lt;ul&gt;       &lt;li&gt;Twitter: &lt;a href="https://twitter.com/aspnet"&gt;@aspnet&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;Facebook: &lt;a href="http://fb.me/aspnet"&gt;http://fb.me/aspnet&lt;/a&gt; &lt;/li&gt;        &lt;li&gt;&lt;a href="https://plus.google.com/communities/115589658993141493462"&gt;Google+&lt;/a&gt; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;The ASP.NET Community Spotlight (home page of the ASP.NET site) &lt;/li&gt;    &lt;li&gt;The /vnext section on ASP.NET, currently spotlighting Visual Studio 2013: &lt;a href="http://asp.net/vnext"&gt;http://asp.net/vnext&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Web Camps      &lt;ul&gt;       &lt;li&gt;Look for &lt;a href="http://www.devcamps.ms/web"&gt;live events&lt;/a&gt; in your area &lt;/li&gt;        &lt;li&gt;Download the &lt;a href="http://aka.ms/webcamps-training-kit"&gt;Web Camps Training Kit&lt;/a&gt; for 30mb of demos explaining all the new features &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Web+Camps+TV"&gt;Web Camps TV&lt;/a&gt; with Cory Fowler and Jaffe Worley &lt;/li&gt;    &lt;li&gt;Windows Azure shows      &lt;ul&gt;       &lt;li&gt;&lt;a href="http://channel9.msdn.com/Shows/Cloud+Cover"&gt;Cloud Cover&lt;/a&gt; with Nick Harris and Chris Risner &lt;/li&gt;        &lt;li&gt;&lt;a href="http://friday.azure.com/"&gt;Windows Azure Friday&lt;/a&gt; (with Scott Hanselman) is a great resource for Windows Azure content &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/"&gt;Web Dev blog&lt;/a&gt;       &lt;ul&gt;       &lt;li&gt;This is THE blog for the Web Dev team at Microsoft - lots of great content, release announcements, etc. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;All right! Go to it! &lt;a href="https://www.youtube.com/watch?v=LkCNJRfSZBU"&gt;Let's do this&lt;/a&gt;!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=y70gmpYwwwY:Yy9p1usMKmE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=y70gmpYwwwY:Yy9p1usMKmE:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=y70gmpYwwwY:Yy9p1usMKmE:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=y70gmpYwwwY:Yy9p1usMKmE:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=y70gmpYwwwY:Yy9p1usMKmE:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/y70gmpYwwwY" height="1" width="1" alt=""/&gt;</description><pubDate>Sat, 18 Jan 2014 00:07:13 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/asp-net-a-last-look-back-at-2013-looking-ahead-to-2014</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/two-great-kickstarter-projects-ending-soon-durandal-javascript-framework-and-bitcommander-file-manager</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/mcuBmhcTKMk/two-great-kickstarter-projects-ending-soon-durandal-javascript-framework-and-bitcommander-file-manager</link><category>Browsers - Web Development</category><category>Tools</category><title>Two great Kickstarter projects ending soon: Durandal JavaScript framework and bitCommander File Manager</title><description>&lt;p&gt;I like Kickstarter. It's not a store, it's an easy way to help fund creative projects. You back projects you find exciting at different reward levels, and then follow along with the project's progress. I blogged about the &lt;a href="http://weblogs.asp.net/jgalloway/archive/2013/06/19/last-chance-to-back-the-agent-watch-kickatarter-first-chance-to-play-with-the-code-bonus-extra-credit-custom-device-emulator-with-screen-scaling.aspx"&gt;AGENT watch last June&lt;/a&gt; and was excited to see them hit 10x their goal - I'm really looking forward to getting my AGENT watch when they ship.&lt;/p&gt;  &lt;p&gt;Preemptive disclaimer: As I said, it's not a store. You're funding a project with goals and risks and target timelines. The average contribution amounts aren't that high and I fund projects that I want to support, so I'm okay with that. If you're not, Kickstarter's not your thing, and that's fine too.&lt;/p&gt;  &lt;p&gt;I wanted to help get the word out about two recent Kickstarter projects I've backed (and been tweeting about): &lt;a href="http://www.kickstarter.com/projects/eisenbergeffect/durandal-2014"&gt;Durandal&lt;/a&gt; and &lt;a href="http://www.kickstarter.com/projects/953554185/bitcommander"&gt;bitCommander&lt;/a&gt;. Both end soon (bitCommander ends on Jan 9, Durandal ends on Jan 10).&lt;/p&gt;  &lt;h2&gt;Durandal&lt;/h2&gt;  &lt;p&gt;&lt;a href="http://durandaljs.com/"&gt;Durandal&lt;/a&gt; is an open source JavaScript framework that helps you build full-featured single page applications. &lt;a href="http://neverindoubtnet.blogspot.com/2014/01/hooray-for-durandal-nextgen.html"&gt;Ward Bell summed up what's unique about Durandal pretty well&lt;/a&gt;:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;What’s so great about it? What’s distinctive about it? &lt;a href="http://www.kickstarter.com/projects/eisenbergeffect/durandal-2014/posts/703625"&gt;Rob has his inventory&lt;/a&gt; of laudable features (and its impressive). Here are some of the aspects of nextGen Durandal that I love … and that have no equal among alternative frameworks:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;strong&gt;Convention over configuration&lt;/strong&gt; – I hate writing and maintaining “switch board” code to connect FooViewModel to FooView and FooRoute etc. I want to say “Foo” and be done with it … until and unless I have a compelling reason to break convention. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Customizable conventions&lt;/strong&gt; – Rob makes good choices but I’m free to define my own. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Page life-cycle&lt;/strong&gt; – Durandal has baked in understanding of the birth and death of “pages” so I don’t have to make up my own hacks to ensure that new pages are initialized on creation and cleaned up on destruction. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Asynchrony throughout&lt;/strong&gt; – Need to wait for the user to confirm or cancel before moving off the page? That’s easy in Durandal because asynchrony is plumbed through the page life-cycle and everywhere else. Dynamically load optional modules on-demand? Easy. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Diagnostics&lt;/strong&gt; – With debug mode turned on the console tells me exactly what choices Durandal is making for me as they happen. I can tap into that logging pipeline with my own diagnostics. &lt;/li&gt;      &lt;li&gt;&lt;strong&gt;Write less, do more&lt;/strong&gt; – You all know what I mean. We all want to write less code. That’s the motherhood and apple pie that every framework promises. They usually deliver something else. Check out the &lt;a href="http://vimeo.com/82601948"&gt;nextGen Durandal sample video&lt;/a&gt; and tell me what other technology is that clear and concise. &lt;/li&gt;   &lt;/ul&gt; &lt;/blockquote&gt;  &lt;p&gt;We talked to Rob Eisenberg about what he wants to accomplish on the Durandal Kickstarter on Herding Code: &lt;a href="http://herdingcode.com/herding-code-182-durandal-kickstarter-with-rob-eisenberg/"&gt;Herding Code 182: Durandal Kickstarter with Rob Eisenberg&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Download / Listen:&lt;/p&gt; &lt;audio controls&gt; &lt;source src="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3" type="audio/mpeg"&gt; &lt;a href="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3"&gt;http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3&lt;/a&gt; &lt;/audio&gt; &lt;/p&gt;  &lt;p&gt;One of the things that really stood out for me was what Rob's doing with cutting edge browser and JavaScript technologies for the Durandal nextGen. He's investing heavily in a module system that works with ES6 modules, AMD and CommonJS. He's building on HTML Templates and Web Components. In addition to light weight, modular code, he's seeing 2-3x performance benefits over AngularJS. And it's all polyfilled so it works in current browsers while waiting for these features to ship. The result is that this is a great investment not only in a great next-generation SPA framework, but in the web in general: by backing Rob, you're getting real-world implementation of these specs early so we can get them right the first time.&lt;/p&gt;  &lt;p&gt;The main benefit of backing this Kickstarter is that you free Rob up from consulting work so Durandal gets these amazing features faster. The secondary benefit for backers is that Rob will be producing some great training series - video and source code included.&lt;/p&gt;  &lt;p&gt;As of now, there's still a good way to go on getting this funded. Pitch in and tell someone else to do so, too!&lt;/p&gt;  &lt;h2&gt;bitCommander&lt;/h2&gt;  &lt;p&gt;bitCommander is a really interesting file manager for Windows. It's already hit its funding goal as I write this. If you beat the end of the Kickstarter campaign, you can get a discount on it, and if not you'll want to pay the full price for it because this thing is looking really cool. &lt;/p&gt;  &lt;p&gt;I like the recent changes to the Windows File Explorer in Windows 8 - the ribbon's really nice, and the file copy experience is vastly improved, for instance. But when you're doing things that involve multiple simultaneous views - like assembling a lot of files, for instance - having several instances of File Explorer open gets clunky.&lt;/p&gt;  &lt;p&gt;Check out how browsing in bitCommander looks (all images below from the &lt;a href="http://bit-commander.com/"&gt;bitCommander website&lt;/a&gt;): &lt;/p&gt;  &lt;p&gt;&lt;a title="2014-01-08_13h36_32" href="http://www.flickr.com/photos/36836555@N00/11843915706/"&gt;&lt;img border="0" alt="2014-01-08_13h36_32" src="http://farm6.static.flickr.com/5486/11843915706_d2ec789ccc_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;You might think it's just &lt;a href="http://en.wikipedia.org/wiki/Miller_Columns"&gt;Miller columns&lt;/a&gt; (recently popularized as the OS X Finder columns view mode, but dates all the way back to 1980). That alone would be pretty nice, but there's a lot more to it. There are tons of other great features, but I think my favorite is the temp list and batch support.&lt;/p&gt;  &lt;p&gt;&lt;img src="http://bit-commander.com/GIF/bitcommander-batch2.gif" /&gt;&lt;/p&gt;  &lt;p&gt;There's a lot of other cool stuff, like tabs, nice thumbnail display (with details), intelligent filename shortening and more. I think what I like most about this is that it adds a lot of features but keep the design simple and focused. See what I mean on the &lt;a href="http://bit-commander.com/"&gt;bitCommander website&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Here's mockup of a possible additional feature that Milos is looking at adding: integrated command windows, sync'd to the current browsing directory:&lt;/p&gt;  &lt;p&gt;&lt;img src="http://bit-commander.com/Mockup-CommandLine.jpg" /&gt;&lt;/p&gt;  &lt;p&gt;Un-disclaimer: I backed both of these projects and don't get anything for talking about them. I just like them.&lt;/p&gt;  &lt;p&gt;Go back &lt;a href="http://www.kickstarter.com/projects/953554185/bitcommander"&gt;bitCommander&lt;/a&gt; and &lt;a href="http://www.kickstarter.com/projects/eisenbergeffect/durandal-2014"&gt;Durandal&lt;/a&gt;!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=mcuBmhcTKMk:kc_JprizpZg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=mcuBmhcTKMk:kc_JprizpZg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=mcuBmhcTKMk:kc_JprizpZg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=mcuBmhcTKMk:kc_JprizpZg:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=mcuBmhcTKMk:kc_JprizpZg:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/mcuBmhcTKMk" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 08 Jan 2014 22:01:12 Z</pubDate><enclosure url="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3" type="audio/mpeg" length="20303638" /><media:content url="http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3" fileSize="20303638" type="audio/mpeg" xmlns:media="http://search.yahoo.com/mrss/"></media:content><itunes:explicit xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">no</itunes:explicit><itunes:subtitle xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"> I like Kickstarter. It's not a store, it's an easy way to help fund creative projects. You back projects you find exciting at different reward levels, and then follow along with the project's progress. I blogged about the AGENT watch last June and was ex</itunes:subtitle><itunes:summary xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"> I like Kickstarter. It's not a store, it's an easy way to help fund creative projects. You back projects you find exciting at different reward levels, and then follow along with the project's progress. I blogged about the AGENT watch last June and was excited to see them hit 10x their goal - I'm really looking forward to getting my AGENT watch when they ship. Preemptive disclaimer: As I said, it's not a store. You're funding a project with goals and risks and target timelines. The average contribution amounts aren't that high and I fund projects that I want to support, so I'm okay with that. If you're not, Kickstarter's not your thing, and that's fine too. I wanted to help get the word out about two recent Kickstarter projects I've backed (and been tweeting about): Durandal and bitCommander. Both end soon (bitCommander ends on Jan 9, Durandal ends on Jan 10). Durandal Durandal is an open source JavaScript framework that helps you build full-featured single page applications. Ward Bell summed up what's unique about Durandal pretty well: What’s so great about it? What’s distinctive about it? Rob has his inventory of laudable features (and its impressive). Here are some of the aspects of nextGen Durandal that I love … and that have no equal among alternative frameworks: Convention over configuration – I hate writing and maintaining “switch board” code to connect FooViewModel to FooView and FooRoute etc. I want to say “Foo” and be done with it … until and unless I have a compelling reason to break convention. Customizable conventions – Rob makes good choices but I’m free to define my own. Page life-cycle – Durandal has baked in understanding of the birth and death of “pages” so I don’t have to make up my own hacks to ensure that new pages are initialized on creation and cleaned up on destruction. Asynchrony throughout – Need to wait for the user to confirm or cancel before moving off the page? That’s easy in Durandal because asynchrony is plumbed through the page life-cycle and everywhere else. Dynamically load optional modules on-demand? Easy. Diagnostics – With debug mode turned on the console tells me exactly what choices Durandal is making for me as they happen. I can tap into that logging pipeline with my own diagnostics. Write less, do more – You all know what I mean. We all want to write less code. That’s the motherhood and apple pie that every framework promises. They usually deliver something else. Check out the nextGen Durandal sample video and tell me what other technology is that clear and concise. We talked to Rob Eisenberg about what he wants to accomplish on the Durandal Kickstarter on Herding Code: Herding Code 182: Durandal Kickstarter with Rob Eisenberg Download / Listen: http://herdingcode.com/wp-content/uploads/HerdingCode-0182-Durandal-Kickstarter.mp3 One of the things that really stood out for me was what Rob's doing with cutting edge browser and JavaScript technologies for the Durandal nextGen. He's investing heavily in a module system that works with ES6 modules, AMD and CommonJS. He's building on HTML Templates and Web Components. In addition to light weight, modular code, he's seeing 2-3x performance benefits over AngularJS. And it's all polyfilled so it works in current browsers while waiting for these features to ship. The result is that this is a great investment not only in a great next-generation SPA framework, but in the web in general: by backing Rob, you're getting real-world implementation of these specs early so we can get them right the first time. The main benefit of backing this Kickstarter is that you free Rob up from consulting work so Durandal gets these amazing features faster. The secondary benefit for backers is that Rob will be producing some great training series - video and source code included. As of now, there's still a good way to go on getting this funded. Pitch in and tell someone else to do so, too! bitCommander bitCommander is a really interesting file manager for Windows. It</itunes:summary><itunes:keywords xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">Browsers - Web Development, Tools</itunes:keywords><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/two-great-kickstarter-projects-ending-soon-durandal-javascript-framework-and-bitcommander-file-manager</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/a-quick-look-at-the-new-visual-studio-online-quot-monaco-quot-code-editor</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/ghc_EPhp-xo/a-quick-look-at-the-new-visual-studio-online-quot-monaco-quot-code-editor</link><title>A look at the new Visual Studio Online "Monaco" code editor</title><description>&lt;p&gt;One of the most interesting announcements at the Visual Studio 2013 Launch today was the Monaco editor in Visual Studio Online. &lt;/p&gt;  &lt;p&gt;I've seen little hints of this coming - for example, Scott Hanselman's post in August: &lt;a href="http://www.hanselman.com/blog/ARichNewJavaScriptCodeEditorSpreadingToSeveralMicrosoftWebSites.aspx"&gt;A rich new JavaScript code editor spreading to several Microsoft web sites&lt;/a&gt;. And if you looked around the command-line Kudu interface on an Azure Web Site (available at https://&amp;lt;SITENAME&amp;gt;.scm.azurewebsites.net) there's been a lightweight file editor available for a little while.&lt;/p&gt;  &lt;p&gt;After the announcement today, I dug up enough info to be dangerous and took it for a quick spin. Quick disclaimer: this is me playing around for a bit, it's not an official announcement.&lt;/p&gt;  &lt;h2&gt;Some top Monaco editor links&lt;/h2&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/b/somasegar/archive/2013/11/13/visual-studio-2013-launch-announcing-visual-studio-online.aspx"&gt;Visual Studio 2013 Launch: Announcing Visual Studio Online&lt;/a&gt; - Soma's announcement post gives a quick overview. More importantly, it links to a series of videos on Channel 9 which overview the Monaco editor and demonstrate using it in a few different scenarios.&lt;/p&gt;  &lt;p&gt;Channel 9 series: &lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco"&gt;Visual Studio Online &amp;quot;Monaco&amp;quot;&lt;/a&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/First-Steps"&gt;First Steps&lt;/a&gt; (2 minutes, 26 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Navigating-the-environment"&gt;Navigating the environment&lt;/a&gt; (4 minutes, 29 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Editor-Tips-and-Tricks"&gt;Editor Tips and Tricks&lt;/a&gt; (8 minutes, 45 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-ASPNET"&gt;Getting started with ASP.NET&lt;/a&gt; (2 minutes, 41 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-nodejs"&gt;Getting started with node.js&lt;/a&gt; (5 minutes, 33 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-PHP"&gt;Getting started with PHP&lt;/a&gt; (4 minutes, 10 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Using-LESS-in-nodejs"&gt;Using LESS in node.js&lt;/a&gt; (3 minutes, 15 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Debugging-nodejs"&gt;Debugging node.js&lt;/a&gt; (2 minutes, 52 seconds)&lt;/p&gt;   &lt;/li&gt;    &lt;li&gt;     &lt;p&gt;&lt;a href="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-TypeScript"&gt;Getting started with TypeScript&lt;/a&gt; (3 minutes, 48 seconds)&lt;/p&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I'll embed some of these videos at the end of the post - not here, or you'd get distracted and you'd never read the rest of the post, right?&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The big one&lt;/strong&gt;: &lt;a href="http://www.visualstudio.com/en-us/news/2013-nov-13-vso"&gt;Visual Studio Online updates&lt;/a&gt; post on the Visual Studio Online features timeline news feed thing. Can I call it a blog? I just don't know. But it's wonderful.&lt;/p&gt;  &lt;p&gt;Specifically, the &lt;strong&gt;Announcing Visual Studio Online “Monaco”&lt;/strong&gt; section shows how to turn it on and get started.&lt;/p&gt;  &lt;h2&gt;Walkthrough: Editing an ASP.NET site in the browser&lt;/h2&gt;  &lt;p&gt;&lt;em&gt;Full disclosure: I tried bumbling my way through this and made a mess, then went crying to &lt;a href="http://blog.davidebbo.com/"&gt;David Ebbo&lt;/a&gt; for help. He set me straight.&lt;/em&gt;&lt;/p&gt;  &lt;h3&gt;Step 1: Set up a Windows Azure Web Site with git deployment&lt;/h3&gt;  &lt;p&gt;First, I'm going to create a new ASP.NET site in Visual Studio 2013 and deploy it to git. Now, I could use Visual Studio Online's git hosting - of course it works well, and works with the Visual Studio Online Monaco editor. But you'd suspect some tricky business, so I'm going to use a GitHub repository.&lt;/p&gt;  &lt;p&gt;So, I'm creating a simple ASP.NET MVC 5 application (with no authentication so I don't need to deploy a database) and pushing it to a GitHub repository.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-11-13_11h21_09" href="http://www.flickr.com/photos/36836555@N00/10842274533/"&gt;&lt;img border="0" alt="2013-11-13_11h21_09" src="http://farm6.static.flickr.com/5539/10842274533_5e3352d0f6.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-11-13_11h22_11" href="http://www.flickr.com/photos/36836555@N00/10842282363/"&gt;&lt;img border="0" alt="2013-11-13_11h22_11" src="http://farm8.static.flickr.com/7396/10842282363_cc8aba40a7.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Now I'm dropping in a standard .gitignore and initializing the repo, then pushing to GitHub.&lt;/p&gt;  &lt;pre&gt;
git init
git add .
git commit -m &amp;quot;Initial commit&amp;quot;
git remote add github https://github.com/jongalloway/PlayingWithMonacoEditor.git
git push -u github master&lt;/pre&gt;

&lt;p&gt;Now I'm going to create a new Windows Azure Web Site using that GitHub repo as the source. This has been available for a long time, but I'm showing the steps in case it's new to you.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h06_26" href="http://www.flickr.com/photos/36836555@N00/10847100516/"&gt;&lt;img border="0" alt="2013-11-13_18h06_26" src="http://farm4.static.flickr.com/3688/10847100516_a186f061c9_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h08_04" href="http://www.flickr.com/photos/36836555@N00/10847124636/"&gt;&lt;img border="0" alt="2013-11-13_18h08_04" src="http://farm4.static.flickr.com/3806/10847124636_413eaedb09_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h10_21" href="http://www.flickr.com/photos/36836555@N00/10847225454/"&gt;&lt;img border="0" alt="2013-11-13_18h10_21" src="http://farm4.static.flickr.com/3708/10847225454_8c0039eef4_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h16_54" href="http://www.flickr.com/photos/36836555@N00/10847160185/"&gt;&lt;img border="0" alt="2013-11-13_18h16_54" src="http://farm4.static.flickr.com/3760/10847160185_f615da3a8c_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 2: Set up for editing using Visual Studio Online&lt;/h3&gt;

&lt;p&gt;Okay, we've got a live repo and the site's deployed. Now we want to edit that source using Visual Studio Online.&lt;/p&gt;

&lt;p&gt;Here's the trick I learned from David Ebbo - you want to create another Windows Azure Web Site that's just associated with the source, not the deployment. So I head back into the portal and create a new Web Site just for source editing.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h20_03" href="http://www.flickr.com/photos/36836555@N00/10847696613/"&gt;&lt;img border="0" alt="2013-11-13_18h20_03" src="http://farm8.static.flickr.com/7338/10847696613_3e428aa7e3_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oops, I created it in Western Europe. Good thing the internets are fast.&lt;/p&gt;

&lt;p&gt;Now, in the new site, I head over to the Configure tab and enable &amp;quot;Edit in Visual Studio Online&amp;quot;.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h41_38" href="http://www.flickr.com/photos/36836555@N00/10847775773/"&gt;&lt;img border="0" alt="2013-11-13_18h41_38" src="http://farm8.static.flickr.com/7301/10847775773_f4172f28ba_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Can you feel it? We're almost there. Promise.&lt;/p&gt;

&lt;p&gt;Now I head over to the Dashboard tab, and click on the &lt;em&gt;Edit in Visual Studio Online&lt;/em&gt; link. Like you, I can hardly contain my excitement! What will happen?&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_14h59_14" href="http://www.flickr.com/photos/36836555@N00/10844926085/"&gt;&lt;img border="0" alt="2013-11-13_14h59_14" src="http://farm6.static.flickr.com/5513/10844926085_277b3296cd_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh, a login prompt. Hmm.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_15h00_26" href="http://www.flickr.com/photos/36836555@N00/10844936995/"&gt;&lt;img border="0" alt="2013-11-13_15h00_26" src="http://farm3.static.flickr.com/2890/10844936995_0722c4a61e_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fortunately, I know my username and password. If you forget, you can reset your password in the portal, on the Dashboard tab. Okay, with that done, here's what we get:&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_15h04_13" href="http://www.flickr.com/photos/36836555@N00/10845320933/"&gt;&lt;img border="0" alt="2013-11-13_15h04_13" src="http://farm8.static.flickr.com/7379/10845320933_cd9b853311.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hooray! Yeah, science!&lt;/p&gt;

&lt;h3&gt;Step 3: Appeal to the hipster demographic&lt;/h3&gt;

&lt;p&gt;Wait, you're not impressed because I used IE, is that it? You wanted me to see if it worked in another browser?&lt;/p&gt;

&lt;p&gt;Yeah, maybe this is an opportunity to dust off that Mac Mini to see how it does there. Hold on, it's over here somewhere. Under the... oh, that bill's overdue. Hm. Behind the... oh, there it is. Okay!&lt;/p&gt;

&lt;p&gt;So I log back in to the Azure portal on click that same Edit In Visual Studio Online link. Hey, there it is again! I'll show this screenshot bigger this time.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_18h49_05" href="http://www.flickr.com/photos/36836555@N00/10847679524/"&gt;&lt;img border="0" alt="2013-11-13_18h49_05" src="http://farm3.static.flickr.com/2841/10847679524_1ec29b0ba0_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 4: Clone the repo&lt;/h3&gt;

&lt;p&gt;Now I click on the git icon on the left side and enter my git url, then hit clone.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_19h00_18" href="http://www.flickr.com/photos/36836555@N00/10847818554/"&gt;&lt;img border="0" alt="2013-11-13_19h00_18" src="http://farm8.static.flickr.com/7447/10847818554_2e9a9a7018_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here it goes...&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_19h01_58" href="http://www.flickr.com/photos/36836555@N00/10847681795/"&gt;&lt;img border="0" alt="2013-11-13_19h01_58" src="http://farm3.static.flickr.com/2807/10847681795_395d8a2fb5_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, that looks really cool, and my code's visible on the left. Before I start editing, I want to make sure I can build it. In the console window, I'm going to type in &amp;quot;msbuild&amp;quot; and cross my fingers.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_19h09_25" href="http://www.flickr.com/photos/36836555@N00/10847835916/"&gt;&lt;img border="0" alt="2013-11-13_19h09_25" src="http://farm4.static.flickr.com/3791/10847835916_08b4c86ccc_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, we couldn't expect it to work on the first shot, could we? I...&lt;/p&gt;

&lt;p&gt;Oh, it did work. Well, hey there.&lt;/p&gt;

&lt;p&gt;So, back on my Windows box, here's what the site looks like in IE11.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_19h47_36" href="http://www.flickr.com/photos/36836555@N00/10848500103/"&gt;&lt;img border="0" alt="2013-11-13_19h47_36" src="http://farm4.static.flickr.com/3732/10848500103_491593edbe_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 5: Do some editing. That's what started this whole mess, remember?&lt;/h3&gt;

&lt;p&gt;I'm going to head back over to the Mac and edit some code. To make this interesting, I'm going to edit C#, CSHTML, CSS and JavaScript. What could go wrong?&lt;/p&gt;

&lt;p&gt;First I edit the HomeController to add something to the ViewBag.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h04_39" href="http://www.flickr.com/photos/36836555@N00/10849250694/"&gt;&lt;img border="0" alt="2013-11-13_20h04_39" src="http://farm6.static.flickr.com/5489/10849250694_0ccb281c8f_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next I edit the CSHTML, adding in some HTML and C# changes.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h23_39" href="http://www.flickr.com/photos/36836555@N00/10849078575/"&gt;&lt;img border="0" alt="2013-11-13_21h23_39" src="http://farm4.static.flickr.com/3809/10849078575_8eb9efef42_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, I make some CSS edits.&lt;/p&gt;

&lt;p&gt;I'm kind of rushing through this, but there's code completion and IntelliSense all along the way. For instance, when I start editing a CSS color, I get a dropdown with available colors.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h14_44" href="http://www.flickr.com/photos/36836555@N00/10849254236/"&gt;&lt;img border="0" alt="2013-11-13_20h14_44" src="http://farm6.static.flickr.com/5546/10849254236_02f57657ae_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I select a color, I can see what it will look like in the editor.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h15_02" href="http://www.flickr.com/photos/36836555@N00/10849257044/"&gt;&lt;img border="0" alt="2013-11-13_20h15_02" src="http://farm6.static.flickr.com/5543/10849257044_e690fef4ec_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I build to make sure it's all still good.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h50_22" href="http://www.flickr.com/photos/36836555@N00/10849447323/"&gt;&lt;img border="0" alt="2013-11-13_20h50_22" src="http://farm4.static.flickr.com/3750/10849447323_fca9e1d149_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 6: Deploy&lt;/h3&gt;

&lt;p&gt;And git push to deploy.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_20h51_44" href="http://www.flickr.com/photos/36836555@N00/10849273044/"&gt;&lt;img border="0" alt="2013-11-13_20h51_44" src="http://farm8.static.flickr.com/7389/10849273044_5b9d1e7cd5_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 7: Full circle, with a pirouette and a lemon twist &lt;/h3&gt;

&lt;p&gt;And hopping back to my Windows / IE 11 browser, we can see that it works.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h22_15" href="http://www.flickr.com/photos/36836555@N00/10849502723/"&gt;&lt;img border="0" alt="2013-11-13_21h22_15" src="http://farm8.static.flickr.com/7401/10849502723_c08122e585_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;What's the point?&lt;/h2&gt;

&lt;p&gt;Why did we do this? What did it buy us?&lt;/p&gt;

&lt;p&gt;Well, for one thing, we grabbed an ASP.NET repo from GitHub in a browser, on a Mac, made some code changes, and deployed it. If you've got a browser (free) and a Windows Azure account (free), you can edit and deploy an ASP.NET site. You could do it on an Android tablet, on an iPad, in a boat, with a goat.&lt;/p&gt;

&lt;p&gt;Even if you're on Windows, note that the Visual Studio Online experience didn't require me to sign up for or pay anything. Visual Studio Online is free for projects with five or fewer users, and didn't make me jump through any hoops to get going. That means you can get started using it. If you want more Visual Studio Online or Windows Azure services, you can get them, but there's no roadblock to creating / editing / deploying / maintaining a site right now.&lt;/p&gt;

&lt;p&gt;Oh, and this was ASP.NET MVC 5 - so, all the new stuff works out of the box. Yes, you'd expect that, but it's worth pointing out.&lt;/p&gt;

&lt;h2&gt;Recap and regrets&lt;/h2&gt;

&lt;p&gt;Yes, we've arrived. We deployed code to GitHub, pulled it into a Windows Azure Web Site, edited it in a browser, on a Mac (demo bingo, everyone drink), and saw it automatically deployed and running in a browser. Neat.&lt;/p&gt;

&lt;p&gt;What I didn't have time to show you was all the cool features in the Monaco editor.&lt;/p&gt;

&lt;p&gt;For instance, you can click on the settings gear in the upper right corner and switch to the Visual Studio dark theme, which is so much cooler.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h46_07" href="http://www.flickr.com/photos/36836555@N00/10849615443/"&gt;&lt;img border="0" alt="2013-11-13_21h46_07" src="http://farm8.static.flickr.com/7303/10849615443_b2a206e760_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I regret that we didn't have time to look at all of the cool editor features, like the editor commands shown when you hit ctrl+E.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h48_36" href="http://www.flickr.com/photos/36836555@N00/10849307605/"&gt;&lt;img border="0" alt="2013-11-13_21h48_36" src="http://farm4.static.flickr.com/3790/10849307605_ec7d9ffbe3_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wish we'd had time to look at the fancy IntelliSense features, including support for jQuery function overloads.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h50_33" href="http://www.flickr.com/photos/36836555@N00/10849320255/"&gt;&lt;img border="0" alt="2013-11-13_21h50_33" src="http://farm8.static.flickr.com/7426/10849320255_5f39bf2cac_b.jpg" width="379" height="64" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And it would have been neat to cover the cool diff-on-commit view.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-11-13_21h52_46" href="http://www.flickr.com/photos/36836555@N00/10849680643/"&gt;&lt;img border="0" alt="2013-11-13_21h52_46" src="http://farm6.static.flickr.com/5514/10849680643_3c36815a82_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, alas, it was not to be.&lt;/p&gt;

&lt;p&gt;For those features, and many more, I recommend you check out the videos I referenced earlier. I'll even embed some of those in the next section, because this post wasn't quite long enough.&lt;/p&gt;

&lt;h2&gt;&lt;/h2&gt;

&lt;h2&gt;Neat Videos You Should Watch&lt;/h2&gt;

&lt;p&gt;All of the Monaco videos are good, but these are some of my favorite.&lt;/p&gt;

&lt;p&gt;First Steps&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/First-Steps/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;p&gt;Editor Tips And Tricks&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Editor-Tips-and-Tricks/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;p&gt;Getting Started With PHP&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-PHP/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;p&gt;Debugging node.js&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Debugging-nodejs/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;p&gt;And last, but not least, Getting started with TypeScript. Why? Because the Monaco editor was written in TypeScript!&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Visual-Studio-Online-Monaco/Getting-started-with-TypeScript/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ghc_EPhp-xo:pKP-b0LEG0s:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ghc_EPhp-xo:pKP-b0LEG0s:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=ghc_EPhp-xo:pKP-b0LEG0s:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ghc_EPhp-xo:pKP-b0LEG0s:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=ghc_EPhp-xo:pKP-b0LEG0s:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/ghc_EPhp-xo" height="1" width="1" alt=""/&gt;</description><pubDate>Thu, 14 Nov 2013 06:00:11 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/a-quick-look-at-the-new-visual-studio-online-quot-monaco-quot-code-editor</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/top-things-web-developers-should-know-about-the-visual-studio-2013-release</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/fuTNlQi-uU4/top-things-web-developers-should-know-about-the-visual-studio-2013-release</link><category>ASP.NET</category><category>ASP.NET MVC</category><category>ASP.NET Web API</category><category>Visual Studio</category><title>Top things web developers should know about the Visual Studio 2013 release</title><description>&lt;p&gt;ASP.NET and Web Tools for Visual Studio 2013 Release NotesASP.NET and Web Tools for Visual Studio 2013 Release NotesSummary for lazy readers:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Visual Studio 2013 is now available for &lt;a href="http://www.microsoft.com/visualstudio/eng/downloads"&gt;download on the Visual Studio site&lt;/a&gt; and on &lt;a href="http://msdn.microsoft.com/en-US/subscriptions/downloads/"&gt;MSDN subscriber downloads&lt;/a&gt;) &lt;/li&gt;    &lt;li&gt;Visual Studio 2013 installs side by side with Visual Studio 2012 and supports round-tripping between Visual Studio versions, so you can try it out without committing to a switch &lt;/li&gt;    &lt;li&gt;Visual Studio 2013 ships with the new version of ASP.NET, which includes ASP.NET MVC 5, ASP.NET Web API 2, Razor 3, Entity Framework 6 and SignalR 2.0 &lt;/li&gt;    &lt;li&gt;The new releases ASP.NET focuses on One ASP.NET, so core features and web tools work the same across the platform (e.g. adding ASP.NET MVC controllers to a Web Forms application) &lt;/li&gt;    &lt;li&gt;New core features include new templates based on Bootstrap, a new scaffolding system, and a new identity system &lt;/li&gt;    &lt;li&gt;Visual Studio 2013 is an incredible editor for web files, including HTML, CSS, JavaScript, Markdown, LESS, Coffeescript, Handlebars, Angular, Ember, Knockdown, etc. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Top links:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Visual Studio 2013 content on the ASP.NET site are in the standard new releases area: &lt;a href="http://www.asp.net/vnext"&gt;http://www.asp.net/vnext&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes"&gt;ASP.NET and Web Tools for Visual Studio 2013 Release Notes&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Short intro videos on the new &lt;a href="http://www.asp.net/visual-studio/overview/2013"&gt;Visual Studio web editor features from Scott Hanselman and Mads Kristensen&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/10/17/announcing-release-of-asp-net-and-web-tools-for-visual-studio-2013.aspx"&gt;Announcing release of ASP.NET and Web Tools for Visual Studio 2013&lt;/a&gt; post on the official .NET Web Development and Tools Blog &lt;/li&gt;    &lt;li&gt;The &lt;a href="http://blogs.msdn.com/b/webdev/"&gt;.NET Web Development and Tools Blog&lt;/a&gt; has a lot of good post about the release&lt;/li&gt;    &lt;li&gt;Scott Guthrie's post: &lt;a href="http://weblogs.asp.net/scottgu/archive/2013/10/17/announcing-the-release-of-visual-studio-2013-and-great-improvements-to-asp-net-and-entity-framework.aspx"&gt;Announcing the Release of Visual Studio 2013 and Great Improvements to ASP.NET and Entity Framework&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Scott Hanselman did a series of quick feature overview videos on the ASP.NET site. These are really, really well done. Watch them here: &lt;a href="http://www.asp.net/visual-studio/overview/2013"&gt;http://www.asp.net/visual-studio/overview/2013&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Okay, for those of you who are still with me, let's dig in a bit.&lt;/p&gt;  &lt;h2&gt;Quick web dev notes on downloading and installing Visual Studio 2013&lt;/h2&gt;  &lt;p&gt;I found Visual Studio 2013 to be a pretty fast install. According to Brian Harry's release post, &lt;a href="http://blogs.msdn.com/b/bharry/archive/2013/10/17/visual-studio-2013-rtm-available.aspx"&gt;installing over pre-release versions of Visual Studio is supported&lt;/a&gt;.&amp;#160; I've installed the release version over pre-release versions, and it worked fine.&lt;/p&gt;  &lt;p&gt;If you're only going to be doing web development, you can speed up the install if you just select Web Developer tools.&lt;/p&gt;  &lt;p&gt;&lt;a title="Visual Studio 2013 installer" href="http://www.flickr.com/photos/36836555@N00/10329929544/"&gt;&lt;img border="0" alt="Visual Studio 2013 installer" src="http://farm4.static.flickr.com/3759/10329929544_4eaf8b4e42.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Of course, as a good Microsoft employee, I'll mention that you might also want to install some of those other features, like the Store apps for Windows 8 and the Windows Phone 8.0 SDK, but they do download and install a lot of other stuff (e.g. the Windows Phone SDK sets up Hyper-V and downloads several GB's of VM's). So if you're planning just to do web development for now, you can pick just the Web Developer Tools and install the other stuff later.&lt;/p&gt;  &lt;p&gt;If you've got a fast internet connection, I recommend using the web installer instead of downloading the ISO. The ISO includes all the features, whereas the web installer just downloads what you're installing.&lt;/p&gt;  &lt;p&gt;Visual Studio 2013 development settings and color theme&lt;/p&gt;  &lt;p&gt;When you start up Visual Studio, it'll prompt you to pick some defaults. These are totally up to you -whatever suits your development style - and you can change them later.&lt;/p&gt;  &lt;p&gt;&lt;a title="Visual Studio 2013 color theme" href="http://www.flickr.com/photos/36836555@N00/10330357344/"&gt;&lt;img border="0" alt="Visual Studio 2013 color theme" src="http://farm6.static.flickr.com/5505/10330357344_accd88b546.jpg" width="391" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;As I said, these are completely up to you. I recommend either the Web Development or Web Development (Code Only) settings. The only real difference is that Code Only hides the toolbars, and you can switch between them using Tools / Import and Export Settings / Reset.&lt;/p&gt;  &lt;h3&gt;Web Development settings&lt;/h3&gt;  &lt;p&gt;&lt;a title="Web Development settings" href="http://www.flickr.com/photos/36836555@N00/10330563935/"&gt;&lt;img border="0" alt="Web Development settings" src="http://farm8.static.flickr.com/7418/10330563935_af181417dc.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Web Development (code only) settings&lt;/p&gt;  &lt;p&gt;&lt;a title="Web Development (code only) settings" href="http://www.flickr.com/photos/36836555@N00/10330585416/"&gt;&lt;img border="0" alt="Web Development (code only) settings" src="http://farm6.static.flickr.com/5547/10330585416_596ffe6103.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Usually I've just gone with Web Development (code only) in the past because I just want to focus on the code, although the Standard toolbar does make it easier to switch default web browsers. More on that later.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_09h24_56" href="http://www.flickr.com/photos/36836555@N00/10330638714/"&gt;&lt;img border="0" alt="2013-10-17_09h24_56" src="http://farm8.static.flickr.com/7378/10330638714_965cb1a342.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h3&gt;Color theme&lt;/h3&gt;  &lt;p&gt;Sigh. Okay, everyone's got their favorite colors. I alternate between Light and Dark depending on my mood, and I personally like how the low contrast on the window chrome in those themes puts the emphasis on my code rather than the tabs and toolbars. I know some people got pretty worked up over that, though, and wanted the blue theme back. I personally don't like it - it reminds me of ancient versions of Visual Studio that I don't want to think about anymore.&lt;/p&gt;  &lt;p&gt;So here's the thing: if you install Visual Studio Ultimate, it defaults to Blue. The other versions default to Light. If you use Blue, I won't criticize you - out loud, that is. You can change themes really easily - either Tools / Options / Environment / General, or the smart way: ctrl+q for quick launch, then type Theme and hit enter.&lt;/p&gt;  &lt;h3&gt;Signing in&lt;/h3&gt;  &lt;p&gt;During the first run, you'll be prompted to sign in. You don't have to - you can click the &amp;quot;Not now, maybe later&amp;quot; link at the bottom of that dialog. I recommend signing in, though. It's not hooked in with licensing or tracking the kind of code you write to sell you components. It is doing good things, like&amp;#160; &lt;a href="http://msdn.microsoft.com/en-US/library/vstudio/dn135229(v=vs.120).aspx"&gt;syncing your Visual Studio settings between computers.&lt;/a&gt; More about that &lt;a href="http://blogs.msdn.com/b/visualstudio/archive/2013/06/28/welcome-sign-in-to-visual-studio.aspx"&gt;here&lt;/a&gt;. So, you don't have to, but I sure do.&lt;/p&gt;  &lt;h2&gt;Overview of shiny new things in ASP.NET land&lt;/h2&gt;  &lt;p&gt;There are a lot of good new things in ASP.NET. I'll list some of my favorite here, but you can &lt;a href="http://www.asp.net/vnext"&gt;read more on the ASP.NET site&lt;/a&gt;.&lt;/p&gt;  &lt;h2&gt;One ASP.NET&lt;/h2&gt;  &lt;p&gt;You've heard us talk about this for a while. The idea is that options are good, but choice can be a burden. When you start a new ASP.NET project, why should you have to make a tough decision - with long-term consequences - about how your application will work? If you want to use ASP.NET Web Forms, but have the option of adding in ASP.NET MVC later, why should that be hard? It's all ASP.NET, right?&lt;/p&gt;  &lt;p&gt;Ideally, you'd just decide that you want to use ASP.NET to build sites and services, and you could use the appropriate tools (the green blocks below) as you needed them.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_09h56_49" href="http://www.flickr.com/photos/36836555@N00/10331262063/"&gt;&lt;img border="0" alt="2013-10-17_09h56_49" src="http://farm8.static.flickr.com/7378/10331262063_df982ef217.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;So, here it is.&lt;/p&gt;  &lt;p&gt;When you create a new ASP.NET application, you just create an ASP.NET application.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_09h59_58" href="http://www.flickr.com/photos/36836555@N00/10331142464/"&gt;&lt;img border="0" alt="2013-10-17_09h59_58" src="http://farm8.static.flickr.com/7457/10331142464_d1147a5268.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Next, you can pick from some templates to get you started... but these are different. They're not &amp;quot;painful decision&amp;quot; templates, they're just some starting pieces. And, most importantly, you can mix and match. I can pick a &amp;quot;mostly&amp;quot; Web Forms template, but include MVC and Web API folders and core references.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_10h05_27" href="http://www.flickr.com/photos/36836555@N00/10331394573/"&gt;&lt;img border="0" alt="2013-10-17_10h05_27" src="http://farm6.static.flickr.com/5488/10331394573_69edea75c6.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;If you've tried to mix and match in the past, you're probably aware that it was possible, but not pleasant. ASP.NET MVC project files contained special project type GUIDs, so you'd only get controller scaffolding support in a Web Forms project if you manually edited the csproj file. Features in one stack didn't work in others. Project templates were painful choices. That's no longer the case. Hooray! &lt;/p&gt;  &lt;p&gt;I just did a demo in a presentation last week where I created a new Web Forms + MVC + Web API site, built a model, scaffolded MVC and Web API controllers with EF Code First, add data in the MVC view, viewed it in Web API, then added a GridView to the Web Forms Default.aspx page and bound it to the Model. In about 5 minutes. Sure, it's a simple example, but it's great to be able to share code and features across the whole ASP.NET family.&lt;/p&gt;  &lt;h2&gt;Authentication&lt;/h2&gt;  &lt;p&gt;In the past, authentication was built into the templates. So, for instance, there was an ASP.NET MVC 4 Intranet Project template which created a new ASP.NET MVC 4 application that was preconfigured for Windows Authentication. All of that authentication stuff was built into each template, so they varied between the stacks, and you couldn't reuse them. You didn't see a lot of changes to the authentication options, since they required big changes to a bunch of project templates.&lt;/p&gt;  &lt;p&gt;Now, the new project dialog includes a common authentication experience. When you hit the Change Authentication button, you get some common options that work the same way regardless of the template or reference settings you've made. These options work on all ASP.NET frameworks, and all hosting environments (IIS, IIS Express, or OWIN for self-host)&lt;/p&gt;  &lt;p&gt;The default is Individual User Accounts:&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_10h33_15" href="http://www.flickr.com/photos/36836555@N00/10331628534/"&gt;&lt;img border="0" alt="2013-10-17_10h33_15" src="http://farm3.static.flickr.com/2882/10331628534_a671108fd5.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;This is the standard &amp;quot;create a local account, using username / password or OAuth&amp;quot; thing; however, it's all built on the new Identity system. More on that in a second.&lt;/p&gt;  &lt;p&gt;The one setting that has some configuration to it is Organizational Accounts, which lets you configure authentication using Active Directory, Windows Azure Active Directory, or Office 365.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_10h46_50" href="http://www.flickr.com/photos/36836555@N00/10331817455/"&gt;&lt;img border="0" alt="2013-10-17_10h46_50" src="http://farm3.static.flickr.com/2886/10331817455_6a8587930d.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Identity&lt;/h2&gt;  &lt;p&gt;There's a new identity system. We've taken the best parts of the previous ASP.NET Membership and Simple Identity systems, rolled in a lot of feedback and made big enhancements to support important developer concerns like unit testing and extensiblity.&lt;/p&gt;  &lt;p&gt;I've written long posts about ASP.NET identity, and I'll do it again. Soon. This is not that post. The short version is that I think we've finally got just the right Identity system. Some of my favorite features:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;There are simple, sensible defaults that work well - you can File / New / Run / Register / Login, and everything works. &lt;/li&gt;    &lt;li&gt;It supports standard username / password as well as external authentication (OAuth, etc.). &lt;/li&gt;    &lt;li&gt;It's easy to customize without having to re-implement an entire provider. It's built using pluggable pieces, rather than one large monolithic system. &lt;/li&gt;    &lt;li&gt;It's built using interfaces like IUser and IRole that allow for unit testing, dependency injection, etc. &lt;/li&gt;    &lt;li&gt;You can easily add user profile data (e.g. URL, twitter handle, birthday). You just add properties to your ApplicationUser model and they'll automatically be persisted. &lt;/li&gt;    &lt;li&gt;Complete control over how the identity data is persisted. By default, everything works with Entity Framework Code First, but it's built to support changes from small (modify the schema) to big (use another ORM, store your data in a document database or in the cloud or in XML or in the EXIF data of your desktop background or whatever). &lt;/li&gt;    &lt;li&gt;It's configured via OWIN. More on OWIN and Katana later, but the fact that it's built using OWIN means it's portable. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;You can find out more in the &lt;a href="http://www.asp.net/aspnet/overview/authentication-and-identity"&gt;Authentication and Identity section of the ASP.NET site&lt;/a&gt; (and lots more content will be going up there soon).&lt;/p&gt;  &lt;h2&gt;New Bootstrap based project templates&lt;/h2&gt;  &lt;p&gt;The new project templates are built using Bootstrap 3. &lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; (formerly Twitter Bootstrap) is a front-end framework that brings a lot of nice benefits:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;It's responsive, so your projects will automatically scale to device width using CSS media queries. For example, menus are full size on a desktop browser, but on narrower screens you automatically get a mobile-friendly menu. &lt;/li&gt;    &lt;li&gt;The built-in Bootstrap styles make your standard page elements (headers, footers, buttons, form inputs, tables etc.) look nice and modern. &lt;/li&gt;    &lt;li&gt;Bootstrap is themeable, so you can reskin your whole site by dropping in a new Bootstrap theme. Since Bootstrap is pretty popular across the web development community, this gives you a large and rapidly growing variety of templates (free and paid) to choose from. &lt;/li&gt;    &lt;li&gt;Bootstrap also includes a lot of very useful things: components (like progress bars and badges), useful &lt;a href="http://getbootstrap.com/components/#glyphicons"&gt;glyphicons&lt;/a&gt;, and some jQuery plugins for tooltips, dropdowns, carousels, etc.). &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Here's a look at how the responsive part works. When the page is full screen, the menu and header are optimized for a wide screen display:&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h14_50" href="http://www.flickr.com/photos/36836555@N00/10333317854/"&gt;&lt;img border="0" alt="2013-10-17_12h14_50" src="http://farm8.static.flickr.com/7333/10333317854_1c4e65e969.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;When I shrink the page down (this is all based on page width, not useragent sniffing) the menu turns into a nice mobile-friendly dropdown:&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h15_12" href="http://www.flickr.com/photos/36836555@N00/10333498983/"&gt;&lt;img border="0" alt="2013-10-17_12h15_12" src="http://farm4.static.flickr.com/3698/10333498983_cc37fdf536.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;For a quick example, I grabbed a new free theme off &lt;a href="http://bootswatch.com/"&gt;bootswatch.com&lt;/a&gt;. For simple themes, you just need to download the boostrap.css file and replace the /content/bootstrap.css file in your project.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h27_44" href="http://www.flickr.com/photos/36836555@N00/10333348956/"&gt;&lt;img border="0" alt="2013-10-17_12h27_44" src="http://farm6.static.flickr.com/5503/10333348956_d34447d214.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Now when I refresh the page, I've got a new theme:&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h27_33" href="http://www.flickr.com/photos/36836555@N00/10333327544/"&gt;&lt;img border="0" alt="2013-10-17_12h27_33" src="http://farm4.static.flickr.com/3700/10333327544_a506aa8e72.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Scaffolding&lt;/h2&gt;  &lt;p&gt;The big change in scaffolding is that it's one system that works across ASP.NET. You can create a new Empty Web project or Web Forms project and you'll get the Scaffold context menus.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_12h36_14" href="http://www.flickr.com/photos/36836555@N00/10333443175/"&gt;&lt;img border="0" alt="2013-10-17_12h36_14" src="http://farm4.static.flickr.com/3769/10333443175_5f83991f24_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;For release, we've got MVC 5 and Web API 2 controllers. We had a preview of Web Forms scaffolding in the preview releases, but they weren't fully baked for RTM. Look for them in a future update, expected pretty soon.&lt;/p&gt;  &lt;p&gt;This scaffolding system wasn't just changed to work across the ASP.NET frameworks, it's also built to enable future extensibility. That's not in this release, but should also hopefully be out soon.&lt;/p&gt;  &lt;h2&gt;Project Readme page&lt;/h2&gt;  &lt;p&gt;This is a small thing, but I really like it. When you create a new project, you get a Project_Readme.html page that's added to the root of your project and opens in the Visual Studio built-in browser.&lt;/p&gt;  &lt;p&gt;&lt;a title="2013-10-17_14h25_35" href="http://www.flickr.com/photos/36836555@N00/10335264663/"&gt;&lt;img border="0" alt="2013-10-17_14h25_35" src="http://farm4.static.flickr.com/3750/10335264663_304a16c2f9_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I love it.&lt;/p&gt;  &lt;p&gt;A long time ago, when you created a new project we just dumped it on you and left you scratching your head about what to do next. Not ideal.&lt;/p&gt;  &lt;p&gt;Then we started adding a bunch of Getting Started information to the new project templates. That told you what to do next, but you had to delete all of that stuff out of your website. It doesn't belong there. Not ideal.&lt;/p&gt;  &lt;p&gt;This is a simple HTML file that's not integrated into your project code at all. You can delete it if you want. But, it shows a lot of helpful links that are current for the project you just created. In the future, if we add new wacky project types, they can create readme docs with specific information on how to do appropriately wacky things.&lt;/p&gt;  &lt;p&gt;Side note: I really like that they used the internal browser in Visual Studio to show this content rather than popping open an HTML page in the default browser. I hate that. It's annoying. If you're doing that, I hope you'll stop. What if some unnamed person has 40 or 90 tabs saved in their browser session? When you pop open your &amp;quot;Thanks for installing my Visual Studio extension!&amp;quot; page, all eleventy billion tabs start up and I wish I'd never installed your thing. Be like these guys and pop stuff Visual Studio specific HTML docs in the Visual Studio browser.&lt;/p&gt;  &lt;h2&gt;ASP.NET MVC 5&lt;/h2&gt;  &lt;p&gt;The biggest change with ASP.NET MVC 5 is that it's no longer a separate project type. It integrates well with the rest of ASP.NET.&lt;/p&gt;  &lt;p&gt;In addition to that and the other common features we've already looked at (Bootstrap templates, Identity, authentication), here's what's new for ASP.NET MVC.&lt;/p&gt;  &lt;h3&gt;Attribute routing&lt;/h3&gt;  &lt;p&gt;ASP.NET MVC now supports attribute routing, thanks to a contribution by Tim McCall, the author of &lt;a href="http://attributerouting.net/"&gt;http://attributerouting.net&lt;/a&gt;. With attribute routing you can specify your routes by annotating your actions and controllers. This supports some pretty complex, customized routing scenarios, and it allows you to keep your route information right with your controller actions if you'd like.&lt;/p&gt;  &lt;p&gt;Here's a controller that includes an action whose method name is Hiding, but I've used AttributeRouting to configure it to /spaghetti/with-nesting/where-is-waldo&lt;/p&gt;  &lt;pre class="brush: csharp; auto-links: false;"&gt;public class SampleController : Controller
{

    [Route(&amp;quot;spaghetti/with-nesting/where-is-waldo&amp;quot;)]
    public string Hiding() 
    {
        return &amp;quot;You found me!&amp;quot;;
    }
}&lt;/pre&gt;

&lt;p&gt;I enable that in my RouteConfig.cs, and I can use that in conjunction with my other MVC routes like this:&lt;/p&gt;

&lt;pre class="brush: csharp; auto-links: false;"&gt;public class RouteConfig
{
    public static void RegisterRoutes(RouteCollection routes)
    {
        routes.IgnoreRoute(&amp;quot;{resource}.axd/{*pathInfo}&amp;quot;);

        routes.MapMvcAttributeRoutes();

        routes.MapRoute(
            name: &amp;quot;Default&amp;quot;,
            url: &amp;quot;{controller}/{action}/{id}&amp;quot;,
            defaults: new { controller = &amp;quot;Home&amp;quot;, action = &amp;quot;Index&amp;quot;, id = UrlParameter.Optional }
        );
    }
}&lt;/pre&gt;

&lt;p&gt;&lt;a title="2013-10-17_14h06_56" href="http://www.flickr.com/photos/36836555@N00/10334803914/"&gt;&lt;img border="0" alt="2013-10-17_14h06_56" src="http://farm6.static.flickr.com/5536/10334803914_bb41127fc4.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can read &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/10/17/attribute-routing-in-asp-net-mvc-5.aspx"&gt;more about Attribute Routing in ASP.NET MVC 5 here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Filter enhancements&lt;/h3&gt;

&lt;p&gt;There are two new additions to filters: Authentication Filters and Filter Overrides.&lt;/p&gt;

&lt;p&gt;Authentication filters are a new kind of filter in ASP.NET MVC that run prior to authorization filters in the ASP.NET MVC pipeline and allow you to specify authentication logic per-action, per-controller, or globally for all controllers. Authentication filters process credentials in the request and provide a corresponding principal. Authentication filters can also add authentication challenges in response to unauthorized requests.&lt;/p&gt;

&lt;p&gt;Override filters let you change which filters apply to a given action method or controller. Override filters specify a set of filter types that should not be run for a given scope (action or controller). This allows you to configure filters that apply globally but then exclude certain global filters from applying to specific actions or controllers.&lt;/p&gt;

&lt;h2&gt;ASP.NET Web API 2&lt;/h2&gt;

&lt;p&gt;ASP.NET Web API 2 includes a lot of new features.&lt;/p&gt;

&lt;h3&gt;Attribute Routing&lt;/h3&gt;

&lt;p&gt;ASP.NET Web API supports the same attribute routing system that's in ASP.NET MVC 5. You can read more about the Attribute Routing features in Web API in this &lt;a href="http://www.asp.net/web-api/overview/web-api-routing-and-actions/attribute-routing-in-web-api-2"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;OAuth 2.0&lt;/h3&gt;

&lt;p&gt;ASP.NET Web API picks up OAuth 2.0 support, using security middleware running on OWIN (discussed below). This is great for features like authenticated Single Page Applications.&lt;/p&gt;

&lt;h3&gt;OData Improvements&lt;/h3&gt;

&lt;p&gt;ASP.NET Web API now has full OData support. That required adding in some of the most powerful operators: $select, $expand, $batch and $value. You can read more about &lt;a href="http://www.asp.net/web-api/overview/odata-support-in-aspnet-web-api/using-$select,-$expand,-and-$value"&gt;OData operator support in this article by Mike Wasson&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lots more&lt;/p&gt;

&lt;p&gt;There's a huge list of other features, including CORS (cross-origin request sharing), IHttpActionResult, IHttpRequestContext, and more. I think the best overview is in the &lt;a href="http://www.asp.net/visual-studio/overview/2013/release-notes#TOC11"&gt;release notes&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;OWIN and Katana&lt;/h2&gt;

&lt;p&gt;I've written about &lt;a href="weblogs.asp.net/jgalloway/archive/2013/05/30/getting-up-to-speed-with-katana.aspx"&gt;OWIN and Katana recently&lt;/a&gt;. I'm a big fan.&lt;/p&gt;

&lt;p&gt;OWIN is the Open Web Interfaces for .NET. It's a spec, like HTML or HTTP, so you can't install OWIN. The benefit of OWIN is that it's a community specification, so anyone who implements it can plug into the ASP.NET stack, either as middleware or as a host.&lt;/p&gt;

&lt;p&gt;Katana is the Microsoft implementation of OWIN. It leverages OWIN to wire up things like authentication, handlers, modules, IIS hosting, etc., so ASP.NET can host OWIN components and Katana components can run in someone else's OWIN implementation.&lt;/p&gt;

&lt;p&gt;Howard Dierking just wrote a cool article in MSDN magazine describing Katana in depth: &lt;a href="http://msdn.microsoft.com/en-us/magazine/dn451439.aspx"&gt;Getting Started with the Katana Project&lt;/a&gt;. He had an interesting example showing an OWIN based pipeline which leveraged SignalR, ASP.NET Web API and NancyFx components in the same stack.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.msdn.microsoft.com/dn451439.Dierking_Figure11_hires(en-us,MSDN.10).png" /&gt;&lt;/p&gt;

&lt;p&gt;If this kind of thing makes sense to you, that's great. If it doesn't, don't worry, but keep an eye on it. You're going to see some cool things happen as a result of ASP.NET becoming more and more pluggable.&lt;/p&gt;

&lt;h2&gt;Visual Studio Web Tools&lt;/h2&gt;

&lt;p&gt;Okay, this stuff's just crazy. Visual Studio has been adding some nice web dev features over the past few years, but they've really cranked it up for this release. &lt;/p&gt;

&lt;p&gt;Visual Studio is by far my favorite code editor for all web files: CSS, HTML, JavaScript, and lots of popular libraries. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stop thinking of Visual Studio as a big editor that you only use to write back-end code. Stop editing HTML and CSS in Notepad (or Sublime, Notepad++, etc.). Visual Studio starts up in under 2 seconds on a modern computer with an SSD. Misspelling HTML attributes or your CSS classes or jQuery or Angular syntax is stupid. It doesn't make you a better developer, it makes you a silly person who wastes time.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Browser Link&lt;/h3&gt;

&lt;p&gt;Browser Link is a real-time, two-way connection between Visual Studio and all connected browsers. It's only attached when you're running locally, in debug, but it applies to any and all connected browser, including emulators.&lt;/p&gt;

&lt;p&gt;You may have seen demos that showed the browsers refreshing based on changes in the editor, and I'll agree that's pretty cool. But it's really just the start. It's a two-way connection, and it's built for extensiblity. That means you can write extensions that push information from your running application (in IE, Chrome, a mobile emulator, etc.) back to Visual Studio. Mads and team have showed off some demonstrations where they enabled edit mode in the browser which updated the source HTML back on the browser. It's also possible to look at how the rendered HTML performs, check for compatibility issues, watch for unused CSS classes, the sky's the limit.&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-Browser-Link/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;h3&gt;New HTML editor&lt;/h3&gt;

&lt;p&gt;The previous HTML editor had a lot of old code that didn't allow for improvements. The team rewrote the HTML editor to take advantage of the new(ish) extensibility features in Visual Studio, which then allowed them to &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/09/30/html-editing-features-in-visual-studio-2013-rc.aspx"&gt;add in all kinds of features&lt;/a&gt; - things like CSS Class and ID IntelliSense (so you type style=&amp;quot;&amp;quot; and get a list of classes and ID's for your project), smart indent based on how your document is formatted, JavaScript reference auto-sync, etc.&lt;/p&gt;

&lt;p&gt;Here's a 3 minute tour from Mads Kristensen.&lt;/p&gt;
&lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Blogs/ASP-NET-Site-Videos/Visual-Studio-2013-Web-Editor-Features-HTML-Editor/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;

&lt;h3&gt;Integrated Windows Azure Web Site creation and publishing&lt;/h3&gt;

&lt;p&gt;The &lt;a href="http://manage.windowsazure.com"&gt;Windows Azure portal&lt;/a&gt; is good as websites go, but it's another step to have to go to the portal to create a site, then download the publish profile, then import it into my site. It's like ten clicks or something and it just gets really fatiguing and sometimes I need a nap.&lt;/p&gt;

&lt;p&gt;They've updated the Server Explorer in Visual Studio 2013 so I can just right-click on the Windows Azure node to create a site. Then when I'm publishing, I can directly import the site publish profile and go. That means I can create a new Windows Azure Web Site, with a free 20 MB SQL Database, and publish it to Windows Azure all without leaving Visual Studio. That's really nice.&lt;/p&gt;

&lt;p&gt;&lt;a title="2013-10-17_15h56_26" href="http://www.flickr.com/photos/36836555@N00/10336195204/"&gt;&lt;img border="0" alt="2013-10-17_15h56_26" src="http://farm6.static.flickr.com/5504/10336195204_4ef39abec8_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More about that on this post: &lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/09/11/creating-new-windows-azure-web-site-from-visual-studio-2013-rc.aspx"&gt;Creating New Windows Azure Web Site from Visual Studio 2013 RC&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Lots more Visual Studio web dev features&lt;/h3&gt;

&lt;p&gt;That's just a sampling - there's a ton of great features for JavaScript editing, CSS editing, publishing, and Page Inspector (which shows real-time rendering of your page inside Visual Studio). &lt;a href="http://www.asp.net/visual-studio"&gt;Here are some more short videos&lt;/a&gt; showing those features.&lt;/p&gt;

&lt;p&gt;Lots, lots more&lt;/p&gt;

&lt;p&gt;Okay, that's just a summary, and it's still quite a bit. Head on over to &lt;a href="http://asp.net/vnext"&gt;http://asp.net/vnext&lt;/a&gt; for more information, and download Visual Studio 2013 now to get started!&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fuTNlQi-uU4:gjakaa3SaQs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fuTNlQi-uU4:gjakaa3SaQs:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=fuTNlQi-uU4:gjakaa3SaQs:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fuTNlQi-uU4:gjakaa3SaQs:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=fuTNlQi-uU4:gjakaa3SaQs:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/fuTNlQi-uU4" height="1" width="1" alt=""/&gt;</description><pubDate>Thu, 17 Oct 2013 21:36:03 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/top-things-web-developers-should-know-about-the-visual-studio-2013-release</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/free-6-hour-online-course-developing-asp-net-mvc-4-web-applications-jump-start</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/QOdcMf3dg0Q/free-6-hour-online-course-developing-asp-net-mvc-4-web-applications-jump-start</link><title>Free 6 hour online course - Developing ASP.NET MVC 4 Web Applications Jump Start</title><description>&lt;p&gt;&lt;strong&gt;The videos for the Developing ASP.NET MVC 4 Web Applications Jump Start Jump Start event are live on Microsoft Virtual Academy. This is an entire 9 session course, covering the official &lt;/strong&gt;&lt;a href="http://www.microsoft.com/learning/en-us/course.aspx?ID=20486B"&gt;&lt;strong&gt;ASP.NET MVC certification course material&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;. &lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;If you've been wanting to learn more about ASP.NET MVC - or are perhaps studying for the ASP.NET MVC 4 certification (&lt;a href="http://www.microsoft.com/learning/en-us/exam-70-486.aspx"&gt;70-486&lt;/a&gt;), this is a great way to get started.&lt;/p&gt;  &lt;p&gt;If you have friends or co-workers who are learning ASP.NET MVC, please share this with them.&lt;/p&gt;  &lt;p&gt;I had the privilege of working with &lt;a href="http://blog.geektrainer.com/p/about-christopher.html"&gt;Christopher Harrison&lt;/a&gt;, an actual professional trainer who knows this course material pretty well. I think the end result turned out really well - just as I was typing this post I heard from someone who told me how much they enjoyed it:&amp;#160; &lt;strong&gt;&lt;em&gt;&amp;quot;It's definitely a solid ramp up for people who are new (like myself) to MVC. Also, much more entertaining then most other tutorials I've seen around.&amp;quot;&lt;/em&gt;&lt;/strong&gt; That's exactly what we were hoping for - serious training that's fun to watch.&lt;/p&gt;  &lt;p&gt;For example, there were several surprise spaghetti awards given out by the video crew during the day.&lt;/p&gt;  &lt;p&gt;&lt;a title="Bonus spaghetti at MVA ASP.NET MVC 4 Jump Start" href="http://www.flickr.com/photos/36836555@N00/10175006723/"&gt;&lt;img border="0" alt="Bonus spaghetti at MVA ASP.NET MVC 4 Jump Start" src="http://farm3.static.flickr.com/2860/10175006723_8c21e761f8.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Take the course&lt;/h2&gt;  &lt;p&gt;The Microsoft Virtual Academy site has a nice system that tracks which modules you've completed, lets you download the slides for each course, etc. You can skip through the sessions as you want, and there's no big registration to go through to get started.&lt;/p&gt;  &lt;p&gt;So hop on over: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;Developing ASP.NET MVC 4 Web Applications Jump Start&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;What we covered&lt;/h2&gt;  &lt;p&gt;Here's a high level overview of what we covered:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Overview of ASP.NET MVC      &lt;ul&gt;       &lt;li&gt;What is ASP.NET MVC? &lt;/li&gt;        &lt;li&gt;How is ASP.NET MVC different from Web Forms? &lt;/li&gt;        &lt;li&gt;Why use ASP.NET MVC? &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Developing ASP.NET MVC 4 Controllers and Models      &lt;ul&gt;       &lt;li&gt;Creating Controllers &lt;/li&gt;        &lt;li&gt;Adding Actions &lt;/li&gt;        &lt;li&gt;Creating MVC Models &lt;/li&gt;        &lt;li&gt;Working with Code First &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Developing ASP.NET MVC 4 Views      &lt;ul&gt;       &lt;li&gt;Razor Syntax &lt;/li&gt;        &lt;li&gt;HTML Helpers &lt;/li&gt;        &lt;li&gt;Partial Views &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Integrating JavaScript and MVC      &lt;ul&gt;       &lt;li&gt;Using AJAX &lt;/li&gt;        &lt;li&gt;Using jQuery &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Implementing Web APIs      &lt;ul&gt;       &lt;li&gt;Developing Web API Controllers &lt;/li&gt;        &lt;li&gt;Calling HTTP Services from Client-Side Code &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Deploying ASP.NET MVC Site Walkthrough      &lt;ul&gt;       &lt;li&gt;Creating a site on Windows Azure Web Sites &lt;/li&gt;        &lt;li&gt;Deploying an ASP.NET MVC Application with Visual Studio Web Deploy &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;What’s Next and Resources      &lt;ul&gt;       &lt;li&gt;Sneak peak at Visual Studio 2013 (Preview) and ASP.NET MVC 5 tooling &lt;/li&gt;        &lt;li&gt;A look at real-time communications with SignalR &lt;/li&gt;        &lt;li&gt;Resources for keeping up with new ASP.NET releases &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Source Code&lt;/h2&gt;  &lt;p&gt;The source code for the session is available here: &lt;a href="http://sdrv.ms/1bHo6rU"&gt;sdrv.ms/1bHo6rU&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;No warranties&amp;#160; or anything on this - it's just what we built during the day. It is, however, based on the official ASP.NET MVC 4 course work, so if you do take the course it will be familiar.&lt;/p&gt;  &lt;h2&gt;Video from the course introduction&lt;/h2&gt;  &lt;p&gt;If you need a little more convincing, here's a video of the 30 minute introduction. &lt;/p&gt;  &lt;p&gt;&lt;em&gt;Disclaimer: This module starts with a quick introduction to ASP.NET MVC in general before we move systematically through the other components. Don't worry if it's too slow - or too fast - for you, &lt;/em&gt;&lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;&lt;em&gt;the rest of the course&lt;/em&gt;&lt;/a&gt;&lt;em&gt; goes more slowly and in more depth through each topic. &lt;/em&gt;&amp;#160;&lt;/p&gt; &lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Dev-ASP-MVC4-WebApps/01/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;  &lt;h2&gt;Let us know!&lt;/h2&gt;  &lt;p&gt;Did you like this course? Want to see more, or something different? &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;Please leave feedback on the course page - click the &amp;quot;Send feedback to the course owner&amp;quot; link&lt;/a&gt;.&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=QOdcMf3dg0Q:Cs4WOpRpS3Q:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=QOdcMf3dg0Q:Cs4WOpRpS3Q:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=QOdcMf3dg0Q:Cs4WOpRpS3Q:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=QOdcMf3dg0Q:Cs4WOpRpS3Q:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=QOdcMf3dg0Q:Cs4WOpRpS3Q:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/QOdcMf3dg0Q" height="1" width="1" alt=""/&gt;</description><pubDate>Wed, 09 Oct 2013 20:17:34 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/free-6-hour-online-course-developing-asp-net-mvc-4-web-applications-jump-start</feedburner:origLink></item><item><guid isPermaLink="false">http://weblogs.asp.net:80/jongalloway/free-online-training-event-developing-asp-net-mvc-4-web-applications-jump-start-sep-17</guid><link>http://feedproxy.google.com/~r/jongalloway/~3/t_TWJPZc8U8/free-online-training-event-developing-asp-net-mvc-4-web-applications-jump-start-sep-17</link><title>Free online training event: Developing ASP.NET MVC 4 Web Applications Jump Start (Sep 17)</title><description>&lt;p&gt;&lt;b&gt;This course is now available online: &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#fbid=F4KOaVqyxYX"&gt;Developing ASP.NET MVC 4 Web Applications Jump Start&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Join me and &lt;a href="http://blog.geektrainer.com/p/about-christopher.html"&gt;Christopher Harrison&lt;/a&gt; (&lt;a href="https://twitter.com/geektrainer"&gt;@geektrainer&lt;/a&gt;) for a free, full day online training event on Developing ASP.NET MVC4 Web Applications! There's still space available, so &lt;a href="http://www.microsoftvirtualacademy.com/liveevents/developing-asp-net-mvc4-web-applications-jump-start#fbid=MBmoibN1mwi"&gt;&lt;strong&gt;register now&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a title="MVA - ASP.NET MVC 4 Jump Start" href="http://www.microsoftvirtualacademy.com/liveevents/developing-asp-net-mvc4-web-applications-jump-start#fbid=X2Ekao9Tj7M"&gt;&lt;img style="float: none; margin-left: auto; display: block; margin-right: auto" border="0" alt="MVA - ASP.NET MVC 4 Jump Start" src="http://farm3.static.flickr.com/2849/9717628473_9847ce3137_b.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Microsoft Virtual Academy (MVA) runs great, high quality live training events. Earlier this year, I had the opportunity to participate in the &lt;a href="http://www.microsoftvirtualacademy.com/training-courses/create-web-apps-with-asp-net#fbid=MBmoibN1mwi"&gt;Building Web Apps with ASP.NET Jump Start with Scott Hanselman and Damian Edwards&lt;/a&gt;. For that event, we overviewed the Microsoft web platform, including a lot of new and preview features.&lt;/p&gt;  &lt;p&gt;For this upcoming event, we're going to be sticking closer to the curriculum for the &lt;a href="http://www.microsoft.com/learning/en-us/exam-70-486.aspx"&gt;Developing ASP.NET MVC 4 Web Applications certification exam (70-486) curriculum&lt;/a&gt;. Christopher is a full time, professional instructor (MCT, MCPD, MCITP) who's helped people prepare for this exam, and we're going to be basing the Jump Start content on what you'd learn in a 70-486 certification course.&lt;/p&gt;  &lt;p&gt;Here's an overview of what we're planning to cover:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Overview of MVC      &lt;ul&gt;       &lt;li&gt;What is MVC? &lt;/li&gt;        &lt;li&gt;How is MVC different from Web Forms? &lt;/li&gt;        &lt;li&gt;Why use MVC? &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Developing ASP.NET MVC 4 Controllers and Models      &lt;ul&gt;       &lt;li&gt;Creating Controllers &lt;/li&gt;        &lt;li&gt;Adding Actions &lt;/li&gt;        &lt;li&gt;Creating MVC Models &lt;/li&gt;        &lt;li&gt;Working with Code First &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Developing ASP.NET MVC 4 Views      &lt;ul&gt;       &lt;li&gt;Razor Syntax &lt;/li&gt;        &lt;li&gt;HTML Helpers &lt;/li&gt;        &lt;li&gt;Partial Views &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Integrating JavaScript and MVC      &lt;ul&gt;       &lt;li&gt;Using AJAX &lt;/li&gt;        &lt;li&gt;Using jQuery &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Implementing Web APIs      &lt;ul&gt;       &lt;li&gt;Developing Web API Controllers &lt;/li&gt;        &lt;li&gt;Calling HTTP Services from Client-Side Code &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Deploying ASP.NET MVC Site Walkthrough      &lt;ul&gt;       &lt;li&gt;Creating a site on Windows Azure Web Sites &lt;/li&gt;        &lt;li&gt;Deploying an ASP.NET MVC Application with Visual Studio Web Deploy &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;What’s Next and Resources      &lt;ul&gt;       &lt;li&gt;Sneak peak at Visual Studio 2013 (Preview) and ASP.NET MVC 5 tooling &lt;/li&gt;        &lt;li&gt;A look at real-time communications with SignalR &lt;/li&gt;        &lt;li&gt;Resources for keeping up with new ASP.NET releases &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Note that this is a Jump Start to help you get started preparing for the certification exam, but with a one day event we're only covering a portion of the content that's on the exam. Don't expect to watch this and breeze through the exam... but it's a start.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;And if you're just new to ASP.NET MVC and want a full day (free!) day of training, this is a great opportunity.&lt;/strong&gt; We're working off some of the certification content, but you don't need to be working towards the certification to take or benefit from the class.&lt;/p&gt;  &lt;p&gt;To get you warmed up for it, here's the one hour introduction to ASP.NET MVC 4 from the Building Web Apps with ASP.NET Jump Start this past February.&lt;/p&gt; &lt;iframe style="height: 540px; width: 960px" src="http://channel9.msdn.com/Series/Building-Web-Apps-with-ASP-NET-Jump-Start/Building-Web-Apps-with-ASPNET-Jump-Start-02-Building-and-Deploying-Websites-with-ASPNET-MVC-4/player?w=960&amp;amp;h=540" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=t_TWJPZc8U8:3wV5B8IbOaE:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=t_TWJPZc8U8:3wV5B8IbOaE:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?i=t_TWJPZc8U8:3wV5B8IbOaE:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=t_TWJPZc8U8:3wV5B8IbOaE:7Q72WNTAKBA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=7Q72WNTAKBA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/jongalloway?a=t_TWJPZc8U8:3wV5B8IbOaE:G79ilh31hkQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/jongalloway?d=G79ilh31hkQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jongalloway/~4/t_TWJPZc8U8" height="1" width="1" alt=""/&gt;</description><pubDate>Tue, 10 Sep 2013 20:44:00 Z</pubDate><feedburner:origLink xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://weblogs.asp.net:80/jongalloway/free-online-training-event-developing-asp-net-mvc-4-web-applications-jump-start-sep-17</feedburner:origLink></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/292/configuring-sql-server-for-session-state-in-mvc-6</guid><title>Configuring SQL Server For Session State In MVC 6</title><description>This  article looks at the steps required to enable SQL Server as a backing store for Session State in an ASP.NET 5 MVC 6 application. It builds on my previous article which introduces &lt;a href="http://www.mikesdotnetting.com/article/270/sessions-in-asp-net-5"&gt;how to configure and use session state in ASP.NET 5&lt;/a&gt;.</description><a10:link href="http://www.mikesdotnetting.com/Article/292/configuring-sql-server-for-session-state-in-mvc-6" /><a10:updated>2016-01-11T13:14:46Z</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/291/seo-for-asp-net-web-sites-getting-content-indexed</guid><title>SEO For ASP.NET Web Sites: Getting content indexed</title><description>This is the last in a series of articles that explore how to optimise ASP.NET web sites for search engines.  Each article in the series concentrates on a specific topic and looks at the features and tools available to ASP.NET developers to help make  sites search engine friendly and thereby improve rankings and click throughs from search results. This article explores how to ensure that search engines are aware of all of the content you want them to crawl and how to inform them when the location of that content is no longer valid.</description><a10:link href="http://www.mikesdotnetting.com/Article/291/seo-for-asp-net-web-sites-getting-content-indexed" /><a10:updated>2015-12-16T10:39:34Z</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/290/seo-for-asp-net-web-sites-urls</guid><title>SEO For ASP.NET Web Sites: URLs</title><description>This is the second in a series of articles that explore how to optimise ASP.NET web sites for search engines. Each article in the series concentrates on a specific topic and looks at the features and tools available to ASP.NET developers to help make  sites search engine friendly and thereby improve rankings and click throughs from search results. This article will looks at some best practices concerning your site's URLs and how to make them more user friendly for search engines and humans alike.</description><a10:link href="http://www.mikesdotnetting.com/Article/290/seo-for-asp-net-web-sites-urls" /><a10:updated>2015-12-16T07:30:06Z</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/289/seo-for-asp-net-web-sites-content</guid><title>SEO For ASP.NET Web Sites: Content</title><description>This is the first in a series of articles that explore how to optimise ASP.NET web sites for search engines.  Each article in the series concentrates on a specific topic and looks at the features and tools available to ASP.NET developers to help make  sites search engine friendly and thereby improve rankings and click-throughs from search results. This first article will look at how to present your site content to search engines in the most optimal way. </description><a10:link href="http://www.mikesdotnetting.com/Article/289/seo-for-asp-net-web-sites-content" /><a10:updated>2015-12-16T07:29:24Z</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/288/asp-net-5-uploading-files-with-asp-net-mvc-6</guid><title>ASP.NET 5: Uploading files with ASP.NET MVC 6</title><description>Handling file uploads has changed quite a bit in ASP.NET 5. This article looks at the new objects that have been introduced to replace the old System.Web based approach from previous versions of ASP.NET.</description><a10:link href="http://www.mikesdotnetting.com/Article/288/asp-net-5-uploading-files-with-asp-net-mvc-6" /><a10:updated>2015-11-21T22:14:42Z</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/287/uploading-multiple-files-with-asp-net-mvc</guid><title>Uploading multiple files with ASP.NET MVC</title><description>I have looked at uploading individual files and downloading multiple files in MVC, and I've had a few requests recently asking me to complete the series by showing how to upload multiple files in an ASP.NET MVC application.</description><a10:link href="http://www.mikesdotnetting.com/Article/287/uploading-multiple-files-with-asp-net-mvc" /><a10:updated>2015-10-19T21:09:44+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/286/downloading-multiple-files-in-asp-net</guid><title>Downloading multiple files in ASP.NET</title><description>This short article examines the baffling issue that a lot of people seem to encounter when attempting to send multiple files to the client from an ASP.NET application, and provides the solution. </description><a10:link href="http://www.mikesdotnetting.com/Article/286/downloading-multiple-files-in-asp-net" /><a10:updated>2015-10-09T08:53:00+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/285/asp-net-5-dependency-injection-and-services-in-mvc</guid><title>ASP.NET 5: Dependency Injection and Services in MVC</title><description>This is the fourth in a series of articles that explores ASP.NET 5 by reconstructing the Visual Studio 2015 Web Application template from an Empty template. This article looks at the role of services and the new ASP.NET 5 dependency injection system. The series of articles has been developed using Visual Studio RTM and ASP.NET 5 Beta 6. It will be kept updated along with newer releases.</description><a10:link href="http://www.mikesdotnetting.com/Article/285/asp-net-5-dependency-injection-and-services-in-mvc" /><a10:updated>2015-12-04T20:57:49Z</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/284/asp-net-5-configuration</guid><title>ASP.NET 5: Configuration</title><description>This is the third in a series of articles that explores  ASP.NET 5 by reconstructing the Visual Studio 2015 Web Application template  from an Empty template.  This  article looks at the new configuration system added to ASP.NET 5 and will also cover how services like Entity Framework and MVC itself are added to the project. The series of articles has been developed using Visual Studio RTM and ASP.NET 5 Beta 6. It will be kept updated along with newer releases.</description><a10:link href="http://www.mikesdotnetting.com/Article/284/asp-net-5-configuration" /><a10:updated>2015-09-04T09:32:01+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/283/asp-net-5-managing-client-side-dependencies-with-npm-bower-and-gulp</guid><title>ASP.NET 5: Managing Client-side Dependencies with NPM, Bower and Gulp</title><description>This is the second in a series of articles that explores what's new in ASP.NET 5 by starting with the Visual Studio 2015 Empty site template and progressively adding files to emulate the Web Application template contents and structure. While not actually part of the ASP.NET 5 framework, this article explores the recommended tools for managing client-side dependencies: NPM, Bower and Gulp. These tools are very popular among front-end developers working with other frameworks and now that they have been integrated as first class citizens in Visual Studio 2015, their use is encouraged among .NET developers. The series of articles has been developed using Visual Studio 2015 and ASP.NET 5 Beta 6. It will be kept updated along with newer releases.</description><a10:link href="http://www.mikesdotnetting.com/Article/283/asp-net-5-managing-client-side-dependencies-with-npm-bower-and-gulp" /><a10:updated>2015-11-02T09:20:35Z</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/282/asp-net-5-project-basics</guid><title>ASP.NET 5 Project Basics</title><description>When you create a new ASP.NET web application using the Web Application template, you are presented with a raft of new folders and files in a completely new structure. This article is the first in a series that attempts to demystify the new structure and the role that some of these files play. The article series starts with the Empty template and adds the various files that you might see in the web application template progressively to illustrate their purpose. This article uses Visual Studio 2105 RTM and ASP.NET 5 Beta 6. It will be updated in line with future releases.</description><a10:link href="http://www.mikesdotnetting.com/Article/282/asp-net-5-project-basics" /><a10:updated>2015-08-04T13:20:07+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/281/implementing-googles-eu-end-user-consent-policy</guid><title>Implementing Google's EU End User Consent Policy</title><description>The European Union introduced laws some while ago requiring web sites to obtain consent from EU visitors to allow the use of cookies. Most larger corporate sites have implemented a policy for obtaining consent - or an "implied consent" solution, but countless smaller sites and blogs like mine have not bothered. That's about to change for a number of us who are Google Adsense publishers (we carry Google adverts on our sites) because Google has introduced a new EU user consent policy which must be followed by those of us who use products like Google Adsense (and who want to continue using them). This article is a quick overview of what the policy is about, and how I implemented a quick and effective solution. </description><a10:link href="http://www.mikesdotnetting.com/Article/281/implementing-googles-eu-end-user-consent-policy" /><a10:updated>2015-07-29T21:57:50+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/280/solved-the-microsoft-ace-oledb-12-0-provider-is-not-registered-on-the-local-machine</guid><title>Solved - The Microsoft.ACE.OLEDB.12.0 provider is not registered on the local machine</title><description>There are a number of reasons why you might get &amp;quot;The 'Microsoft.ACE.OLEDB.12.0' provider is not registered on the local machine&amp;quot; error when attempting to connect to either an accdb or an xlsx file, depending on what you are doing. This article discusses some of the causes and provides solutions first for uses involving ASP.NET, and then looking at other application uses.</description><a10:link href="http://www.mikesdotnetting.com/Article/280/solved-the-microsoft-ace-oledb-12-0-provider-is-not-registered-on-the-local-machine" /><a10:updated>2015-09-22T09:09:23+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/279/reading-text-based-files-in-asp-net</guid><title>Reading Text-based Files In ASP.NET</title><description>Every time I need to work with the contents of text-based files in an ASP.NET application I invariably start off thinking about using the various static methods on the &lt;code&gt;System.IO.File&lt;/code&gt; class to extract the text and then some string manipulation or Regex to parse the content into some kind of structure. And, just in time, I remember the &lt;code&gt;TextFieldParser&lt;/code&gt; class that hides itself away in the &lt;code&gt;Microsoft.VisualBasic&lt;/code&gt; assembly. The purpose of this article is to introduce this component to a wider audience, but also to serve me as an aide-mémoire in terms of the basic usage, which I always have to look up.</description><a10:link href="http://www.mikesdotnetting.com/Article/279/reading-text-based-files-in-asp-net" /><a10:updated>2015-07-17T13:43:14+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/278/a-better-way-to-export-gridviews-to-excel</guid><title>A Better Way To Export Gridviews To Excel</title><description>There are countless articles that demonstrate exporting ASP.NET GridViews to Excel.  They pretty much all do the same thing - they use the RenderControl method to generate HTML and then save it to a file with a .xls extension. This kind of works, but the resulting file is actually an HTML file masquerading as an Excel file. And that has two flaws: it cannot be used as a data source because providers complain that it is not in an acceptable format, and users of Office 2007 or newer are always confronted with a warning about the contents of the file when they try to open it, causing confusion, suspicion or annoyance. This article shows how to use the free, open source  library to export the content of a GridView control to a genuine .xlsx file that doesn't suffer these problems.</description><a10:link href="http://www.mikesdotnetting.com/Article/278/a-better-way-to-export-gridviews-to-excel" /><a10:updated>2015-12-01T12:30:31Z</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/277/reading-excel-files-without-saving-to-disk-in-asp-net</guid><title>Reading Excel Files Without Saving To Disk In ASP.NET</title><description>This article allows me the opportunity to demonstrate a feature of my newest favourite open source library: &lt;a href="http://epplus.codeplex.com/"&gt;EPPlus&lt;/a&gt;. EPPlus is a .net library that reads and writes Excel 2007+ files using the Open Office Xml format (xlsx). This fantastic, easy to use (and free) library enables the use of Excel in ASP.NET applications without the need to install the Access Database Engine (ACE) or having to mess about with  unsupported Office Automation on the web server (assuming you can even get Office installed there). Prompted by a rash of similar questions that appeared on the ASP.NET forums recently, this article looks at reading the contents of an uploaded Excel file without saving it, and displaying the data in a Web Forms GridView.</description><a10:link href="http://www.mikesdotnetting.com/Article/277/reading-excel-files-without-saving-to-disk-in-asp-net" /><a10:updated>2015-07-09T11:08:35+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/276/entity-framework-recipe-many-to-many-relationship-on-the-same-table</guid><title>Entity Framework Recipe: Many To Many Relationship On The Same Table</title><description>This article looks at how to configure Entity Framework to manage many to many relationships based on the same table. This scenario arises the same entity is related to itself in a different role. An example is the related product feature you might see in a "People also bought" section of an ecommerce site. Another is the relationship between clients and agencies in the advertising and marketing world. That scenario will form the basis of the illustration below.</description><a10:link href="http://www.mikesdotnetting.com/Article/276/entity-framework-recipe-many-to-many-relationship-on-the-same-table" /><a10:updated>2015-06-18T13:56:07+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/275/custom-taghelpers-in-asp-net-mvc-6</guid><title>Custom TagHelpers in ASP.NET MVC 6</title><description>TagHelpers is one of the new features introduced in MVC 6, part of ASP.NET 5. They are used for generating reusable pieces of UI that require some kind of server-side processing. I took a closer look at the built-in collection of TagHelpers in my last article, &lt;a href="http://www.mikesdotnetting.com/article/274/introducing-taghelpers-in-asp-net-mvc-6" title="Introducing TagHelpers in ASP.NET MVC 6"&gt;Introducing TagHelpers in ASP.NET MVC 6&lt;/a&gt;. This article shows how to create your own custom TagHelpers. It will illustrate two ways of doing so: through parsing custom attributes; and by binding properties on the TagHelper.</description><a10:link href="http://www.mikesdotnetting.com/Article/275/custom-taghelpers-in-asp-net-mvc-6" /><a10:updated>2015-07-30T08:32:26+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/274/introducing-taghelpers-in-asp-net-mvc-6</guid><title>Introducing TagHelpers in ASP.NET MVC 6</title><description>TagHelpers is one of the new features introduced in MVC 6. The TagHelper's role is similar to the one played in previous versions of ASP.NET MVC by HtmlHelpers: they are designed to simplify the work required to author views that need to respond dynamically to the data provided to them. However, the way in which they work and their impact on view design is very different to HtmlHelpers.</description><a10:link href="http://www.mikesdotnetting.com/Article/274/introducing-taghelpers-in-asp-net-mvc-6" /><a10:updated>2015-07-30T08:31:48+01:00</a10:updated></item><item><guid isPermaLink="false">http://www.mikesdotnetting.com/Article/273/using-the-htmlagilitypack-to-parse-html-in-asp-net</guid><title>Using the HtmlAgilityPack to parse HTML in ASP.NET</title><description>Hardly a week goes by without someone asking a question in the ASP.NET forums about parsing HTML for one purpose or another. Mostly, the questions are couched in terms of 'finding values' or similar, prompting responses from the community that recommend one regular expression pattern or another, treating HTML as a string of text with no structure or rules. In fact, HTML is a structured document format with a set of very clearly defined rules, which means that it can easily be parsed given the right tool. My favourite tool for parsing HTML is the HtmlAgilityPack.</description><a10:link href="http://www.mikesdotnetting.com/Article/273/using-the-htmlagilitypack-to-parse-html-in-asp-net" /><a10:updated>2015-04-30T13:26:48+01:00</a10:updated></item></channel></rss>